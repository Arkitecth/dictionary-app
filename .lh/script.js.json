{
    "sourceFile": "script.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 594,
            "patches": [
                {
                    "date": 1689876012195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1689878039255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1 @@\n+class App\n\\ No newline at end of file\n"
                },
                {
                    "date": 1689878048887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,5 @@\n-class App\n\\ No newline at end of file\n+class App {\n+    constructor() {\n+        \n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1689878071831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,9 @@\n class App {\n     constructor() {\n+\n+    }\n+\n+    run() {\n         \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1689878078022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,6 @@\n class App {\n-    constructor() {\n \n-    }\n+    run() {\n \n-    run() {\n-        \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1689878095210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n class App {\n-\n     run() {\n \n     }\n-}\n\\ No newline at end of file\n+}\n+\n+const app = App(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689878152801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,5 +3,6 @@\n \n     }\n }\n \n-const app = App(); \n\\ No newline at end of file\n+const app = new App(); \n+app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689878166857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n class App {\n     run() {\n-\n+        alert(\"HELLO FROM THE OUTSIDE!!\")\n     }\n }\n \n const app = new App(); \n"
                },
                {
                    "date": 1689878224886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n class App {\n     run() {\n-        alert(\"HELLO FROM THE OUTSIDE!!\")\n+        alert(\"HELLO FROM THE OUTSIDE!!\"); \n     }\n }\n \n const app = new App(); \n"
                },
                {
                    "date": 1689878237346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,6 +3,10 @@\n         alert(\"HELLO FROM THE OUTSIDE!!\"); \n     }\n }\n \n+class UI {\n+    \n+}\n+\n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689878363579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n     }\n }\n \n class UI {\n-    \n+    constructor(arrowDown)\n }\n \n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689878396853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,11 @@\n     }\n }\n \n class UI {\n-    constructor(arrowDown)\n+    constructor(body, arrowDown) {\n+        this.body = body\n+    }\n }\n \n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689878417066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,15 @@\n class App {\n+    \n     run() {\n         alert(\"HELLO FROM THE OUTSIDE!!\"); \n     }\n }\n \n class UI {\n     constructor(body, arrowDown) {\n-        this.body = body\n+        this.body = body; \n+        this.arrowDown = arrowDown; \n     }\n }\n \n const app = new App(); \n"
                },
                {
                    "date": 1689878435951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n class App {\n-    \n+    constructor() {\n+        \n+    }\n     run() {\n         alert(\"HELLO FROM THE OUTSIDE!!\"); \n     }\n }\n"
                },
                {
                    "date": 1689878449269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n class App {\n     constructor() {\n-        \n+        this.ui = new UI()\n     }\n     run() {\n         alert(\"HELLO FROM THE OUTSIDE!!\"); \n     }\n"
                },
                {
                    "date": 1689878456869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n class App {\n     constructor() {\n+        this.arrowDown = \n         this.ui = new UI()\n     }\n     run() {\n         alert(\"HELLO FROM THE OUTSIDE!!\"); \n"
                },
                {
                    "date": 1689878480271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n class App {\n     constructor() {\n-        this.arrowDown = \n+        this.arrowDown = document.querySelector(\".arrow-down\")\n         this.ui = new UI()\n     }\n     run() {\n         alert(\"HELLO FROM THE OUTSIDE!!\"); \n"
                },
                {
                    "date": 1689878489342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n class App {\n     constructor() {\n-        this.arrowDown = document.querySelector(\".arrow-down\")\n-        this.ui = new UI()\n+        this.arrowDown = document.querySelector(\".arrow-down\"); \n+        this.ui = new UI(this.arrowDown)\n     }\n     run() {\n         alert(\"HELLO FROM THE OUTSIDE!!\"); \n     }\n"
                },
                {
                    "date": 1689878497432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n class App {\n     constructor() {\n         this.arrowDown = document.querySelector(\".arrow-down\"); \n+        this.body = \n         this.ui = new UI(this.arrowDown)\n     }\n     run() {\n         alert(\"HELLO FROM THE OUTSIDE!!\"); \n"
                },
                {
                    "date": 1689878505064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n class App {\n     constructor() {\n         this.arrowDown = document.querySelector(\".arrow-down\"); \n-        this.body = \n+        this.body = document.querySelector(\"body\")\n         this.ui = new UI(this.arrowDown)\n     }\n     run() {\n         alert(\"HELLO FROM THE OUTSIDE!!\"); \n"
                },
                {
                    "date": 1689878511397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n class App {\n     constructor() {\n         this.arrowDown = document.querySelector(\".arrow-down\"); \n-        this.body = document.querySelector(\"body\")\n-        this.ui = new UI(this.arrowDown)\n+        this.body = document.querySelector(\"body\"); \n+        this.ui = new UI(body, this.arrowDown)\n     }\n     run() {\n         alert(\"HELLO FROM THE OUTSIDE!!\"); \n     }\n"
                },
                {
                    "date": 1689878526219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n         this.arrowDown = document.querySelector(\".arrow-down\"); \n         this.body = document.querySelector(\"body\"); \n         this.ui = new UI(body, this.arrowDown)\n     }\n+    \n     run() {\n         alert(\"HELLO FROM THE OUTSIDE!!\"); \n     }\n }\n"
                },
                {
                    "date": 1689878580383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,13 @@\n         this.arrowDown = document.querySelector(\".arrow-down\"); \n         this.body = document.querySelector(\"body\"); \n         this.ui = new UI(body, this.arrowDown)\n     }\n-    \n+\n+\n+\n     run() {\n-        alert(\"HELLO FROM THE OUTSIDE!!\"); \n+        this.arrowDown.t\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689878590017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n \n \n     run() {\n-        this.arrowDown.t\n+        this.arrowDown.addEventListener(\"click\")\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689878720538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,17 @@\n class App {\n     constructor() {\n-        this.arrowDown = document.querySelector(\".arrow-down\"); \n+        this._arrowDownarrowDown = document.querySelector(\".arrow-down\"); \n         this.body = document.querySelector(\"body\"); \n         this.ui = new UI(body, this.arrowDown)\n     }\n \n \n \n     run() {\n-        this.arrowDown.addEventListener(\"click\")\n+        this.arrowDown.addEventListener(\"click\", () => {\n+            this.ui.\n+        })\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689878727018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n class App {\n     constructor() {\n-        this._arrowDownarrowDown = document.querySelector(\".arrow-down\"); \n-        this.body = document.querySelector(\"body\"); \n-        this.ui = new UI(body, this.arrowDown)\n+        this._arrowDown = document.querySelector(\".arrow-down\"); \n+        this._body = document.querySelector(\"body\"); \n+        this._ui = new UI(body, this.arrowDown)\n     }\n \n \n \n"
                },
                {
                    "date": 1689878732955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n \n \n     run() {\n-        this.arrowDown.addEventListener(\"click\", () => {\n+        this._arrowDown.addEventListener(\"click\", () => {\n             this.ui.\n         })\n     }\n }\n"
                },
                {
                    "date": 1689878766868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \n \n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n-            this.ui.\n+            this._ui.\n         })\n     }\n }\n \n@@ -18,8 +18,9 @@\n     constructor(body, arrowDown) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n     }\n+    \n }\n \n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689878862188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,12 @@\n class App {\n-    constructor() {\n-        this._arrowDown = document.querySelector(\".arrow-down\"); \n-        this._body = document.querySelector(\"body\"); \n-        this._ui = new UI(body, this.arrowDown)\n-    }\n \n+    arrowDown = document.querySelector(\".arrow-down\"); \n+    body = document.querySelector(\"body\"); \n+    ui = new UI(body, this.arrowDown)\n \n \n+\n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n             this._ui.\n         })\n@@ -18,9 +17,9 @@\n     constructor(body, arrowDown) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n     }\n-    \n+\n }\n \n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689878887546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n class App {\n \n-    arrowDown = document.querySelector(\".arrow-down\"); \n-    body = document.querySelector(\"body\"); \n-    ui = new UI(body, this.arrowDown)\n+    this._arrowDown = document.querySelector(\".arrow-down\"); \n+    this._body = document.querySelector(\"body\"); \n+    this._ui = new UI(body, this.arrowDown)\n \n \n \n     run() {\n"
                },
                {
                    "date": 1689878899983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n class App {\n+    constructor() {\n+        this._arrowDown = document.querySelector(\".arrow-down\"); \n+        this._body = document.querySelector(\"body\"); \n+        this._ui = new UI(body, this.arrowDown)\n+    }\n \n-    this._arrowDown = document.querySelector(\".arrow-down\"); \n-    this._body = document.querySelector(\"body\"); \n-    this._ui = new UI(body, this.arrowDown)\n \n \n-\n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n             this._ui.\n         })\n@@ -17,9 +18,9 @@\n     constructor(body, arrowDown) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n     }\n-\n+    \n }\n \n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689879012156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,11 @@\n class App {\n+\n+    this._arrowDown = document.querySelector(\".arrow-down\"); \n+    this._body = document.querySelector(\"body\"); \n+    this._ui = new UI(body, this.arrowDown)\n     constructor() {\n-        this._arrowDown = document.querySelector(\".arrow-down\"); \n-        this._body = document.querySelector(\"body\"); \n-        this._ui = new UI(body, this.arrowDown)\n+      \n     }\n \n \n \n"
                },
                {
                    "date": 1689879043818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,18 @@\n class App {\n \n-    this._arrowDown = document.querySelector(\".arrow-down\"); \n-    this._body = document.querySelector(\"body\"); \n-    this._ui = new UI(body, this.arrowDown)\n+    _arrowDown = document.querySelector(\".arrow-down\"); \n+   _body = document.querySelector(\"body\"); \n+_ui = new UI(body, this.arrowDown)\n     constructor() {\n       \n     }\n \n \n \n     run() {\n-        this._arrowDown.addEventListener(\"click\", () => {\n-            this._ui.\n+        _arrowDown.addEventListener(\"click\", () => {\n+            _arrowDown.add\n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689879057157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,18 @@\n class App {\n \n     _arrowDown = document.querySelector(\".arrow-down\"); \n    _body = document.querySelector(\"body\"); \n-_ui = new UI(body, this.arrowDown)\n+   _ui = new UI(body, this.arrowDown)\n     constructor() {\n       \n     }\n \n \n \n     run() {\n         _arrowDown.addEventListener(\"click\", () => {\n-            _arrowDown.add\n+            this._arrowDown.\n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689879064467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,8 @@\n \n     _arrowDown = document.querySelector(\".arrow-down\"); \n    _body = document.querySelector(\"body\"); \n    _ui = new UI(body, this.arrowDown)\n-    constructor() {\n-      \n-    }\n \n \n \n     run() {\n"
                },
                {
                    "date": 1689879072010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n class App {\n \n     _arrowDown = document.querySelector(\".arrow-down\"); \n-   _body = document.querySelector(\"body\"); \n-   _ui = new UI(body, this.arrowDown)\n+   _body = document.querySelector(\"body\");\n+_ui = new UI(body, this.arrowDown)\n \n \n \n     run() {\n"
                },
                {
                    "date": 1689879079602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n class App {\n-\n+    \n     _arrowDown = document.querySelector(\".arrow-down\"); \n    _body = document.querySelector(\"body\");\n-_ui = new UI(body, this.arrowDown)\n+   _ui = new UI(body, this.arrowDown)\n \n \n \n     run() {\n"
                },
                {
                    "date": 1689879134559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,16 @@\n class App {\n-    \n-    _arrowDown = document.querySelector(\".arrow-down\"); \n-   _body = document.querySelector(\"body\");\n-   _ui = new UI(body, this.arrowDown)\n+    constructor() {\n+        this._arrowDown = document.querySelector(\".arrow-down\"); \n+        this._body = document.querySelector(\"body\"); \n+        this._ui = new UI(body, this.arrowDown)\n+    }\n \n \n \n     run() {\n-        _arrowDown.addEventListener(\"click\", () => {\n-            this._arrowDown.\n+        this.arrowDown.addEventListener(\"click\", () => {\n+            this.ui.\n         })\n     }\n }\n \n@@ -17,9 +18,8 @@\n     constructor(body, arrowDown) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n     }\n-    \n }\n \n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689879144880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,13 +4,11 @@\n         this._body = document.querySelector(\"body\"); \n         this._ui = new UI(body, this.arrowDown)\n     }\n \n-\n-\n     run() {\n         this.arrowDown.addEventListener(\"click\", () => {\n-            this.ui.\n+            this._ui = \n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689879160708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n         this._ui = new UI(body, this.arrowDown)\n     }\n \n     run() {\n-        this.arrowDown.addEventListener(\"click\", () => {\n+        this._arrowDown.addEventListener(\"click\", () => {\n             this._ui = \n         })\n     }\n }\n"
                },
                {
                    "date": 1689879206080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n class App {\n     constructor() {\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n-        this._ui = new UI(body, this.arrowDown)\n+        this._ui = new UI(this.body, this.arrowDown)\n     }\n \n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n-            this._ui = \n+            this._ui.\n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689879250327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n class App {\n     constructor() {\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n-        this._ui = new UI(this.body, this.arrowDown)\n+        this._ui = new UI(this._body, this.arrowDown)\n     }\n \n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n-            this._ui.\n+            this._ui.arrowDownModal(); \n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689879258465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,10 @@\n     constructor(body, arrowDown) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n     }\n+\n+   arrowDownModal(); \n }\n \n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689879264651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,11 @@\n         this.body = body; \n         this.arrowDown = arrowDown; \n     }\n \n-   arrowDownModal(); \n+   arrowDownModal() {\n+    \n+   } \n }\n \n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689879272460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,10 @@\n     }\n \n    arrowDownModal() {\n     \n-   } \n+   }\n+\n }\n \n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689879291827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n         this.arrowDown = arrowDown; \n     }\n \n    arrowDownModal() {\n-    \n+\n    }\n \n }\n \n"
                },
                {
                    "date": 1689880270808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n class App {\n     constructor() {\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n-        this._ui = new UI(this._body, this.arrowDown)\n+        this._ui = new UI(this._body, this._arrowDown)\n     }\n \n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n@@ -18,9 +18,9 @@\n         this.arrowDown = arrowDown; \n     }\n \n    arrowDownModal() {\n-\n+    this.arrowDown.c\n    }\n \n }\n \n"
                },
                {
                    "date": 1689880305685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n         this.arrowDown = arrowDown; \n     }\n \n    arrowDownModal() {\n-    this.arrowDown.c\n+    \n    }\n \n }\n \n"
                },
                {
                    "date": 1689880342063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n class App {\n     constructor() {\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n-        this._ui = new UI(this._body, this._arrowDown)\n+        this._ui = new UI(this._body, this._arrowDown, this._modal)\n     }\n \n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n@@ -18,9 +18,9 @@\n         this.arrowDown = arrowDown; \n     }\n \n    arrowDownModal() {\n-    \n+\n    }\n \n }\n \n"
                },
                {
                    "date": 1689880352690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n class App {\n     constructor() {\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n+        this._modal = document.querySelector(\".modal\"); \n         this._ui = new UI(this._body, this._arrowDown, this._modal)\n     }\n \n     run() {\n"
                },
                {
                    "date": 1689880371218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,11 +13,12 @@\n     }\n }\n \n class UI {\n-    constructor(body, arrowDown) {\n+    constructor(body, arrowDown, modal) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n+        this.modal = \n     }\n \n    arrowDownModal() {\n \n"
                },
                {
                    "date": 1689880378285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n class UI {\n     constructor(body, arrowDown, modal) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n-        this.modal = \n+        this.modal = modal; \n     }\n \n    arrowDownModal() {\n \n"
                },
                {
                    "date": 1689880425291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         this.modal = modal; \n     }\n \n    arrowDownModal() {\n-\n+    this.modal  = \n    }\n \n }\n \n"
                },
                {
                    "date": 1689880432250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,11 +18,11 @@\n         this.body = body; \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n     }\n-\n-   arrowDownModal() {\n-    this.modal  = \n+    \n+    arrowDownModal() {\n+        this.modal  = \n    }\n \n }\n \n"
                },
                {
                    "date": 1689880447186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         this.modal = modal; \n     }\n     \n     arrowDownModal() {\n-        this.modal  = \n+        this.modal.stylle.display = \"block\"\n    }\n \n }\n \n"
                },
                {
                    "date": 1689880468271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         this.modal = modal; \n     }\n     \n     arrowDownModal() {\n-        this.modal.stylle.display = \"block\"\n+        this.modal.style.display = \"block\"; \n    }\n \n }\n \n"
                },
                {
                    "date": 1689880526329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         this.modal = modal; \n     }\n     \n     arrowDownModal() {\n-        this.modal.style.display = \"block\"; \n+        this.modal.classList.toggle(\"display\") \n    }\n \n }\n \n"
                },
                {
                    "date": 1689880618396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     constructor() {\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n-        this._ui = new UI(this._body, this._arrowDown, this._modal)\n+        this._ui = new UI(this._body, this._arrowDown, this._modal); \n     }\n \n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n"
                },
                {
                    "date": 1689880637649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n     constructor() {\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n+        this._fonts = \n         this._ui = new UI(this._body, this._arrowDown, this._modal); \n     }\n \n     run() {\n"
                },
                {
                    "date": 1689880651717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     constructor() {\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n-        this._fonts = \n+        this._font = document.querySelector(\".font\")\n         this._ui = new UI(this._body, this._arrowDown, this._modal); \n     }\n \n     run() {\n"
                },
                {
                    "date": 1689880659566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     constructor() {\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n-        this._font = document.querySelector(\".font\")\n+        this._font = document.querySelector(\".fonts p \")\n         this._ui = new UI(this._body, this._arrowDown, this._modal); \n     }\n \n     run() {\n"
                },
                {
                    "date": 1689880692742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     constructor() {\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n-        this._font = document.querySelector(\".fonts p \")\n+        this._font = document.querySelector(\"right .fonts p \")\n         this._ui = new UI(this._body, this._arrowDown, this._modal); \n     }\n \n     run() {\n"
                },
                {
                    "date": 1689880720402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     constructor() {\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n-        this._font = document.querySelector(\"right .fonts p \")\n+        this._font = document.querySelector(\".right .fonts p\")\n         this._ui = new UI(this._body, this._arrowDown, this._modal); \n     }\n \n     run() {\n"
                },
                {
                    "date": 1689880738862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n         this._font = document.querySelector(\".right .fonts p\")\n-        this._ui = new UI(this._body, this._arrowDown, this._modal); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font); \n     }\n \n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n"
                },
                {
                    "date": 1689880743986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n     constructor(body, arrowDown, modal) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n+        this._font = font; \n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\") \n"
                },
                {
                    "date": 1689880832751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     }\n }\n \n class UI {\n-    constructor(body, arrowDown, modal) {\n+    constructor(body, arrowDown, modal, font) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n         this._font = font; \n@@ -25,8 +25,12 @@\n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\") \n    }\n \n+   switchFonts() {\n+    \n+   }\n+\n }\n \n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689880870638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         this.modal.classList.toggle(\"display\") \n    }\n \n    switchFonts() {\n-    \n+    font.textContent = element; \n    }\n \n }\n \n"
                },
                {
                    "date": 1689880949914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,17 @@\n     constructor() {\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n-        this._font = document.querySelector(\".right .fonts p\")\n+        this._font = document.querySelector(\".right .fonts p\"); \n         this._ui = new UI(this._body, this._arrowDown, this._modal, this._font); \n     }\n \n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n             this._ui.arrowDownModal(); \n         })\n+        \n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689880960868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n             this._ui.arrowDownModal(); \n         })\n-        \n+        document.querySelector('li')\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689880976551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n             this._ui.arrowDownModal(); \n         })\n-        document.querySelector('li')\n+        document.querySelectorAll('.modal ul li')\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689881004259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,11 @@\n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n             this._ui.arrowDownModal(); \n         })\n-        document.querySelectorAll('.modal ul li')\n+        document.querySelectorAll('.modal ul li').forEach((element) => {\n+            \n+        })\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689881020969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n         this._arrowDown.addEventListener(\"click\", () => {\n             this._ui.arrowDownModal(); \n         })\n         document.querySelectorAll('.modal ul li').forEach((element) => {\n-            \n+            element.addEventListener(\"click\")\n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689881029243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n         this._arrowDown.addEventListener(\"click\", () => {\n             this._ui.arrowDownModal(); \n         })\n         document.querySelectorAll('.modal ul li').forEach((element) => {\n-            element.addEventListener(\"click\")\n+            element.addEventListener(\"click\", )\n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689881041525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n         this._arrowDown.addEventListener(\"click\", () => {\n             this._ui.arrowDownModal(); \n         })\n         document.querySelectorAll('.modal ul li').forEach((element) => {\n-            element.addEventListener(\"click\", )\n+            element.addEventListener(\"click\", this._ui.switchFonts)\n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689881054881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\") \n    }\n \n-   switchFonts() {\n+   switchFonts(element) {\n     font.textContent = element; \n    }\n \n }\n"
                },
                {
                    "date": 1689881077634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,11 @@\n         this._arrowDown.addEventListener(\"click\", () => {\n             this._ui.arrowDownModal(); \n         })\n         document.querySelectorAll('.modal ul li').forEach((element) => {\n-            element.addEventListener(\"click\", this._ui.switchFonts)\n+            element.addEventListener(\"click\", () => {\n+                \n+            })\n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689881090679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n             this._ui.arrowDownModal(); \n         })\n         document.querySelectorAll('.modal ul li').forEach((element) => {\n             element.addEventListener(\"click\", () => {\n-                \n+                this._ui.switchFonts(element)\n             })\n         })\n     }\n }\n"
                },
                {
                    "date": 1689881119723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n             this._ui.arrowDownModal(); \n         })\n         document.querySelectorAll('.modal ul li').forEach((element) => {\n             element.addEventListener(\"click\", () => {\n-                this._ui.switchFonts(element)\n+                this._ui.switchFonts(element); \n             })\n         })\n     }\n }\n@@ -31,9 +31,9 @@\n         this.modal.classList.toggle(\"display\") \n    }\n \n    switchFonts(element) {\n-    font.textContent = element; \n+    this.font.textContent = element; \n    }\n \n }\n \n"
                },
                {
                    "date": 1689881125082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     constructor(body, arrowDown, modal, font) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n-        this._font = font; \n+        this.font = font; \n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\") \n"
                },
                {
                    "date": 1689881169826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n             this._ui.arrowDownModal(); \n         })\n         document.querySelectorAll('.modal ul li').forEach((element) => {\n             element.addEventListener(\"click\", () => {\n-                this._ui.switchFonts(element); \n+                this._ui.switchFonts(element.textContent); \n             })\n         })\n     }\n }\n"
                },
                {
                    "date": 1689881182793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n             this._ui.arrowDownModal(); \n         })\n         document.querySelectorAll('.modal ul li').forEach((element) => {\n             element.addEventListener(\"click\", () => {\n-                this._ui.switchFonts(element.textContent); \n+                this._ui.switchFonts(element); \n             })\n         })\n     }\n }\n"
                },
                {
                    "date": 1689881197720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n         this.modal.classList.toggle(\"display\") \n    }\n \n    switchFonts(element) {\n-    this.font.textContent = element; \n+    this.font.textContent = element.textContent; \n    }\n \n }\n \n"
                },
                {
                    "date": 1689881226082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,10 @@\n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n             this._ui.arrowDownModal(); \n         })\n+\n+        // Switch Fonts -> Select List Items in Modal View\n         document.querySelectorAll('.modal ul li').forEach((element) => {\n             element.addEventListener(\"click\", () => {\n                 this._ui.switchFonts(element); \n             })\n"
                },
                {
                    "date": 1689881273239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,9 @@\n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n+    this.body.style.font_famu\n    }\n \n }\n \n"
                },
                {
                    "date": 1689881348982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n-    this.body.style.font_famu\n+    this.body.style.fontFamily = element.textContent; \n    }\n \n }\n \n"
                },
                {
                    "date": 1689883014999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n     this.body.style.fontFamily = element.textContent; \n+    if(element.textContent === \"Mono\")\n    }\n \n }\n \n"
                },
                {
                    "date": 1689883029909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,11 @@\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n     this.body.style.fontFamily = element.textContent; \n-    if(element.textContent === \"Mono\")\n+    if(element.textContent === \"Mono\") {\n+        this.body.style.fontFamily = \"MonoSpace\"\n+    }\n    }\n \n }\n \n"
                },
                {
                    "date": 1689883043855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n     this.body.style.fontFamily = element.textContent; \n     if(element.textContent === \"Mono\") {\n-        this.body.style.fontFamily = \"MonoSpace\"\n+        this.body.style.fontFamily = \"MonoSpace\"; \n     }\n    }\n \n }\n"
                },
                {
                    "date": 1689955065706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,10 @@\n     constructor() {\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n-        this._font = document.querySelector(\".right .fonts p\"); \n+        this._font = document.querySelector(\".right .fonts p\");\n+        this._toggler = document.querySelector(\".toggler\") \n         this._ui = new UI(this._body, this._arrowDown, this._modal, this._font); \n     }\n \n     run() {\n"
                },
                {
                    "date": 1689955075326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n         this._font = document.querySelector(\".right .fonts p\");\n-        this._toggler = document.querySelector(\".toggler\") \n+        this._toggler = document.querySelector(\".togglers\") \n         this._ui = new UI(this._body, this._arrowDown, this._modal, this._font); \n     }\n \n     run() {\n"
                },
                {
                    "date": 1689955239177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n         this._font = document.querySelector(\".right .fonts p\");\n-        this._toggler = document.querySelector(\".togglers\") \n+        this._toggler = document.querySelector(\".togglers\"); \n         this._ui = new UI(this._body, this._arrowDown, this._modal, this._font); \n     }\n \n     run() {\n"
                },
                {
                    "date": 1689955250102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n         this._font = document.querySelector(\".right .fonts p\");\n         this._toggler = document.querySelector(\".togglers\"); \n-        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._toggler); \n     }\n \n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n"
                },
                {
                    "date": 1689955258670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     }\n }\n \n class UI {\n-    constructor(body, arrowDown, modal, font) {\n+    constructor(body, arrowDown, modal, font, toggler) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n         this.font = font; \n"
                },
                {
                    "date": 1689955264735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n         this.body = body; \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n         this.font = font; \n+        this._toggler = toggler; \n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\") \n"
                },
                {
                    "date": 1689955285229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,12 @@\n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\") \n    }\n \n+   switchDark() {\n+    \n+   }\n+\n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n     this.body.style.fontFamily = element.textContent; \n     if(element.textContent === \"Mono\") {\n"
                },
                {
                    "date": 1689955298854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,16 +28,17 @@\n         this.arrowDown = arrowDown; \n         this.modal = modal; \n         this.font = font; \n         this._toggler = toggler; \n+        this.isLight = false; \n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\") \n    }\n \n    switchDark() {\n-    \n+\n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689955338098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,10 @@\n             element.addEventListener(\"click\", () => {\n                 this._ui.switchFonts(element); \n             })\n         })\n+\n+        this._toggler.addEventListener('click')\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689955343912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n                 this._ui.switchFonts(element); \n             })\n         })\n \n-        this._toggler.addEventListener('click')\n+        this._toggler.addEventListener('click', switchDark)\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689955353031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n                 this._ui.switchFonts(element); \n             })\n         })\n \n-        this._toggler.addEventListener('click', switchDark)\n+        this._toggler.addEventListener('click', ui.switchDark)\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689955362362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n                 this._ui.switchFonts(element); \n             })\n         })\n \n-        this._toggler.addEventListener('click', ui.switchDark)\n+        this._toggler.addEventListener('click', ui.toggleDark)\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689955369459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n                 this._ui.switchFonts(element); \n             })\n         })\n \n-        this._toggler.addEventListener('click', ui.toggleDark)\n+        this._toggler.addEventListener('click', this._ui.toggleDark)\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689955379210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\") \n    }\n \n-   switchDark() {\n+   toggleDark() {\n \n    }\n \n    switchFonts(element) {\n"
                },
                {
                    "date": 1689955385764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n         this.modal.classList.toggle(\"display\") \n    }\n \n    toggleDark() {\n-\n+    alert(\"ITs darking time\")\n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689955464520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n         this._font = document.querySelector(\".right .fonts p\");\n-        this._toggler = document.querySelector(\".togglers\"); \n+        this._toggler = document.querySelector(\".slider\"); \n         this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._toggler); \n     }\n \n     run() {\n@@ -38,9 +38,9 @@\n         this.modal.classList.toggle(\"display\") \n    }\n \n    toggleDark() {\n-    alert(\"ITs darking time\")\n+    alert(\"ITs darking time\"); \n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689955479169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n         this._arrowDown = document.querySelector(\".arrow-down\"); \n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n         this._font = document.querySelector(\".right .fonts p\");\n-        this._toggler = document.querySelector(\".slider\"); \n+        this._slider = document.querySelector(\".slider\"); \n         this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._toggler); \n     }\n \n     run() {\n"
                },
                {
                    "date": 1689955486544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n         this._font = document.querySelector(\".right .fonts p\");\n         this._slider = document.querySelector(\".slider\"); \n-        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._toggler); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._slider); \n     }\n \n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n@@ -19,9 +19,9 @@\n                 this._ui.switchFonts(element); \n             })\n         })\n \n-        this._toggler.addEventListener('click', this._ui.toggleDark)\n+        this._slider.addEventListener('click', this._ui.toggleDark)\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689955515432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n         this.modal.classList.toggle(\"display\") \n    }\n \n    toggleDark() {\n-    alert(\"ITs darking time\"); \n+    \n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689955531224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n         this.modal.classList.toggle(\"display\") \n    }\n \n    toggleDark() {\n-    \n+    this._body.style.backgroundColor = \"black\"\n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689955547974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n         this.modal.classList.toggle(\"display\") \n    }\n \n    toggleDark() {\n-    this._body.style.backgroundColor = \"black\"\n+    this._body.styles.backgroundColor = \"black\";\n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689955571077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,18 +29,18 @@\n         this.body = body; \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n         this.font = font; \n-        this._toggler = toggler; \n+        this.toggler = toggler; \n         this.isLight = false; \n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\") \n    }\n \n    toggleDark() {\n-    this._body.styles.backgroundColor = \"black\";\n+    this.bo\n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689955583650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     }\n }\n \n class UI {\n-    constructor(body, arrowDown, modal, font, toggler) {\n+    constructor(body, arrowDown, modal, font, slider) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n         this.font = font; \n"
                },
                {
                    "date": 1689955591830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         this.body = body; \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n         this.font = font; \n-        this.toggler = toggler; \n+        this.slider = slider; \n         this.isLight = false; \n     }\n     \n     arrowDownModal() {\n"
                },
                {
                    "date": 1689955615065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n         this.modal.classList.toggle(\"display\") \n    }\n \n    toggleDark() {\n-    this.bo\n+    this.body.style.backgroundColor = \"black\";\n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689955645310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n         this.modal.classList.toggle(\"display\") \n    }\n \n    toggleDark() {\n-    this.body.style.backgroundColor = \"black\";\n+    this.body.styles.backgroundColor = \"black\";\n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689955655842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n         this.modal.classList.toggle(\"display\") \n    }\n \n    toggleDark() {\n-    this.body.styles.backgroundColor = \"black\";\n+    this.body.style.backgroundColor = \"black\";\n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689955825894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n         this._font = document.querySelector(\".right .fonts p\");\n         this._slider = document.querySelector(\".slider\"); \n-        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._slider); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font); \n     }\n \n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n"
                },
                {
                    "date": 1689955831688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,14 +24,13 @@\n     }\n }\n \n class UI {\n-    constructor(body, arrowDown, modal, font, slider) {\n+    constructor(body, arrowDown, modal, font) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n         this.font = font; \n-        this.slider = slider; \n         this.isLight = false; \n     }\n     \n     arrowDownModal() {\n"
                },
                {
                    "date": 1689955888136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n         this.modal.classList.toggle(\"display\") \n    }\n \n    toggleDark() {\n-    this.body.style.backgroundColor = \"black\";\n+    body.style.backgroundColor = \"black\";\n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689956141637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n                 this._ui.switchFonts(element); \n             })\n         })\n \n-        this._slider.addEventListener('click', this._ui.toggleDark)\n+        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689956185973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n         this.modal.classList.toggle(\"display\") \n    }\n \n    toggleDark() {\n-    body.style.backgroundColor = \"black\";\n+    this.body.style.backgroundColor = \"black\";\n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689957711470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n         this.modal.classList.toggle(\"display\") \n    }\n \n    toggleDark() {\n-    this.body.style.backgroundColor = \"black\";\n+    this.bo\n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689957743320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n         this._body = document.querySelector(\"body\"); \n         this._modal = document.querySelector(\".modal\"); \n         this._font = document.querySelector(\".right .fonts p\");\n         this._slider = document.querySelector(\".slider\"); \n+        this._moon = document.querySelector(\".moon\"); \n         this._ui = new UI(this._body, this._arrowDown, this._modal, this._font); \n     }\n \n     run() {\n"
                },
                {
                    "date": 1689957767819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n         this._modal = document.querySelector(\".modal\"); \n         this._font = document.querySelector(\".right .fonts p\");\n         this._slider = document.querySelector(\".slider\"); \n         this._moon = document.querySelector(\".moon\"); \n+        this._text = document.querySelector(\"\")\n         this._ui = new UI(this._body, this._arrowDown, this._modal, this._font); \n     }\n \n     run() {\n"
                },
                {
                    "date": 1689957775864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n         this._modal = document.querySelector(\".modal\"); \n         this._font = document.querySelector(\".right .fonts p\");\n         this._slider = document.querySelector(\".slider\"); \n         this._moon = document.querySelector(\".moon\"); \n-        this._text = document.querySelector(\"\")\n+        this._text = document.querySelector(\"input[type='text']\")\n         this._ui = new UI(this._body, this._arrowDown, this._modal, this._font); \n     }\n \n     run() {\n"
                },
                {
                    "date": 1689957797872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n         this._modal = document.querySelector(\".modal\"); \n         this._font = document.querySelector(\".right .fonts p\");\n         this._slider = document.querySelector(\".slider\"); \n         this._moon = document.querySelector(\".moon\"); \n-        this._text = document.querySelector(\"input[type='text']\")\n-        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font); \n+        this._text = document.querySelector(\"input[type='text']\"); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon); \n     }\n \n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n"
                },
                {
                    "date": 1689957803583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n         this._font = document.querySelector(\".right .fonts p\");\n         this._slider = document.querySelector(\".slider\"); \n         this._moon = document.querySelector(\".moon\"); \n         this._text = document.querySelector(\"input[type='text']\"); \n-        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n     }\n \n     run() {\n         this._arrowDown.addEventListener(\"click\", () => {\n"
                },
                {
                    "date": 1689957828029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     }\n }\n \n class UI {\n-    constructor(body, arrowDown, modal, font) {\n+    constructor(body, arrowDown, modal, font, moon, text) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n         this.font = font; \n"
                },
                {
                    "date": 1689957836487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,10 @@\n     constructor(body, arrowDown, modal, font, moon, text) {\n         this.body = body; \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n-        this.font = font; \n+        this.font = font;\n+        this.moon = moon;  \n         this.isLight = false; \n     }\n     \n     arrowDownModal() {\n"
                },
                {
                    "date": 1689957852999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,14 +31,15 @@\n         this.body = body; \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n         this.font = font;\n-        this.moon = moon;  \n+        this.moon = moon; \n+        this.text = text;  \n         this.isLight = false; \n     }\n     \n     arrowDownModal() {\n-        this.modal.classList.toggle(\"display\") \n+        this.modal.classList.toggle(\"display\"); \n    }\n \n    toggleDark() {\n     this.bo\n"
                },
                {
                    "date": 1689957954781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n         this.modal.classList.toggle(\"display\"); \n    }\n \n    toggleDark() {\n-    this.bo\n+    this.body.classList.toggle('dark'); \n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689957973071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,10 @@\n    }\n \n    toggleDark() {\n     this.body.classList.toggle('dark'); \n+    this.moon.classList.toggle('dark');\n+    this.text.classList.toggle('dark'); \n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689957999617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,9 @@\n    toggleDark() {\n     this.body.classList.toggle('dark'); \n     this.moon.classList.toggle('dark');\n     this.text.classList.toggle('dark'); \n+    this.modal.classList.toggle('dark'); \n    }\n \n    switchFonts(element) {\n     this.font.textContent = element.textContent; \n"
                },
                {
                    "date": 1689961569637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,12 @@\n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n    }\n \n+   showError() {\n+    \n+   }\n+\n    toggleDark() {\n     this.body.classList.toggle('dark'); \n     this.moon.classList.toggle('dark');\n     this.text.classList.toggle('dark'); \n"
                },
                {
                    "date": 1689961676073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n         this.modal.classList.toggle(\"display\"); \n    }\n \n    showError() {\n-    \n+    this.text.classList.add('error')\n    }\n \n    toggleDark() {\n     this.body.classList.toggle('dark'); \n"
                },
                {
                    "date": 1689961686918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,10 +40,10 @@\n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n    }\n \n-   showError() {\n-    this.text.classList.add('error')\n+   showTextError() {\n+    this.text.classList.add('error'); \n    }\n \n    toggleDark() {\n     this.body.classList.toggle('dark'); \n"
                },
                {
                    "date": 1689961697580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n    }\n \n-   showTextError() {\n+   showTextErrorMessage() {\n     this.text.classList.add('error'); \n    }\n \n    toggleDark() {\n"
                },
                {
                    "date": 1689961705792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,12 @@\n    showTextErrorMessage() {\n     this.text.classList.add('error'); \n    }\n \n+   hideTextErrorMessage() {\n+    \n+   }\n+\n    toggleDark() {\n     this.body.classList.toggle('dark'); \n     this.moon.classList.toggle('dark');\n     this.text.classList.toggle('dark'); \n"
                },
                {
                    "date": 1689961790382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,12 +42,13 @@\n    }\n \n    showTextErrorMessage() {\n     this.text.classList.add('error'); \n+    this.text.classList.add('')\n    }\n \n    hideTextErrorMessage() {\n-    \n+\n    }\n \n    toggleDark() {\n     this.body.classList.toggle('dark'); \n"
                },
                {
                    "date": 1689961816852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n    }\n \n    showTextErrorMessage() {\n     this.text.classList.add('error'); \n+    document.querySelector('empty')\n     this.text.classList.add('')\n    }\n \n    hideTextErrorMessage() {\n"
                },
                {
                    "date": 1689961822695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n    }\n \n    showTextErrorMessage() {\n     this.text.classList.add('error'); \n-    document.querySelector('empty')\n+    document.querySelector('.empty')\n     this.text.classList.add('')\n    }\n \n    hideTextErrorMessage() {\n"
                },
                {
                    "date": 1689961844374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n    }\n \n    showTextErrorMessage() {\n     this.text.classList.add('error'); \n-    document.querySelector('.empty')\n+    document.querySelector('.empty').classList.add('toggle')\n     this.text.classList.add('')\n    }\n \n    hideTextErrorMessage() {\n"
                },
                {
                    "date": 1689961855495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n    }\n \n    showTextErrorMessage() {\n     this.text.classList.add('error'); \n-    document.querySelector('.empty').classList.add('toggle')\n+    document.querySelector('.empty').classList.add('display'); \n     this.text.classList.add('')\n    }\n \n    hideTextErrorMessage() {\n"
                },
                {
                    "date": 1689961861842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,8 @@\n    }\n \n    showTextErrorMessage() {\n     this.text.classList.add('error'); \n-    document.querySelector('.empty').classList.add('display'); \n     this.text.classList.add('')\n    }\n \n    hideTextErrorMessage() {\n"
                },
                {
                    "date": 1689961876846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,13 +42,14 @@\n    }\n \n    showTextErrorMessage() {\n     this.text.classList.add('error'); \n-    this.text.classList.add('')\n+    document.querySelector('.empty').classList.add('display'); \n    }\n \n    hideTextErrorMessage() {\n-\n+    this.text.classList.add('error'); \n+    document.querySelector('.empty').classList.add('display'); \n    }\n \n    toggleDark() {\n     this.body.classList.toggle('dark'); \n"
                },
                {
                    "date": 1689961884809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     document.querySelector('.empty').classList.add('display'); \n    }\n \n    hideTextErrorMessage() {\n-    this.text.classList.add('error'); \n+    this.text.classList.remove('error'); \n     document.querySelector('.empty').classList.add('display'); \n    }\n \n    toggleDark() {\n"
                },
                {
                    "date": 1689961895495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n    }\n \n    hideTextErrorMessage() {\n     this.text.classList.remove('error'); \n-    document.querySelector('.empty').classList.add('display'); \n+    document.querySelector('.empty').classList.remove('display'); \n    }\n \n    toggleDark() {\n     this.body.classList.toggle('dark'); \n"
                },
                {
                    "date": 1689962031879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+class App {\n+    constructor() {\n+        this._arrowDown = document.querySelector(\".arrow-down\"); \n+        this._body = document.querySelector(\"body\"); \n+        this._modal = document.querySelector(\".modal\"); \n+        this._font = document.querySelector(\".right .fonts p\");\n+        this._slider = document.querySelector(\".slider\"); \n+        this._moon = document.querySelector(\".moon\"); \n+        this._text = document.querySelector(\"input[type='text']\"); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n+    }\n+\n+    run() {\n+        this._arrowDown.addEventListener(\"click\", () => {\n+            this._ui.arrowDownModal(); \n+        })\n+\n+        // Switch Fonts -> Select List Items in Modal View\n+        document.querySelectorAll('.modal ul li').forEach((element) => {\n+            element.addEventListener(\"click\", () => {\n+                this._ui.switchFonts(element); \n+            })\n+        })\n+\n+        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n+\n+        this._text.addE\n+    }\n+}\n+\n+class UI {\n+    constructor(body, arrowDown, modal, font, moon, text) {\n+        this.body = body; \n+        this.arrowDown = arrowDown; \n+        this.modal = modal; \n+        this.font = font;\n+        this.moon = moon; \n+        this.text = text;  \n+    }\n+    \n+    arrowDownModal() {\n+        this.modal.classList.toggle(\"display\"); \n+   }\n+\n+   showTextErrorMessage() {\n+    this.text.classList.add('error'); \n+    document.querySelector('.empty').classList.add('display'); \n+   }\n+\n+   hideTextErrorMessage() {\n+    this.text.classList.remove('error'); \n+    document.querySelector('.empty').classList.remove('display'); \n+   }\n+\n+   toggleDark() {\n+    this.body.classList.toggle('dark'); \n+    this.moon.classList.toggle('dark');\n+    this.text.classList.toggle('dark'); \n+    this.modal.classList.toggle('dark'); \n+   }\n+\n+   switchFonts(element) {\n+    this.font.textContent = element.textContent; \n+    this.body.style.fontFamily = element.textContent; \n+    if(element.textContent === \"Mono\") {\n+        this.body.style.fontFamily = \"MonoSpace\"; \n+    }\n+   }\n+\n+}\n+\n+const app = new App(); \n+app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689962184996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,10 +28,11 @@\n     }\n }\n \n class UI {\n+   let x =\n     constructor(body, arrowDown, modal, font, moon, text) {\n-        this.body = body; \n+        this.body =  document.querySelector(\"body\"); \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n         this.font = font;\n         this.moon = moon; \n@@ -69,77 +70,5 @@\n \n }\n \n const app = new App(); \n-app.run(); \n-class App {\n-    constructor() {\n-        this._arrowDown = document.querySelector(\".arrow-down\"); \n-        this._body = document.querySelector(\"body\"); \n-        this._modal = document.querySelector(\".modal\"); \n-        this._font = document.querySelector(\".right .fonts p\");\n-        this._slider = document.querySelector(\".slider\"); \n-        this._moon = document.querySelector(\".moon\"); \n-        this._text = document.querySelector(\"input[type='text']\"); \n-        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n-    }\n-\n-    run() {\n-        this._arrowDown.addEventListener(\"click\", () => {\n-            this._ui.arrowDownModal(); \n-        })\n-\n-        // Switch Fonts -> Select List Items in Modal View\n-        document.querySelectorAll('.modal ul li').forEach((element) => {\n-            element.addEventListener(\"click\", () => {\n-                this._ui.switchFonts(element); \n-            })\n-        })\n-\n-        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n-    }\n-}\n-\n-class UI {\n-    constructor(body, arrowDown, modal, font, moon, text) {\n-        this.body = body; \n-        this.arrowDown = arrowDown; \n-        this.modal = modal; \n-        this.font = font;\n-        this.moon = moon; \n-        this.text = text;  \n-        this.isLight = false; \n-    }\n-    \n-    arrowDownModal() {\n-        this.modal.classList.toggle(\"display\"); \n-   }\n-\n-   showTextErrorMessage() {\n-    this.text.classList.add('error'); \n-    document.querySelector('.empty').classList.add('display'); \n-   }\n-\n-   hideTextErrorMessage() {\n-    this.text.classList.remove('error'); \n-    document.querySelector('.empty').classList.remove('display'); \n-   }\n-\n-   toggleDark() {\n-    this.body.classList.toggle('dark'); \n-    this.moon.classList.toggle('dark');\n-    this.text.classList.toggle('dark'); \n-    this.modal.classList.toggle('dark'); \n-   }\n-\n-   switchFonts(element) {\n-    this.font.textContent = element.textContent; \n-    this.body.style.fontFamily = element.textContent; \n-    if(element.textContent === \"Mono\") {\n-        this.body.style.fontFamily = \"MonoSpace\"; \n-    }\n-   }\n-\n-}\n-\n-const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689962190840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,11 +28,10 @@\n     }\n }\n \n class UI {\n-   let x =\n     constructor(body, arrowDown, modal, font, moon, text) {\n-        this.body =  document.querySelector(\"body\"); \n+        this.body = document.querySelector(\"body\"); \n         this.arrowDown = arrowDown; \n         this.modal = modal; \n         this.font = font;\n         this.moon = moon; \n"
                },
                {
                    "date": 1689962237251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n }\n \n class UI {\n     constructor(body, arrowDown, modal, font, moon, text) {\n-        this.body = document.querySelector(\"body\"); \n+        this.body = body\n         this.arrowDown = arrowDown; \n         this.modal = modal; \n         this.font = font;\n         this.moon = moon; \n"
                },
                {
                    "date": 1689962372712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         })\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n-        this._text.addE\n+        this._text.addEven\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689962449381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         })\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n-        this._text.addEven\n+        this._text.addEventListener('keypress')\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689962489993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,11 @@\n         })\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n-        this._text.addEventListener('keypress')\n+        this._text.addEventListener('keypress', function(event) {\n+            \n+        })\n     }\n }\n \n class UI {\n"
                },
                {
                    "date": 1689962506043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,11 @@\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n         this._text.addEventListener('keypress', function(event) {\n-            \n+            if(event.key === \"Enter\") {\n+                \n+            }\n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689962575526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n-                \n+                this._text.\n             }\n         })\n     }\n }\n"
                },
                {
                    "date": 1689962622010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n-                this._text.\n+                if(this._text.value.length)\n             }\n         })\n     }\n }\n"
                },
                {
                    "date": 1689962629266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n-                if(this._text.value.length)\n+                if(this._text.value.length === 0)\n             }\n         })\n     }\n }\n"
                },
                {
                    "date": 1689962727191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,11 @@\n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n-                if(this._text.value.length === 0)\n+                if(this._text.value.length === 0) {\n+                    this._ui.showTextErrorMessage(); \n+                }\n             }\n         })\n     }\n }\n"
                },
                {
                    "date": 1689962851915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n-                if(this._text.value.length === 0) {\n+                if(this.value.length === 0) {\n                     this._ui.showTextErrorMessage(); \n                 }\n             }\n         })\n"
                },
                {
                    "date": 1689962881328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n         this.modal.classList.toggle(\"display\"); \n    }\n \n    showTextErrorMessage() {\n-    this.text.classList.add('error'); \n+    this.text.classList.add('error').bind(this); \n     document.querySelector('.empty').classList.add('display'); \n    }\n \n    hideTextErrorMessage() {\n"
                },
                {
                    "date": 1689962890933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,79 @@\n+class App {\n+    constructor() {\n+        this._arrowDown = document.querySelector(\".arrow-down\"); \n+        this._body = document.querySelector(\"body\"); \n+        this._modal = document.querySelector(\".modal\"); \n+        this._font = document.querySelector(\".right .fonts p\");\n+        this._slider = document.querySelector(\".slider\"); \n+        this._moon = document.querySelector(\".moon\"); \n+        this._text = document.querySelector(\"input[type='text']\"); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n+    }\n+\n+    run() {\n+        this._arrowDown.addEventListener(\"click\", () => {\n+            this._ui.arrowDownModal(); \n+        })\n+\n+        // Switch Fonts -> Select List Items in Modal View\n+        document.querySelectorAll('.modal ul li').forEach((element) => {\n+            element.addEventListener(\"click\", () => {\n+                this._ui.switchFonts(element); \n+            })\n+        })\n+\n+        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n+\n+        this._text.addEventListener('keypress', function(event) {\n+            if(event.key === \"Enter\") {\n+                if(this.value.length === 0) {\n+                    this._ui.showTextErrorMessage(); \n+                }\n+            }\n+        })\n+    }\n+}\n+\n+class UI {\n+    constructor(body, arrowDown, modal, font, moon, text) {\n+        this.body = body\n+        this.arrowDown = arrowDown; \n+        this.modal = modal; \n+        this.font = font;\n+        this.moon = moon; \n+        this.text = text;  \n+    }\n+    \n+    arrowDownModal() {\n+        this.modal.classList.toggle(\"display\"); \n+   }\n+\n+   showTextErrorMessage() {\n+    this.text.classList.add('error').bind(this); \n+    document.querySelector('.empty').classList.add('display'); \n+   }\n+\n+   hideTextErrorMessage() {\n+    this.text.classList.remove('error').bind(this); \n+    document.querySelector('.empty').classList.remove('display'); \n+   }\n+\n+   toggleDark() {\n+    this.body.classList.toggle('dark'); \n+    this.moon.classList.toggle('dark');\n+    this.text.classList.toggle('dark'); \n+    this.modal.classList.toggle('dark'); \n+   }\n+\n+   switchFonts(element) {\n+    this.font.textContent = element.textContent; \n+    this.body.style.fontFamily = element.textContent; \n+    if(element.textContent === \"Mono\") {\n+        this.body.style.fontFamily = \"MonoSpace\"; \n+    }\n+   }\n+\n+}\n+\n+const app = new App(); \n+app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689962940681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,84 +75,5 @@\n \n }\n \n const app = new App(); \n-app.run(); \n-class App {\n-    constructor() {\n-        this._arrowDown = document.querySelector(\".arrow-down\"); \n-        this._body = document.querySelector(\"body\"); \n-        this._modal = document.querySelector(\".modal\"); \n-        this._font = document.querySelector(\".right .fonts p\");\n-        this._slider = document.querySelector(\".slider\"); \n-        this._moon = document.querySelector(\".moon\"); \n-        this._text = document.querySelector(\"input[type='text']\"); \n-        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n-    }\n-\n-    run() {\n-        this._arrowDown.addEventListener(\"click\", () => {\n-            this._ui.arrowDownModal(); \n-        })\n-\n-        // Switch Fonts -> Select List Items in Modal View\n-        document.querySelectorAll('.modal ul li').forEach((element) => {\n-            element.addEventListener(\"click\", () => {\n-                this._ui.switchFonts(element); \n-            })\n-        })\n-\n-        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n-\n-        this._text.addEventListener('keypress', function(event) {\n-            if(event.key === \"Enter\") {\n-                if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage(); \n-                }\n-            }\n-        })\n-    }\n-}\n-\n-class UI {\n-    constructor(body, arrowDown, modal, font, moon, text) {\n-        this.body = body\n-        this.arrowDown = arrowDown; \n-        this.modal = modal; \n-        this.font = font;\n-        this.moon = moon; \n-        this.text = text;  \n-    }\n-    \n-    arrowDownModal() {\n-        this.modal.classList.toggle(\"display\"); \n-   }\n-\n-   showTextErrorMessage() {\n-    this.text.classList.add('error').bind(this); \n-    document.querySelector('.empty').classList.add('display'); \n-   }\n-\n-   hideTextErrorMessage() {\n-    this.text.classList.remove('error'); \n-    document.querySelector('.empty').classList.remove('display'); \n-   }\n-\n-   toggleDark() {\n-    this.body.classList.toggle('dark'); \n-    this.moon.classList.toggle('dark');\n-    this.text.classList.toggle('dark'); \n-    this.modal.classList.toggle('dark'); \n-   }\n-\n-   switchFonts(element) {\n-    this.font.textContent = element.textContent; \n-    this.body.style.fontFamily = element.textContent; \n-    if(element.textContent === \"Mono\") {\n-        this.body.style.fontFamily = \"MonoSpace\"; \n-    }\n-   }\n-\n-}\n-\n-const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689962952029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage(); \n+                    this._ui.showTextErrorMessage().bind(this._ui); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689962959929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage().bind(this._ui); \n+                    this._ui.showTextErrorMessage(); \n                 }\n             }\n         })\n     }\n@@ -48,14 +48,14 @@\n         this.modal.classList.toggle(\"display\"); \n    }\n \n    showTextErrorMessage() {\n-    this.text.classList.add('error').bind(this); \n+    this.text.classList.add('error'); \n     document.querySelector('.empty').classList.add('display'); \n    }\n \n    hideTextErrorMessage() {\n-    this.text.classList.remove('error').bind(this); \n+    this.text.classList.remove('error'); \n     document.querySelector('.empty').classList.remove('display'); \n    }\n \n    toggleDark() {\n"
                },
                {
                    "date": 1689962966895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage(); \n+                    this._ui.showTextErrorMessage().bind(this._ui); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963019357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage().bind(this._ui); \n+                    this._ui.bind(this._ui).showTextErrorMessage()\n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963026381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.bind(this._ui).showTextErrorMessage()\n+                    this..bind(this._ui).showTextErrorMessage()\n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963032497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this..bind(this._ui).showTextErrorMessage()\n+                    this._ui.showTextErrorMessage().bind(this._u); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963038888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage().bind(this._u); \n+                    this.showTextErrorMessage().bind(this._ui); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963054609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this.showTextErrorMessage().bind(this._ui); \n+                    this._ui.showTextErrorMessage().bind(this._ui); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963093955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage().bind(this._ui); \n+                    this.bind(_this._ui)\n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963099109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this.bind(_this._ui)\n+                    this.bind(this._ui)\n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963107169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this.bind(this._ui)\n+                    this.bind(this._ui).showTextErrorMessage(); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963143475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this.bind(this._ui).showTextErrorMessage(); \n+                    this.showTextErrorMessage().bind(this._ui); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963148752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this.showTextErrorMessage().bind(this._ui); \n+                    this._ui.showTextErrorMessage().bind(this._ui); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963223966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage().bind(this._ui); \n+                    this._ui.showTextErrorMessage(); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963260745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage(); \n+                    this._ui.showTextErrorMessage().bind(this._ui); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963272884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage().bind(this._ui); \n+                    this._ui.showTextErrorMessage().bind(App); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963292316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage().bind(App); \n+                    this._ui.showTextErrorMessage().bind(App._ui); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963307077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage().bind(App._ui); \n+                    this._ui.showTextErrorMessage().bind(); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963465287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage().bind(); \n+                    this._ui.showTextErrorMessage()\n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963641049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+class App {\n+    constructor() {\n+        this._arrowDown = document.querySelector(\".arrow-down\"); \n+        this._body = document.querySelector(\"body\"); \n+        this._modal = document.querySelector(\".modal\"); \n+        this._font = document.querySelector(\".right .fonts p\");\n+        this._slider = document.querySelector(\".slider\"); \n+        this._moon = document.querySelector(\".moon\"); \n+        this._text = document.querySelector(\"input[type='text']\"); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n+    }\n+\n+    run() {\n+        this._arrowDown.addEventListener(\"click\", () => {\n+            this._ui.arrowDownModal(); \n+        })\n+\n+        // Switch Fonts -> Select List Items in Modal View\n+        document.querySelectorAll('.modal ul li').forEach((element) => {\n+            element.addEventListener(\"click\", () => {\n+                this._ui.switchFonts(element); \n+            })\n+        })\n+\n+        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n+\n+        this._text.addEventListener('keypress', function(event) {\n+            this._ui.\n+            if(event.key === \"Enter\") {\n+                if(this.value.length === 0) {\n+                    App.apply(this._ui, )\n+                }\n+            }\n+        })\n+    }\n+}\n+\n+class UI {\n+    constructor(body, arrowDown, modal, font, moon, text) {\n+        this.body = body\n+        this.arrowDown = arrowDown; \n+        this.modal = modal; \n+        this.font = font;\n+        this.moon = moon; \n+        this.text = text;  \n+    }\n+    \n+    arrowDownModal() {\n+        this.modal.classList.toggle(\"display\"); \n+   }\n+\n+   showTextErrorMessage() {\n+    this.text.classList.add('error'); \n+    document.querySelector('.empty').classList.add('display'); \n+   }\n+\n+   hideTextErrorMessage() {\n+    this.text.classList.remove('error'); \n+    document.querySelector('.empty').classList.remove('display'); \n+   }\n+\n+   toggleDark() {\n+    this.body.classList.toggle('dark'); \n+    this.moon.classList.toggle('dark');\n+    this.text.classList.toggle('dark'); \n+    this.modal.classList.toggle('dark'); \n+   }\n+\n+   switchFonts(element) {\n+    this.font.textContent = element.textContent; \n+    this.body.style.fontFamily = element.textContent; \n+    if(element.textContent === \"Mono\") {\n+        this.body.style.fontFamily = \"MonoSpace\"; \n+    }\n+   }\n+\n+}\n+\n+const app = new App(); \n+app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689963680723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,12 +24,11 @@\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n         this._text.addEventListener('keypress', function(event) {\n-            this._ui.\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    App.apply(this._ui, )\n+                    this._ui.showTextErrorMessage();\n                 }\n             }\n         })\n     }\n@@ -76,84 +75,5 @@\n \n }\n \n const app = new App(); \n-app.run(); \n-class App {\n-    constructor() {\n-        this._arrowDown = document.querySelector(\".arrow-down\"); \n-        this._body = document.querySelector(\"body\"); \n-        this._modal = document.querySelector(\".modal\"); \n-        this._font = document.querySelector(\".right .fonts p\");\n-        this._slider = document.querySelector(\".slider\"); \n-        this._moon = document.querySelector(\".moon\"); \n-        this._text = document.querySelector(\"input[type='text']\"); \n-        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n-    }\n-\n-    run() {\n-        this._arrowDown.addEventListener(\"click\", () => {\n-            this._ui.arrowDownModal(); \n-        })\n-\n-        // Switch Fonts -> Select List Items in Modal View\n-        document.querySelectorAll('.modal ul li').forEach((element) => {\n-            element.addEventListener(\"click\", () => {\n-                this._ui.switchFonts(element); \n-            })\n-        })\n-\n-        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n-\n-        this._text.addEventListener('keypress', function(event) {\n-            if(event.key === \"Enter\") {\n-                if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage()\n-                }\n-            }\n-        })\n-    }\n-}\n-\n-class UI {\n-    constructor(body, arrowDown, modal, font, moon, text) {\n-        this.body = body\n-        this.arrowDown = arrowDown; \n-        this.modal = modal; \n-        this.font = font;\n-        this.moon = moon; \n-        this.text = text;  \n-    }\n-    \n-    arrowDownModal() {\n-        this.modal.classList.toggle(\"display\"); \n-   }\n-\n-   showTextErrorMessage() {\n-    this.text.classList.add('error'); \n-    document.querySelector('.empty').classList.add('display'); \n-   }\n-\n-   hideTextErrorMessage() {\n-    this.text.classList.remove('error'); \n-    document.querySelector('.empty').classList.remove('display'); \n-   }\n-\n-   toggleDark() {\n-    this.body.classList.toggle('dark'); \n-    this.moon.classList.toggle('dark');\n-    this.text.classList.toggle('dark'); \n-    this.modal.classList.toggle('dark'); \n-   }\n-\n-   switchFonts(element) {\n-    this.font.textContent = element.textContent; \n-    this.body.style.fontFamily = element.textContent; \n-    if(element.textContent === \"Mono\") {\n-        this.body.style.fontFamily = \"MonoSpace\"; \n-    }\n-   }\n-\n-}\n-\n-const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1689963834551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage();\n+                    this._ui.showTextErrorMessage(UI)\n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963914675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    this._ui.showTextErrorMessage(UI)\n+                    showTextErrorMessage(); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689963956964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    showTextErrorMessage(); \n+                    _ui.showTextErrorMessage(); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689964008847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n         this._text.addEventListener('keypress', function(event) {\n             if(event.key === \"Enter\") {\n                 if(this.value.length === 0) {\n-                    _ui.showTextErrorMessage(); \n+                    showTextErrorMessage(); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689964040339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n class App {\n     constructor() {\n+        this._body = document.querySelector(\"body\"); \n         this._arrowDown = document.querySelector(\".arrow-down\"); \n-        this._body = document.querySelector(\"body\"); \n+        \n         this._modal = document.querySelector(\".modal\"); \n         this._font = document.querySelector(\".right .fonts p\");\n         this._slider = document.querySelector(\".slider\"); \n         this._moon = document.querySelector(\".moon\"); \n"
                },
                {
                    "date": 1689964100376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n class App {\n     constructor() {\n         this._body = document.querySelector(\"body\"); \n         this._arrowDown = document.querySelector(\".arrow-down\"); \n-        \n         this._modal = document.querySelector(\".modal\"); \n         this._font = document.querySelector(\".right .fonts p\");\n         this._slider = document.querySelector(\".slider\"); \n         this._moon = document.querySelector(\".moon\"); \n@@ -24,14 +23,10 @@\n         })\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n-        this._text.addEventListener('keypress', function(event) {\n-            if(event.key === \"Enter\") {\n-                if(this.value.length === 0) {\n-                    showTextErrorMessage(); \n-                }\n-            }\n+        this._text.addEventListener('keypress', () => {\n+            \n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689964109338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,10 @@\n         })\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n-        this._text.addEventListener('keypress', () => {\n-            \n+        this._text.addEventListener('keypress', (e) => {\n+\n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689964158770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n         this._text.addEventListener('keypress', (e) => {\n-\n+            if(e === \"Enter\")\n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689964170994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n         this._text.addEventListener('keypress', (e) => {\n-            if(e === \"Enter\")\n+            if(e.key === \"Enter\")\n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689964243843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,10 @@\n         })\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n-        this._text.addEventListener('keypress', (e) => {\n-            if(e.key === \"Enter\")\n+        this._text.addEventListener('keypress', () => {\n+\n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689964262128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n         this._text.addEventListener('keypress', () => {\n-\n+            this._ui.showTextErrorMessage(); \n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689964349687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         })\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n-        this._text.addEventListener('keypress', () => {\n+        this._text.addEventListener('keypress', (e) => {\n             this._ui.showTextErrorMessage(); \n         })\n     }\n }\n"
                },
                {
                    "date": 1689964468813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         })\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n-        this._text.addEventListener('keypress', (e) => {\n+        this._text.addEventListener('keypress', () => {\n             this._ui.showTextErrorMessage(); \n         })\n     }\n }\n"
                },
                {
                    "date": 1689964513280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,10 @@\n         })\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n-        this._text.addEventListener('keypress', () => {\n-            this._ui.showTextErrorMessage(); \n+        this._text.addEventListener('keypress', (e) => {\n+            if(this._text.valu)\n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689964522541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,11 @@\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n         this._text.addEventListener('keypress', (e) => {\n-            if(this._text.valu)\n+            if(e.key === \"Enter\") {\n+                \n+            }\n         })\n     }\n }\n \n"
                },
                {
                    "date": 1689964535851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n         this._text.addEventListener('keypress', (e) => {\n             if(e.key === \"Enter\") {\n-                \n+                this._ui.showTextErrorMessage(); \n             }\n         })\n     }\n }\n"
                },
                {
                    "date": 1689964627162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n         this._text.addEventListener('keypress', (e) => {\n             if(e.key === \"Enter\") {\n+                if(this._text.value === \"\")\n                 this._ui.showTextErrorMessage(); \n             }\n         })\n     }\n"
                },
                {
                    "date": 1689964634531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,11 @@\n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n         this._text.addEventListener('keypress', (e) => {\n             if(e.key === \"Enter\") {\n-                if(this._text.value === \"\")\n+                if(this._text.value === \"\") {\n+                    \n+                }\n                 this._ui.showTextErrorMessage(); \n             }\n         })\n     }\n"
                },
                {
                    "date": 1689964645268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,11 +26,10 @@\n \n         this._text.addEventListener('keypress', (e) => {\n             if(e.key === \"Enter\") {\n                 if(this._text.value === \"\") {\n-                    \n+                    this._ui.showTextErrorMessage(); \n                 }\n-                this._ui.showTextErrorMessage(); \n             }\n         })\n     }\n }\n"
                },
                {
                    "date": 1689964887695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,10 @@\n         this._text.addEventListener('keypress', (e) => {\n             if(e.key === \"Enter\") {\n                 if(this._text.value === \"\") {\n                     this._ui.showTextErrorMessage(); \n+                } else {\n+                    \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689964902100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             if(e.key === \"Enter\") {\n                 if(this._text.value === \"\") {\n                     this._ui.showTextErrorMessage(); \n                 } else {\n-                    \n+                    this._ui.hideTextErrorMessage(); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1689964914021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         })\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n-        this._text.addEventListener('keypress', (e) => {\n+        this._text.addEventListener('keypress', function(e){\n             if(e.key === \"Enter\") {\n                 if(this._text.value === \"\") {\n                     this._ui.showTextErrorMessage(); \n                 } else {\n"
                },
                {
                    "date": 1689964925651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         })\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n-        this._text.addEventListener('keypress', function(e){\n+        this._text.addEventListener('keypress', (e) => {\n             if(e.key === \"Enter\") {\n                 if(this._text.value === \"\") {\n                     this._ui.showTextErrorMessage(); \n                 } else {\n"
                },
                {
                    "date": 1689965082566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         })\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n-        this._text.addEventListener('keypress', (e) => {\n+        this._text.addEventListener('keypress', function(e) => {\n             if(e.key === \"Enter\") {\n                 if(this._text.value === \"\") {\n                     this._ui.showTextErrorMessage(); \n                 } else {\n"
                },
                {
                    "date": 1689965104100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         })\n \n         this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n-        this._text.addEventListener('keypress', function(e) => {\n+        this._text.addEventListener('keypress', (e) => {\n             if(e.key === \"Enter\") {\n                 if(this._text.value === \"\") {\n                     this._ui.showTextErrorMessage(); \n                 } else {\n"
                },
                {
                    "date": 1690040348755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,6 +76,10 @@\n    }\n \n }\n \n+class DataHandler {\n+    \n+}\n+\n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690043720837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,12 @@\n \n }\n \n class DataHandler {\n-    \n+\n+    getMeaning() {\n+        \n+    }\n }\n \n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690043902287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,10 +78,12 @@\n }\n \n class DataHandler {\n \n-    getMeaning() {\n-        \n+   async function name(params) {\n+    \n+   } getMeaning() {\n+\n     }\n }\n \n const app = new App(); \n"
                },
                {
                    "date": 1690043907445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,12 +78,10 @@\n }\n \n class DataHandler {\n \n-   async function name(params) {\n+   async function getMeaning() {\n     \n-   } getMeaning() {\n-\n     }\n }\n \n const app = new App(); \n"
                },
                {
                    "date": 1690043942197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,10 +78,14 @@\n }\n \n class DataHandler {\n \n+    constructor() {\n+        \n+    }\n+\n    async function getMeaning() {\n-    \n+    const res = await()\n     }\n }\n \n const app = new App(); \n"
                },
                {
                    "date": 1690044022041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,12 +79,12 @@\n \n class DataHandler {\n \n     constructor() {\n-        \n+        this.next = t\n     }\n \n-   async function getMeaning() {\n+   async getMeaning() {\n     const res = await()\n     }\n }\n \n"
                },
                {
                    "date": 1690044033396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n         this.next = t\n     }\n \n    async getMeaning() {\n-    const res = await()\n+    const res = await fetch('')\n     }\n }\n \n const app = new App(); \n"
                },
                {
                    "date": 1690044114513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n         this.next = t\n     }\n \n    async getMeaning() {\n-    const res = await fetch('')\n+    const res = await fetch('https://api.dictionaryapi.dev/api/v2/entries/en/hello')\n     }\n }\n \n const app = new App(); \n"
                },
                {
                    "date": 1690044126779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n         this.next = t\n     }\n \n    async getMeaning() {\n-    const res = await fetch('https://api.dictionaryapi.dev/api/v2/entries/en/hello')\n+    const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/hello`)\n     }\n }\n \n const app = new App(); \n"
                },
                {
                    "date": 1690044138397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n         this.next = t\n     }\n \n    async getMeaning() {\n-    const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/hello`)\n+    const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${meaning}`)\n     }\n }\n \n const app = new App(); \n"
                },
                {
                    "date": 1690044143674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n     constructor() {\n         this.next = t\n     }\n \n-   async getMeaning() {\n+   async getMeaning(word) {\n     const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${meaning}`)\n     }\n }\n \n"
                },
                {
                    "date": 1690044188182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,10 +83,11 @@\n         this.next = t\n     }\n \n    async getMeaning(word) {\n-    const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${meaning}`)\n-    }\n+    const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\n+\n }\n+}\n \n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690044203547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,10 +84,10 @@\n     }\n \n    async getMeaning(word) {\n     const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\n-\n+    const data = await res.json(); \n+    }\n }\n-}\n \n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690044221374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,9 @@\n \n    async getMeaning(word) {\n     const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\n     const data = await res.json(); \n+    console.log(data)\n     }\n }\n \n const app = new App(); \n"
                },
                {
                    "date": 1690044227813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,17 +78,13 @@\n }\n \n class DataHandler {\n \n-    constructor() {\n-        this.next = t\n-    }\n-\n    async getMeaning(word) {\n     const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\n     const data = await res.json(); \n     console.log(data)\n-    }\n+ }\n }\n \n const app = new App(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690044249020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,5 +86,6 @@\n  }\n }\n \n const app = new App(); \n+const data = new DataHandler(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690044254720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,5 +87,6 @@\n }\n \n const app = new App(); \n const data = new DataHandler(); \n+data.getMeaning('hello')\n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690044298356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,6 +87,5 @@\n }\n \n const app = new App(); \n const data = new DataHandler(); \n-data.getMeaning('hello')\n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690044317909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n         this.modal = modal; \n         this.font = font;\n         this.moon = moon; \n         this.text = text;  \n+        this._api= DataHandler(); \n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690044324896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n         this.modal = modal; \n         this.font = font;\n         this.moon = moon; \n         this.text = text;  \n-        this._api= DataHandler(); \n+        this.data= DataHandler(); \n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690044340255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,11 @@\n         this.moon = moon; \n         this.text = text;  \n         this.data= DataHandler(); \n     }\n+\n     \n+    \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n    }\n \n"
                },
                {
                    "date": 1690044423381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,10 @@\n             if(e.key === \"Enter\") {\n                 if(this._text.value === \"\") {\n                     this._ui.showTextErrorMessage(); \n                 } else {\n-                    this._ui.hideTextErrorMessage(); \n+                    this._ui.hideTextErrorMessage();\n+                    this._ui.createUi(); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1690044430798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,13 @@\n         this.text = text;  \n         this.data= DataHandler(); \n     }\n \n+\n+    createUi() {\n+        \n+    }\n+\n     \n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690044484011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     }\n \n \n     createUi() {\n-        \n+        this.data.getMeaning('hello')\n     }\n \n     \n     \n"
                },
                {
                    "date": 1690118487519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,14 +86,19 @@\n \n }\n \n class DataHandler {\n-\n+// Get Definition \n+// Synonyms \n+// Part of Speech \n+// Examples\n    async getMeaning(word) {\n     const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\n     const data = await res.json(); \n     console.log(data)\n  }\n+\n+\n }\n \n const app = new App(); \n const data = new DataHandler(); \n"
                },
                {
                    "date": 1690118503457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n // Get Definition \n // Synonyms \n // Part of Speech \n // Examples\n-   async getMeaning(word) {\n+   async getDefinition(word) {\n     const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\n     const data = await res.json(); \n     console.log(data)\n  }\n"
                },
                {
                    "date": 1690118523920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,17 +86,21 @@\n \n }\n \n class DataHandler {\n-// Get Definition \n-// Synonyms \n+\n+\n // Part of Speech \n // Examples\n+// Get Definition \n    async getDefinition(word) {\n     const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\n     const data = await res.json(); \n     console.log(data)\n  }\n+ async getPartOfSpeech(word) {\n+    \n+ }\n \n \n }\n \n"
                },
                {
                    "date": 1690118532303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,11 +96,11 @@\n     const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\n     const data = await res.json(); \n     console.log(data)\n  }\n- async getPartOfSpeech(word) {\n-    \n- }\n+    async getPartOfSpeech(word) {\n+        \n+    }\n \n \n }\n \n"
                },
                {
                    "date": 1690118544654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,8 +97,12 @@\n     const data = await res.json(); \n     console.log(data)\n  }\n     async getPartOfSpeech(word) {\n+\n+    }\n+\n+    async getExample(word) {\n         \n     }\n \n \n"
                },
                {
                    "date": 1690118560553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,13 @@\n     async getExample(word) {\n         \n     }\n \n+    async getSynonymn(word) {\n+        \n+    }\n \n+\n }\n \n const app = new App(); \n const data = new DataHandler(); \n"
                },
                {
                    "date": 1690118606517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,26 +91,29 @@\n \n // Part of Speech \n // Examples\n // Get Definition \n+\n+async getWord(word) \n+\n    async getDefinition(word) {\n     const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\n     const data = await res.json(); \n     console.log(data)\n  }\n-    async getPartOfSpeech(word) {\n+    // async getPartOfSpeech(word) {\n \n-    }\n+    // }\n \n-    async getExample(word) {\n+    // async getExample(word) {\n         \n-    }\n+    // }\n \n-    async getSynonymn(word) {\n-        \n-    }\n+    // async getSynonymn(word) {\n \n+    // }\n \n+\n }\n \n const app = new App(); \n const data = new DataHandler(); \n"
                },
                {
                    "date": 1690118627068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,10 +92,16 @@\n // Part of Speech \n // Examples\n // Get Definition \n \n-async getWord(word) \n+constructor() {\n+    \n+}\n \n+    async getWord(word) {\n+        \n+    } \n+\n    async getDefinition(word) {\n     const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\n     const data = await res.json(); \n     console.log(data)\n"
                },
                {
                    "date": 1690118645228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,18 +86,12 @@\n \n }\n \n class DataHandler {\n+    constructor() {\n+        \n+    }\n \n-\n-// Part of Speech \n-// Examples\n-// Get Definition \n-\n-constructor() {\n-    \n-}\n-\n     async getWord(word) {\n         \n     } \n \n"
                },
                {
                    "date": 1690118660091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n }\n \n class DataHandler {\n     constructor() {\n-        \n+        this._endpoint = \n     }\n \n     async getWord(word) {\n         \n"
                },
                {
                    "date": 1690118672423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n }\n \n class DataHandler {\n     constructor() {\n-        this._endpoint = \n+        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/'\n     }\n \n     async getWord(word) {\n         \n"
                },
                {
                    "date": 1690118733840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,17 +87,17 @@\n }\n \n class DataHandler {\n     constructor() {\n-        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/'\n+        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n     }\n \n     async getWord(word) {\n         \n     } \n \n    async getDefinition(word) {\n-    const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\n+    const res = await fetch(``)\n     const data = await res.json(); \n     console.log(data)\n  }\n     // async getPartOfSpeech(word) {\n"
                },
                {
                    "date": 1690118741861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n         \n     } \n \n    async getDefinition(word) {\n-    const res = await fetch(``)\n+    const res = await fetch(`${this._endpoint}`)\n     const data = await res.json(); \n     console.log(data)\n  }\n     // async getPartOfSpeech(word) {\n"
                },
                {
                    "date": 1690118756946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n         \n     } \n \n    async getDefinition(word) {\n-    const res = await fetch(`${this._endpoint}`)\n+    const res = await fetch(`${this._endpoint}${word}`)\n     const data = await res.json(); \n     console.log(data)\n  }\n     // async getPartOfSpeech(word) {\n"
                },
                {
                    "date": 1690118772268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,8 +91,10 @@\n         this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n     }\n \n     async getWord(word) {\n+        const res = await fetch(`${this._endpoint}${word}`)\n+        const data = await res.json(); \n         \n     } \n \n    async getDefinition(word) {\n"
                },
                {
                    "date": 1690119045630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,8 +91,11 @@\n         this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n     }\n \n     async getWord(word) {\n+        try {\n+            \n+        }\n         const res = await fetch(`${this._endpoint}${word}`)\n         const data = await res.json(); \n         \n     } \n"
                },
                {
                    "date": 1690119051114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,11 +92,11 @@\n     }\n \n     async getWord(word) {\n         try {\n-            \n+            const res = await fetch(`${this._endpoint}${word}`)\n         }\n-        const res = await fetch(`${this._endpoint}${word}`)\n+      \n         const data = await res.json(); \n         \n     } \n \n"
                },
                {
                    "date": 1690119057414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,12 +93,13 @@\n \n     async getWord(word) {\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n+\n+        const data = await res.json(); \n+        \n         }\n       \n-        const data = await res.json(); \n-        \n     } \n \n    async getDefinition(word) {\n     const res = await fetch(`${this._endpoint}${word}`)\n"
                },
                {
                    "date": 1690119072462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,11 +93,11 @@\n \n     async getWord(word) {\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n-\n-        const data = await res.json(); \n-        \n+            const data = await res.json(); \n+        } catch (error) {\n+            \n         }\n       \n     } \n \n"
                },
                {
                    "date": 1690119091998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n             const data = await res.json(); \n         } catch (error) {\n-            \n+            console.log(data.title)\n         }\n       \n     } \n \n"
                },
                {
                    "date": 1690119217167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,10 @@\n \n     async getWord(word) {\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n-            const data = await res.json(); \n+            const data = await res.json();\n+            return \n         } catch (error) {\n             console.log(data.title)\n         }\n       \n"
                },
                {
                    "date": 1690119233311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,10 +93,9 @@\n \n     async getWord(word) {\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n-            const data = await res.json();\n-            return \n+            const data = await res.json(); \n         } catch (error) {\n             console.log(data.title)\n         }\n       \n"
                },
                {
                    "date": 1690119246241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,8 +97,10 @@\n             const data = await res.json(); \n         } catch (error) {\n             console.log(data.title)\n         }\n+\n+        return data.\n       \n     } \n \n    async getDefinition(word) {\n"
                },
                {
                    "date": 1690119263689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,9 @@\n         } catch (error) {\n             console.log(data.title)\n         }\n \n-        return data.\n+        return data[0].word\n       \n     } \n \n    async getDefinition(word) {\n"
                },
                {
                    "date": 1690119277513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,10 +46,8 @@\n         this.moon = moon; \n         this.text = text;  \n         this.data= DataHandler(); \n     }\n-\n-\n     createUi() {\n         this.data.getMeaning('hello')\n     }\n \n@@ -98,9 +96,9 @@\n         } catch (error) {\n             console.log(data.title)\n         }\n \n-        return data[0].word\n+        return data[0].word; \n       \n     } \n \n    async getDefinition(word) {\n"
                },
                {
                    "date": 1690119292466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,16 +44,14 @@\n         this.modal = modal; \n         this.font = font;\n         this.moon = moon; \n         this.text = text;  \n-        this.data= DataHandler(); \n+        this.handler= DataHandler(); \n     }\n     createUi() {\n         this.data.getMeaning('hello')\n     }\n-\n     \n-    \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n    }\n \n"
                },
                {
                    "date": 1690119309115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         this.text = text;  \n         this.handler= DataHandler(); \n     }\n     createUi() {\n-        this.data.getMeaning('hello')\n+        this.handler.getWord(te)\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690119314415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         this.text = text;  \n         this.handler= DataHandler(); \n     }\n     createUi() {\n-        this.handler.getWord(te)\n+        this.handler.getWord(this.text)\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690119320228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         this.text = text;  \n         this.handler= DataHandler(); \n     }\n     createUi() {\n-        this.handler.getWord(this.text)\n+        this.handler.getWord(this.text.value)\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690119341084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n                 if(this._text.value === \"\") {\n                     this._ui.showTextErrorMessage(); \n                 } else {\n                     this._ui.hideTextErrorMessage();\n-                    this._ui.createUi(); \n+                    this._ui.createUi(this._text.value); \n                 }\n             }\n         })\n     }\n"
                },
                {
                    "date": 1690119350387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         this.moon = moon; \n         this.text = text;  \n         this.handler= DataHandler(); \n     }\n-    createUi() {\n+    createUi(word) {\n         this.handler.getWord(this.text.value)\n     }\n     \n     arrowDownModal() {\n"
                },
                {
                    "date": 1690119359761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         this.text = text;  \n         this.handler= DataHandler(); \n     }\n     createUi(word) {\n-        this.handler.getWord(this.text.value)\n+        let word = this.handler.getWord(word)\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690119365970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,10 @@\n         this.text = text;  \n         this.handler= DataHandler(); \n     }\n     createUi(word) {\n-        let word = this.handler.getWord(word)\n+        let word = this.handler.getWord(word); \n+        \n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690119567061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,10 +47,10 @@\n         this.text = text;  \n         this.handler= DataHandler(); \n     }\n     createUi(word) {\n-        let word = this.handler.getWord(word); \n-        \n+        let neWord = this.handler.getWord(word); \n+\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690119574790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,10 +47,10 @@\n         this.text = text;  \n         this.handler= DataHandler(); \n     }\n     createUi(word) {\n-        let neWord = this.handler.getWord(word); \n-\n+        let newWord = this.handler.getWord(word); \n+        console.log(newWord)\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690119582349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         this.modal = modal; \n         this.font = font;\n         this.moon = moon; \n         this.text = text;  \n-        this.handler= DataHandler(); \n+        this.handler= new DataHandler(); \n     }\n     createUi(word) {\n         let newWord = this.handler.getWord(word); \n         console.log(newWord)\n"
                },
                {
                    "date": 1690119650423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n         } catch (error) {\n             console.log(data.title)\n         }\n \n-        return data[0].word; \n+        return data.word\n       \n     } \n \n    async getDefinition(word) {\n"
                },
                {
                    "date": 1690119659608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,13 +91,14 @@\n     async getWord(word) {\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n             const data = await res.json(); \n+            return data.word\n+      \n         } catch (error) {\n             console.log(data.title)\n         }\n \n-        return data.word\n       \n     } \n \n    async getDefinition(word) {\n"
                },
                {
                    "date": 1690119665348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n     async getWord(word) {\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n             const data = await res.json(); \n-            return data.word\n+            return data[0].word\n       \n         } catch (error) {\n             console.log(data.title)\n         }\n"
                },
                {
                    "date": 1690119712906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,8 @@\n         this.handler= new DataHandler(); \n     }\n     createUi(word) {\n         let newWord = this.handler.getWord(word); \n-        console.log(newWord)\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n@@ -96,9 +95,8 @@\n       \n         } catch (error) {\n             console.log(data.title)\n         }\n-\n       \n     } \n \n    async getDefinition(word) {\n"
                },
                {
                    "date": 1690119812887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,8 +91,12 @@\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n             const data = await res.json(); \n             return data[0].word\n+\n+            if(!res.ok) {\n+                \n+            }\n       \n         } catch (error) {\n             console.log(data.title)\n         }\n"
                },
                {
                    "date": 1690119820884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,14 +89,15 @@\n \n     async getWord(word) {\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n-            const data = await res.json(); \n-            return data[0].word\n-\n+            const data = await res.json();\n             if(!res.ok) {\n                 \n             }\n+            return data[0].word\n+\n+            \n       \n         } catch (error) {\n             console.log(data.title)\n         }\n"
                },
                {
                    "date": 1690119841458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n             const data = await res.json();\n             if(!res.ok) {\n-                \n+                throw new Error('Request Failed')\n             }\n             return data[0].word\n \n             \n"
                },
                {
                    "date": 1690119872161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,13 +94,10 @@\n             if(!res.ok) {\n                 throw new Error('Request Failed')\n             }\n             return data[0].word\n-\n-            \n-      \n         } catch (error) {\n-            console.log(data.title)\n+            console.log(error)\n         }\n       \n     } \n \n"
                },
                {
                    "date": 1690119956295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         this.text = text;  \n         this.handler= new DataHandler(); \n     }\n     createUi(word) {\n-        let newWord = this.handler.getWord(word); \n+        let newWord = this.handler.getWord(word)\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690119961740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,9 @@\n         this.handler= new DataHandler(); \n     }\n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n+        console.log(newWord)\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690120053692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,8 @@\n         this.handler= new DataHandler(); \n     }\n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n-        console.log(newWord)\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690120070885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n             const data = await res.json();\n             if(!res.ok) {\n-                throw new Error('Request Failed')\n+                throw new Error('Request Failed'); \n             }\n             return data[0].word\n         } catch (error) {\n             console.log(error)\n"
                },
                {
                    "date": 1690120119634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,13 +91,14 @@\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n             const data = await res.json();\n             if(!res.ok) {\n-                throw new Error('Request Failed'); \n+                throw new Error('Request Failed');\n             }\n             return data[0].word\n         } catch (error) {\n             console.log(error)\n+            return error\n         }\n       \n     } \n \n"
                },
                {
                    "date": 1690120138062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,9 @@\n         this.handler= new DataHandler(); \n     }\n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n+        console.log(newWord)\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n@@ -95,9 +96,8 @@\n                 throw new Error('Request Failed');\n             }\n             return data[0].word\n         } catch (error) {\n-            console.log(error)\n             return error\n         }\n       \n     } \n"
                },
                {
                    "date": 1690120185470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,8 @@\n         this.handler= new DataHandler(); \n     }\n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n-        console.log(newWord)\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690120198578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,9 @@\n         this.handler= new DataHandler(); \n     }\n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n+        console.log(newWord)\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690120232952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed');\n             }\n-            return data[0].word\n+            return data\n         } catch (error) {\n             return error\n         }\n       \n"
                },
                {
                    "date": 1690120340093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed');\n             }\n-            return data\n+            return data[0].word;\n         } catch (error) {\n             return error\n         }\n       \n"
                },
                {
                    "date": 1690120395232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,11 @@\n         this.handler= new DataHandler(); \n     }\n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n-        console.log(newWord)\n+        newWord.catch(() => {\n+            \n+        })\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690120436308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,12 +46,20 @@\n         this.moon = moon; \n         this.text = text;  \n         this.handler= new DataHandler(); \n     }\n+\n+\n+    loadNotFound() {\n+        \n+    }\n+\n+\n+\n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         newWord.catch(() => {\n-            \n+\n         })\n     }\n     \n     arrowDownModal() {\n"
                },
                {
                    "date": 1690120463489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     }\n \n \n     loadNotFound() {\n-        \n+        document.querySelector('.not-found')\n     }\n \n \n \n"
                },
                {
                    "date": 1690120475490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     }\n \n \n     loadNotFound() {\n-        document.querySelector('.not-found')\n+        document.querySelector('.not-found').classList.add('')\n     }\n \n \n \n"
                },
                {
                    "date": 1690120504048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     }\n \n \n     loadNotFound() {\n-        document.querySelector('.not-found').classList.add('')\n+        document.querySelector('.not-found').classList.add('flex')\n     }\n \n \n \n"
                },
                {
                    "date": 1690120509391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n \n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         newWord.catch(() => {\n-\n+            this.loadNotFound\n         })\n     }\n     \n     arrowDownModal() {\n"
                },
                {
                    "date": 1690120548811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,14 +52,18 @@\n     loadNotFound() {\n         document.querySelector('.not-found').classList.add('flex')\n     }\n \n+    removeNotFound() {\n+        \n+    }\n \n \n+\n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         newWord.catch(() => {\n-            this.loadNotFound\n+            this.loadNotFound(); \n         })\n     }\n     \n     arrowDownModal() {\n"
                },
                {
                    "date": 1690120567014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n         document.querySelector('.not-found').classList.add('flex')\n     }\n \n     removeNotFound() {\n-        \n+        document.querySelector('.not-found').classList.remove('flex')\n     }\n \n \n \n"
                },
                {
                    "date": 1690120593570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,8 @@\n         document.querySelector('.not-found').classList.remove('flex')\n     }\n \n \n-\n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         newWord.catch(() => {\n             this.loadNotFound(); \n"
                },
                {
                    "date": 1690120602258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,141 @@\n+class App {\n+    constructor() {\n+        this._body = document.querySelector(\"body\"); \n+        this._arrowDown = document.querySelector(\".arrow-down\"); \n+        this._modal = document.querySelector(\".modal\"); \n+        this._font = document.querySelector(\".right .fonts p\");\n+        this._slider = document.querySelector(\".slider\"); \n+        this._moon = document.querySelector(\".moon\"); \n+        this._text = document.querySelector(\"input[type='text']\"); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n+    }\n+\n+    run() {\n+        this._arrowDown.addEventListener(\"click\", () => {\n+            this._ui.arrowDownModal(); \n+        })\n+\n+        // Switch Fonts -> Select List Items in Modal View\n+        document.querySelectorAll('.modal ul li').forEach((element) => {\n+            element.addEventListener(\"click\", () => {\n+                this._ui.switchFonts(element); \n+            })\n+        })\n+\n+        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n+\n+        this._text.addEventListener('keypress', (e) => {\n+            if(e.key === \"Enter\") {\n+                if(this._text.value === \"\") {\n+                    this._ui.showTextErrorMessage(); \n+                } else {\n+                    this._ui.hideTextErrorMessage();\n+                    this._ui.createUi(this._text.value); \n+                }\n+            }\n+        })\n+    }\n+}\n+\n+class UI {\n+    constructor(body, arrowDown, modal, font, moon, text) {\n+        this.body = body\n+        this.arrowDown = arrowDown; \n+        this.modal = modal; \n+        this.font = font;\n+        this.moon = moon; \n+        this.text = text;  \n+        this.handler= new DataHandler(); \n+    }\n+\n+\n+    loadNotFound() {\n+        document.querySelector('.not-found').classList.add('flex')\n+    }\n+\n+    removeNotFound() {\n+        document.querySelector('.not-found').classList.remove('flex')\n+    }\n+\n+\n+    createUi(word) {\n+        this.removeNotFound(); \n+        let newWord = this.handler.getWord(word)\n+        newWord.catch(() => {\n+            this.loadNotFound(); \n+        })\n+    }\n+    \n+    arrowDownModal() {\n+        this.modal.classList.toggle(\"display\"); \n+   }\n+\n+   showTextErrorMessage() {\n+    this.text.classList.add('error'); \n+    document.querySelector('.empty').classList.add('display'); \n+   }\n+\n+   hideTextErrorMessage() {\n+    this.text.classList.remove('error'); \n+    document.querySelector('.empty').classList.remove('display'); \n+   }\n+\n+   toggleDark() {\n+    this.body.classList.toggle('dark'); \n+    this.moon.classList.toggle('dark');\n+    this.text.classList.toggle('dark'); \n+    this.modal.classList.toggle('dark'); \n+   }\n+\n+   switchFonts(element) {\n+    this.font.textContent = element.textContent; \n+    this.body.style.fontFamily = element.textContent; \n+    if(element.textContent === \"Mono\") {\n+        this.body.style.fontFamily = \"MonoSpace\"; \n+    }\n+   }\n+\n+}\n+\n+class DataHandler {\n+    constructor() {\n+        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n+    }\n+\n+    async getWord(word) {\n+        try {\n+            const res = await fetch(`${this._endpoint}${word}`)\n+            const data = await res.json();\n+            if(!res.ok) {\n+                throw new Error('Request Failed');\n+            }\n+            return data[0].word;\n+        } catch (error) {\n+            return error\n+        }\n+      \n+    } \n+\n+   async getDefinition(word) {\n+    const res = await fetch(`${this._endpoint}${word}`)\n+    const data = await res.json(); \n+    console.log(data)\n+ }\n+    // async getPartOfSpeech(word) {\n+\n+    // }\n+\n+    // async getExample(word) {\n+        \n+    // }\n+\n+    // async getSynonymn(word) {\n+\n+    // }\n+\n+\n+}\n+\n+const app = new App(); \n+const data = new DataHandler(); \n+app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690120628276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,8 @@\n     }\n \n \n     createUi(word) {\n-        this.removeNotFound(); \n         let newWord = this.handler.getWord(word)\n         newWord.catch(() => {\n             this.loadNotFound(); \n         })\n@@ -137,145 +136,5 @@\n }\n \n const app = new App(); \n const data = new DataHandler(); \n-app.run(); \n-class App {\n-    constructor() {\n-        this._body = document.querySelector(\"body\"); \n-        this._arrowDown = document.querySelector(\".arrow-down\"); \n-        this._modal = document.querySelector(\".modal\"); \n-        this._font = document.querySelector(\".right .fonts p\");\n-        this._slider = document.querySelector(\".slider\"); \n-        this._moon = document.querySelector(\".moon\"); \n-        this._text = document.querySelector(\"input[type='text']\"); \n-        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n-    }\n-\n-    run() {\n-        this._arrowDown.addEventListener(\"click\", () => {\n-            this._ui.arrowDownModal(); \n-        })\n-\n-        // Switch Fonts -> Select List Items in Modal View\n-        document.querySelectorAll('.modal ul li').forEach((element) => {\n-            element.addEventListener(\"click\", () => {\n-                this._ui.switchFonts(element); \n-            })\n-        })\n-\n-        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n-\n-        this._text.addEventListener('keypress', (e) => {\n-            if(e.key === \"Enter\") {\n-                if(this._text.value === \"\") {\n-                    this._ui.showTextErrorMessage(); \n-                } else {\n-                    this._ui.hideTextErrorMessage();\n-                    this._ui.createUi(this._text.value); \n-                }\n-            }\n-        })\n-    }\n-}\n-\n-class UI {\n-    constructor(body, arrowDown, modal, font, moon, text) {\n-        this.body = body\n-        this.arrowDown = arrowDown; \n-        this.modal = modal; \n-        this.font = font;\n-        this.moon = moon; \n-        this.text = text;  \n-        this.handler= new DataHandler(); \n-    }\n-\n-\n-    loadNotFound() {\n-        document.querySelector('.not-found').classList.add('flex')\n-    }\n-\n-    removeNotFound() {\n-        document.querySelector('.not-found').classList.remove('flex')\n-    }\n-\n-\n-    createUi(word) {\n-        let newWord = this.handler.getWord(word)\n-        newWord.catch(() => {\n-            this.loadNotFound(); \n-        })\n-    }\n-    \n-    arrowDownModal() {\n-        this.modal.classList.toggle(\"display\"); \n-   }\n-\n-   showTextErrorMessage() {\n-    this.text.classList.add('error'); \n-    document.querySelector('.empty').classList.add('display'); \n-   }\n-\n-   hideTextErrorMessage() {\n-    this.text.classList.remove('error'); \n-    document.querySelector('.empty').classList.remove('display'); \n-   }\n-\n-   toggleDark() {\n-    this.body.classList.toggle('dark'); \n-    this.moon.classList.toggle('dark');\n-    this.text.classList.toggle('dark'); \n-    this.modal.classList.toggle('dark'); \n-   }\n-\n-   switchFonts(element) {\n-    this.font.textContent = element.textContent; \n-    this.body.style.fontFamily = element.textContent; \n-    if(element.textContent === \"Mono\") {\n-        this.body.style.fontFamily = \"MonoSpace\"; \n-    }\n-   }\n-\n-}\n-\n-class DataHandler {\n-    constructor() {\n-        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n-    }\n-\n-    async getWord(word) {\n-        try {\n-            const res = await fetch(`${this._endpoint}${word}`)\n-            const data = await res.json();\n-            if(!res.ok) {\n-                throw new Error('Request Failed');\n-            }\n-            return data[0].word;\n-        } catch (error) {\n-            return error\n-        }\n-      \n-    } \n-\n-   async getDefinition(word) {\n-    const res = await fetch(`${this._endpoint}${word}`)\n-    const data = await res.json(); \n-    console.log(data)\n- }\n-    // async getPartOfSpeech(word) {\n-\n-    // }\n-\n-    // async getExample(word) {\n-        \n-    // }\n-\n-    // async getSynonymn(word) {\n-\n-    // }\n-\n-\n-}\n-\n-const app = new App(); \n-const data = new DataHandler(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690120676081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,13 +114,13 @@\n         }\n       \n     } \n \n-   async getDefinition(word) {\n-    const res = await fetch(`${this._endpoint}${word}`)\n-    const data = await res.json(); \n-    console.log(data)\n- }\n+//    async getDefinition(word) {\n+//     const res = await fetch(`${this._endpoint}${word}`)\n+//     const data = await res.json(); \n+//     console.log(data)\n+//  }\n     // async getPartOfSpeech(word) {\n \n     // }\n \n"
                },
                {
                    "date": 1690120689761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n                 throw new Error('Request Failed');\n             }\n             return data[0].word;\n         } catch (error) {\n-            return error\n+            return error;\n         }\n       \n     } \n \n"
                },
                {
                    "date": 1690120754804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,11 +59,8 @@\n \n \n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n-        newWord.catch(() => {\n-            this.loadNotFound(); \n-        })\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690120783214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,11 @@\n \n \n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n+        newWord.then(() => {\n+            console.log(\"HERE\")\n+        })\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690120809483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n \n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         newWord.then(() => {\n-            console.log(\"HERE\")\n+            \n         })\n     }\n     \n     arrowDownModal() {\n"
                },
                {
                    "date": 1690120819749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n \n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         newWord.then(() => {\n-            \n+            this.removeNotFound(); \n         })\n     }\n     \n     arrowDownModal() {\n"
                },
                {
                    "date": 1690120827288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,10 @@\n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         newWord.then(() => {\n             this.removeNotFound(); \n+        }).catch(() => {\n+            \n         })\n     }\n     \n     arrowDownModal() {\n"
                },
                {
                    "date": 1690120832548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,10 @@\n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         newWord.then(() => {\n             this.removeNotFound(); \n-        }).catch(() => {\n+        })\n+        .catch(() => {\n             \n         })\n     }\n     \n"
                },
                {
                    "date": 1690120841233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n         newWord.then(() => {\n             this.removeNotFound(); \n         })\n         .catch(() => {\n-            \n+            this.loadNotFound(); \n         })\n     }\n     \n     arrowDownModal() {\n"
                },
                {
                    "date": 1690120892946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,9 @@\n         newWord.then(() => {\n             this.removeNotFound(); \n         })\n         .catch(() => {\n+            console.log(\"HERE\")\n             this.loadNotFound(); \n         })\n     }\n     \n"
                },
                {
                    "date": 1690120917036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,11 +61,11 @@\n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         newWord.then(() => {\n             this.removeNotFound(); \n+            console.log(\"HERE\");\n         })\n         .catch(() => {\n-            console.log(\"HERE\")\n             this.loadNotFound(); \n         })\n     }\n     \n"
                },
                {
                    "date": 1690120943640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n \n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         newWord.then(() => {\n-            this.removeNotFound(); \n+            this.loadNotFound(); \n             console.log(\"HERE\");\n         })\n         .catch(() => {\n             this.loadNotFound(); \n"
                },
                {
                    "date": 1690121229558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     }\n \n \n     loadNotFound() {\n-        document.querySelector('.not-found').classList.add('flex')\n+        document.querySelector('.not-found').classList.add('flex-display ')\n     }\n \n     removeNotFound() {\n         document.querySelector('.not-found').classList.remove('flex')\n"
                },
                {
                    "date": 1690121236821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,17 +53,16 @@\n         document.querySelector('.not-found').classList.add('flex-display ')\n     }\n \n     removeNotFound() {\n-        document.querySelector('.not-found').classList.remove('flex')\n+        document.querySelector('.not-found').classList.remove('flex-display ')\n     }\n \n \n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         newWord.then(() => {\n             this.loadNotFound(); \n-            console.log(\"HERE\");\n         })\n         .catch(() => {\n             this.loadNotFound(); \n         })\n"
                },
                {
                    "date": 1690121291806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     }\n \n \n     loadNotFound() {\n-        document.querySelector('.not-found').classList.add('flex-display ')\n+        document.querySelector('.not-found').classList.add('flex-display')\n     }\n \n     removeNotFound() {\n         document.querySelector('.not-found').classList.remove('flex-display ')\n"
                },
                {
                    "date": 1690121312709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,16 +53,15 @@\n         document.querySelector('.not-found').classList.add('flex-display')\n     }\n \n     removeNotFound() {\n-        document.querySelector('.not-found').classList.remove('flex-display ')\n+        document.querySelector('.not-found').classList.remove('flex-display')\n     }\n \n \n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         newWord.then(() => {\n-            this.loadNotFound(); \n         })\n         .catch(() => {\n             this.loadNotFound(); \n         })\n"
                },
                {
                    "date": 1690121485714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,8 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed');\n             }\n-            return data[0].word;\n         } catch (error) {\n             return error;\n         }\n       \n"
                },
                {
                    "date": 1690121496870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n             if(!res.ok) {\n                 throw new Error('Request Failed');\n             }\n         } catch (error) {\n-            return error;\n+            console.log(error)\n         }\n       \n     } \n \n"
                },
                {
                    "date": 1690121698176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,13 +59,11 @@\n \n \n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n-        newWord.then(() => {\n+        newWord.catch(() => {\n+            console.log('HERE')\n         })\n-        .catch(() => {\n-            this.loadNotFound(); \n-        })\n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690121704289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,10 +59,11 @@\n \n \n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n+        console.log(newWord);\n         newWord.catch(() => {\n-            console.log('HERE')\n+            console.log('HERE');\n         })\n     }\n     \n     arrowDownModal() {\n"
                },
                {
                    "date": 1690121874964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,12 +106,12 @@\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n             const data = await res.json();\n             if(!res.ok) {\n-                throw new Error('Request Failed');\n+                throw \n             }\n         } catch (error) {\n-            console.log(error)\n+            throw error\n         }\n       \n     } \n \n"
                },
                {
                    "date": 1690121884636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,13 +105,10 @@\n     async getWord(word) {\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n             const data = await res.json();\n-            if(!res.ok) {\n-                throw \n-            }\n         } catch (error) {\n-            throw error\n+            throw error; \n         }\n       \n     } \n \n"
                },
                {
                    "date": 1690121922292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,8 +105,11 @@\n     async getWord(word) {\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n             const data = await res.json();\n+            if(!res.ok) {\n+                throw error; \n+            }\n         } catch (error) {\n             throw error; \n         }\n       \n"
                },
                {
                    "date": 1690121972514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,9 @@\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n             const data = await res.json();\n             if(!res.ok) {\n-                throw error; \n+                throw new Error('Request Failed'); \n             }\n         } catch (error) {\n             throw error; \n         }\n"
                },
                {
                    "date": 1690122023323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         console.log(newWord);\n         newWord.catch(() => {\n-            console.log('HERE');\n+            this.loadNotFound(); \n         })\n     }\n     \n     arrowDownModal() {\n"
                },
                {
                    "date": 1690122059378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,8 +108,9 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed'); \n             }\n+            return data\n         } catch (error) {\n             throw error; \n         }\n       \n"
                },
                {
                    "date": 1690122095569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,11 @@\n \n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         console.log(newWord);\n+        newWord.then(() => {\n+            \n+        })\n         newWord.catch(() => {\n             this.loadNotFound(); \n         })\n     }\n"
                },
                {
                    "date": 1690122105462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n     createUi(word) {\n         let newWord = this.handler.getWord(word)\n         console.log(newWord);\n         newWord.then(() => {\n-            \n+            this.removeNotFound(); \n         })\n         newWord.catch(() => {\n             this.loadNotFound(); \n         })\n"
                },
                {
                    "date": 1690122195423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,15 +57,15 @@\n         document.querySelector('.not-found').classList.remove('flex-display')\n     }\n \n \n-    createUi(word) {\n+   await createUi(word) {\n         let newWord = this.handler.getWord(word)\n         console.log(newWord);\n         newWord.then(() => {\n             this.removeNotFound(); \n         })\n-        newWord.catch(() => {\n+        .catch(() => {\n             this.loadNotFound(); \n         })\n     }\n     \n"
                },
                {
                    "date": 1690122201712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         document.querySelector('.not-found').classList.remove('flex-display')\n     }\n \n \n-   await createUi(word) {\n+   async createUi(word) {\n         let newWord = this.handler.getWord(word)\n         console.log(newWord);\n         newWord.then(() => {\n             this.removeNotFound(); \n"
                },
                {
                    "date": 1690122234273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,11 @@\n     }\n \n \n    async createUi(word) {\n+        try {\n+            \n+        }\n         let newWord = this.handler.getWord(word)\n         console.log(newWord);\n         newWord.then(() => {\n             this.removeNotFound(); \n"
                },
                {
                    "date": 1690122241710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,12 +59,13 @@\n \n \n    async createUi(word) {\n         try {\n-            \n+            let newWord = this.handler.getWord(word)\n+            console.log(newWord);\n         }\n-        let newWord = this.handler.getWord(word)\n-        console.log(newWord);\n+     \n+     \n         newWord.then(() => {\n             this.removeNotFound(); \n         })\n         .catch(() => {\n"
                },
                {
                    "date": 1690122252891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n \n \n    async createUi(word) {\n         try {\n-            let newWord = this.handler.getWord(word)\n+            let newWord = await this.handler.getWord(word); \n             console.log(newWord);\n         }\n      \n      \n"
                },
                {
                    "date": 1690122273347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,8 @@\n \n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n-            console.log(newWord);\n         }\n      \n      \n         newWord.then(() => {\n"
                },
                {
                    "date": 1690122279591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,11 +60,11 @@\n \n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n+        } catch {\n+            \n         }\n-     \n-     \n         newWord.then(() => {\n             this.removeNotFound(); \n         })\n         .catch(() => {\n"
                },
                {
                    "date": 1690122295118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,17 +60,16 @@\n \n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n-        } catch {\n-            \n+        } \n+        catch {\n+            this.loadNotFound(); \n         }\n         newWord.then(() => {\n             this.removeNotFound(); \n         })\n-        .catch(() => {\n-            this.loadNotFound(); \n-        })\n+      \n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690122301631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,14 +62,10 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n         } \n         catch {\n-            this.loadNotFound(); \n+            this.loadNotFound();\n         }\n-        newWord.then(() => {\n-            this.removeNotFound(); \n-        })\n-      \n     }\n     \n     arrowDownModal() {\n         this.modal.classList.toggle(\"display\"); \n"
                },
                {
                    "date": 1690122308043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n \n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n+            this.removeNotFound(); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690122344690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,8 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed'); \n             }\n-            return data\n         } catch (error) {\n             throw error; \n         }\n       \n"
                },
                {
                    "date": 1690122376970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n+            console.log(newWord)\n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690122393758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n-            console.log(newWord)\n+            console.log(newWord);\n         } \n         catch {\n             this.loadNotFound();\n         }\n@@ -111,8 +111,9 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed'); \n             }\n+            return data\n         } catch (error) {\n             throw error; \n         }\n       \n"
                },
                {
                    "date": 1690122449345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n-            console.log(newWord);\n+            \n         } \n         catch {\n             this.loadNotFound();\n         }\n@@ -111,9 +111,9 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed'); \n             }\n-            return data\n+            return data;\n         } catch (error) {\n             throw error; \n         }\n       \n"
                },
                {
                    "date": 1690122508432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n-            \n+            createWordView(); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690122513919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,13 @@\n     removeNotFound() {\n         document.querySelector('.not-found').classList.remove('flex-display')\n     }\n \n+    createWordView() {\n+        \n+    }\n \n+\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n"
                },
                {
                    "date": 1690122530233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         document.querySelector('.not-found').classList.remove('flex-display')\n     }\n \n     createWordView() {\n-        \n+        document.querySelector('main')\n     }\n \n \n    async createUi(word) {\n"
                },
                {
                    "date": 1690122583930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,148 @@\n+class App {\n+    constructor() {\n+        this._body = document.querySelector(\"body\"); \n+        this._arrowDown = document.querySelector(\".arrow-down\"); \n+        this._modal = document.querySelector(\".modal\"); \n+        this._font = document.querySelector(\".right .fonts p\");\n+        this._slider = document.querySelector(\".slider\"); \n+        this._moon = document.querySelector(\".moon\"); \n+        this._text = document.querySelector(\"input[type='text']\"); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n+    }\n+\n+    run() {\n+        this._arrowDown.addEventListener(\"click\", () => {\n+            this._ui.arrowDownModal(); \n+        })\n+\n+        // Switch Fonts -> Select List Items in Modal View\n+        document.querySelectorAll('.modal ul li').forEach((element) => {\n+            element.addEventListener(\"click\", () => {\n+                this._ui.switchFonts(element); \n+            })\n+        })\n+\n+        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n+\n+        this._text.addEventListener('keypress', (e) => {\n+            if(e.key === \"Enter\") {\n+                if(this._text.value === \"\") {\n+                    this._ui.showTextErrorMessage(); \n+                } else {\n+                    this._ui.hideTextErrorMessage();\n+                    this._ui.createUi(this._text.value); \n+                }\n+            }\n+        })\n+    }\n+}\n+\n+class UI {\n+    constructor(body, arrowDown, modal, font, moon, text) {\n+        this.body = body\n+        this.arrowDown = arrowDown; \n+        this.modal = modal; \n+        this.font = font;\n+        this.moon = moon; \n+        this.text = text;  \n+        this.handler= new DataHandler(); \n+    }\n+\n+\n+    loadNotFound() {\n+        document.querySelector('.not-found').classList.add('flex-display')\n+    }\n+\n+    removeNotFound() {\n+        document.querySelector('.not-found').classList.remove('flex-display')\n+    }\n+\n+    createWordView() {\n+        let main = document.createElement('main')\n+    }\n+\n+\n+   async createUi(word) {\n+        try {\n+            let newWord = await this.handler.getWord(word); \n+            this.removeNotFound(); \n+            createWordView(); \n+        } \n+        catch {\n+            this.loadNotFound();\n+        }\n+    }\n+    \n+    arrowDownModal() {\n+        this.modal.classList.toggle(\"display\"); \n+   }\n+\n+   showTextErrorMessage() {\n+    this.text.classList.add('error'); \n+    document.querySelector('.empty').classList.add('display'); \n+   }\n+\n+   hideTextErrorMessage() {\n+    this.text.classList.remove('error'); \n+    document.querySelector('.empty').classList.remove('display'); \n+   }\n+\n+   toggleDark() {\n+    this.body.classList.toggle('dark'); \n+    this.moon.classList.toggle('dark');\n+    this.text.classList.toggle('dark'); \n+    this.modal.classList.toggle('dark'); \n+   }\n+\n+   switchFonts(element) {\n+    this.font.textContent = element.textContent; \n+    this.body.style.fontFamily = element.textContent; \n+    if(element.textContent === \"Mono\") {\n+        this.body.style.fontFamily = \"MonoSpace\"; \n+    }\n+   }\n+\n+}\n+\n+class DataHandler {\n+    constructor() {\n+        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n+    }\n+\n+    async getWord(word) {\n+        try {\n+            const res = await fetch(`${this._endpoint}${word}`)\n+            const data = await res.json();\n+            if(!res.ok) {\n+                throw new Error('Request Failed'); \n+            }\n+            return data;\n+        } catch (error) {\n+            throw error; \n+        }\n+      \n+    } \n+\n+//    async getDefinition(word) {\n+//     const res = await fetch(`${this._endpoint}${word}`)\n+//     const data = await res.json(); \n+//     console.log(data)\n+//  }\n+    // async getPartOfSpeech(word) {\n+\n+    // }\n+\n+    // async getExample(word) {\n+        \n+    // }\n+\n+    // async getSynonymn(word) {\n+\n+    // }\n+\n+\n+}\n+\n+const app = new App(); \n+const data = new DataHandler(); \n+app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690122595123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,9 @@\n     }\n \n     createWordView() {\n         let main = document.createElement('main')\n+        main.innerHTML()\n     }\n \n \n    async createUi(word) {\n@@ -144,153 +145,5 @@\n }\n \n const app = new App(); \n const data = new DataHandler(); \n-app.run(); \n-class App {\n-    constructor() {\n-        this._body = document.querySelector(\"body\"); \n-        this._arrowDown = document.querySelector(\".arrow-down\"); \n-        this._modal = document.querySelector(\".modal\"); \n-        this._font = document.querySelector(\".right .fonts p\");\n-        this._slider = document.querySelector(\".slider\"); \n-        this._moon = document.querySelector(\".moon\"); \n-        this._text = document.querySelector(\"input[type='text']\"); \n-        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n-    }\n-\n-    run() {\n-        this._arrowDown.addEventListener(\"click\", () => {\n-            this._ui.arrowDownModal(); \n-        })\n-\n-        // Switch Fonts -> Select List Items in Modal View\n-        document.querySelectorAll('.modal ul li').forEach((element) => {\n-            element.addEventListener(\"click\", () => {\n-                this._ui.switchFonts(element); \n-            })\n-        })\n-\n-        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n-\n-        this._text.addEventListener('keypress', (e) => {\n-            if(e.key === \"Enter\") {\n-                if(this._text.value === \"\") {\n-                    this._ui.showTextErrorMessage(); \n-                } else {\n-                    this._ui.hideTextErrorMessage();\n-                    this._ui.createUi(this._text.value); \n-                }\n-            }\n-        })\n-    }\n-}\n-\n-class UI {\n-    constructor(body, arrowDown, modal, font, moon, text) {\n-        this.body = body\n-        this.arrowDown = arrowDown; \n-        this.modal = modal; \n-        this.font = font;\n-        this.moon = moon; \n-        this.text = text;  \n-        this.handler= new DataHandler(); \n-    }\n-\n-\n-    loadNotFound() {\n-        document.querySelector('.not-found').classList.add('flex-display')\n-    }\n-\n-    removeNotFound() {\n-        document.querySelector('.not-found').classList.remove('flex-display')\n-    }\n-\n-    createWordView() {\n-        document.querySelector('main')\n-    }\n-\n-\n-   async createUi(word) {\n-        try {\n-            let newWord = await this.handler.getWord(word); \n-            this.removeNotFound(); \n-            createWordView(); \n-        } \n-        catch {\n-            this.loadNotFound();\n-        }\n-    }\n-    \n-    arrowDownModal() {\n-        this.modal.classList.toggle(\"display\"); \n-   }\n-\n-   showTextErrorMessage() {\n-    this.text.classList.add('error'); \n-    document.querySelector('.empty').classList.add('display'); \n-   }\n-\n-   hideTextErrorMessage() {\n-    this.text.classList.remove('error'); \n-    document.querySelector('.empty').classList.remove('display'); \n-   }\n-\n-   toggleDark() {\n-    this.body.classList.toggle('dark'); \n-    this.moon.classList.toggle('dark');\n-    this.text.classList.toggle('dark'); \n-    this.modal.classList.toggle('dark'); \n-   }\n-\n-   switchFonts(element) {\n-    this.font.textContent = element.textContent; \n-    this.body.style.fontFamily = element.textContent; \n-    if(element.textContent === \"Mono\") {\n-        this.body.style.fontFamily = \"MonoSpace\"; \n-    }\n-   }\n-\n-}\n-\n-class DataHandler {\n-    constructor() {\n-        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n-    }\n-\n-    async getWord(word) {\n-        try {\n-            const res = await fetch(`${this._endpoint}${word}`)\n-            const data = await res.json();\n-            if(!res.ok) {\n-                throw new Error('Request Failed'); \n-            }\n-            return data;\n-        } catch (error) {\n-            throw error; \n-        }\n-      \n-    } \n-\n-//    async getDefinition(word) {\n-//     const res = await fetch(`${this._endpoint}${word}`)\n-//     const data = await res.json(); \n-//     console.log(data)\n-//  }\n-    // async getPartOfSpeech(word) {\n-\n-    // }\n-\n-    // async getExample(word) {\n-        \n-    // }\n-\n-    // async getSynonymn(word) {\n-\n-    // }\n-\n-\n-}\n-\n-const app = new App(); \n-const data = new DataHandler(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690122626148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     }\n \n     createWordView() {\n         let main = document.createElement('main')\n-        main.innerHTML()\n+        main.innerHTML = \n     }\n \n \n    async createUi(word) {\n"
                },
                {
                    "date": 1690122729340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         document.querySelector('.not-found').classList.remove('flex-display')\n     }\n \n     createWordView() {\n-        let main = document.createElement('main')\n+        let main = document.createElement('section')\n         main.innerHTML = \n     }\n \n \n"
                },
                {
                    "date": 1690122750630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,10 +57,18 @@\n         document.querySelector('.not-found').classList.remove('flex-display')\n     }\n \n     createWordView() {\n-        let main = document.createElement('section')\n-        main.innerHTML = \n+        let section = document.createElement('section')\n+        section.innerHTML = `\n+        \n+        <div class=\"word-group\">\n+        <h1>keyboard</h1>\n+        <p>/ˈkiːbɔːd/</p>\n+      </div>\n+      <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n+    </section>\n+        `\n     }\n \n \n    async createUi(word) {\n"
                },
                {
                    "date": 1690122764103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,15 +59,13 @@\n \n     createWordView() {\n         let section = document.createElement('section')\n         section.innerHTML = `\n-        \n         <div class=\"word-group\">\n         <h1>keyboard</h1>\n         <p>/ˈkiːbɔːd/</p>\n       </div>\n       <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n-    </section>\n         `\n     }\n \n \n"
                },
                {
                    "date": 1690122771962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,16 +56,16 @@\n     removeNotFound() {\n         document.querySelector('.not-found').classList.remove('flex-display')\n     }\n \n-    createWordView() {\n+    createWordView(word) {\n         let section = document.createElement('section')\n         section.innerHTML = `\n-        <div class=\"word-group\">\n-        <h1>keyboard</h1>\n-        <p>/ˈkiːbɔːd/</p>\n-      </div>\n-      <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n+            <div class=\"word-group\">\n+            <h1>keyboard</h1>\n+            <p>/ˈkiːbɔːd/</p>\n+        </div>\n+        <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n         `\n     }\n \n \n"
                },
                {
                    "date": 1690122783146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n     createWordView(word) {\n         let section = document.createElement('section')\n         section.innerHTML = `\n             <div class=\"word-group\">\n-            <h1>keyboard</h1>\n+            <h1>${word}</h1>\n             <p>/ˈkiːbɔːd/</p>\n         </div>\n         <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n         `\n"
                },
                {
                    "date": 1690122807041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n     removeNotFound() {\n         document.querySelector('.not-found').classList.remove('flex-display')\n     }\n \n-    createWordView(word) {\n+    createWordView(word,phonetics) {\n         let section = document.createElement('section')\n         section.innerHTML = `\n             <div class=\"word-group\">\n             <h1>${word}</h1>\n"
                },
                {
                    "date": 1690122823093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n         let section = document.createElement('section')\n         section.innerHTML = `\n             <div class=\"word-group\">\n             <h1>${word}</h1>\n-            <p>/ˈkiːbɔːd/</p>\n+            <p>${phonetics}</p>\n         </div>\n         <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n         `\n     }\n"
                },
                {
                    "date": 1690122835965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,9 @@\n             <p>${phonetics}</p>\n         </div>\n         <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n         `\n+        document.querySelector('main')\n     }\n \n \n    async createUi(word) {\n"
                },
                {
                    "date": 1690122849445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n             <p>${phonetics}</p>\n         </div>\n         <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n         `\n-        document.querySelector('main')\n+        document.querySelector('main').appendChild(section)\n     }\n \n \n    async createUi(word) {\n"
                },
                {
                    "date": 1690122861934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,17 +65,17 @@\n             <p>${phonetics}</p>\n         </div>\n         <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n         `\n-        document.querySelector('main').appendChild(section)\n+        document.querySelector('main').appendChild(section); \n     }\n \n \n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n-            createWordView(); \n+            createWordView(newWord); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690122880095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n-            createWordView(newWord); \n+            createWordView(newWord.0.word); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690122886398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n-            createWordView(newWord.0.word); \n+            createWordView(newWord[0].word, ); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690122891628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n-            createWordView(newWord[0].word, ); \n+            createWordView(newWord[0].word, newWord[0].); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690122921728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n-            createWordView(newWord[0].word, newWord[0].); \n+            createWordView(newWord[0].word, newWord[0].phonetics[1]); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690122942878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n-            createWordView(newWord[0].word, newWord[0].phonetics[1]); \n+            createWordView(newWord[0].word, newWord[0].phonetics[1].text); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690122979639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n-            createWordView(newWord[0].word, newWord[0].phonetics[1].text); \n+            // createWordView(newWord[0].word, newWord[0].phonetics[1].text); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690122991847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n+            console.log(newWord)\n             // createWordView(newWord[0].word, newWord[0].phonetics[1].text); \n         } \n         catch {\n             this.loadNotFound();\n"
                },
                {
                    "date": 1690123025402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n             console.log(newWord)\n-            // createWordView(newWord[0].word, newWord[0].phonetics[1].text); \n+            this.createWordView(newWord[0].word, newWord[0].phonetics[1].text); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690123077896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         document.querySelector('.not-found').classList.remove('flex-display')\n     }\n \n     createWordView(word,phonetics) {\n-        let section = document.createElement('section')\n+        let section = document.createElement('section'); \n         section.innerHTML = `\n             <div class=\"word-group\">\n             <h1>${word}</h1>\n             <p>${phonetics}</p>\n"
                },
                {
                    "date": 1690123123107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,10 @@\n         document.querySelector('.not-found').classList.remove('flex-display')\n     }\n \n     createWordView(word,phonetics) {\n-        let section = document.createElement('section'); \n+        let section = document.createElement('section');\n+        section.classList.add('.') \n         section.innerHTML = `\n             <div class=\"word-group\">\n             <h1>${word}</h1>\n             <p>${phonetics}</p>\n"
                },
                {
                    "date": 1690123131230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     }\n \n     createWordView(word,phonetics) {\n         let section = document.createElement('section');\n-        section.classList.add('.') \n+        section.classList.add('.word-view') \n         section.innerHTML = `\n             <div class=\"word-group\">\n             <h1>${word}</h1>\n             <p>${phonetics}</p>\n"
                },
                {
                    "date": 1690123140843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     }\n \n     createWordView(word,phonetics) {\n         let section = document.createElement('section');\n-        section.classList.add('.word-view') \n+        section.classList.add('word-view') \n         section.innerHTML = `\n             <div class=\"word-group\">\n             <h1>${word}</h1>\n             <p>${phonetics}</p>\n"
                },
                {
                    "date": 1690128255610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n             console.log(newWord)\n-            this.createWordView(newWord[0].word, newWord[0].phonetics[1].text); \n+            this.createWordView(newWord[0].word, newWord[0].phonetics); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690128297570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n             console.log(newWord)\n-            this.createWordView(newWord[0].word, newWord[0].phonetics); \n+            this.createWordView(newWord[0].word, newWord[0].phonetic); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690128363965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n             console.log(newWord)\n-            this.createWordView(newWord[0].word, newWord[0].phonetic); \n+            this.createWordView(newWord[0].word, newWord[0]); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690128369329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n             console.log(newWord)\n-            this.createWordView(newWord[0].word, newWord[0]); \n+            this.createWordView(newWord[0].word, newWord[0].phonetic); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690128403051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n             console.log(newWord)\n-            this.createWordView(newWord[0].word, newWord[0].phonetic); \n+            this.createWordView(newWord[0].word, newWord[0].phonetics[0]); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690128476489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n             console.log(newWord)\n-            this.createWordView(newWord[0].word, newWord[0].phonetics[0]); \n+            this.createWordView(newWord[0].word, newWord[0].text); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690128556525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n             console.log(newWord)\n-            this.createWordView(newWord[0].word, newWord[0].text); \n+            this.createWordView(newWord[0].word, newWord[0].phonetic); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690129054109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,9 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed'); \n             }\n-            return data;\n+            return data.word;\n         } catch (error) {\n             throw error; \n         }\n       \n"
                },
                {
                    "date": 1690129062447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,9 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed'); \n             }\n-            return data.word;\n+            return data[0].word;\n         } catch (error) {\n             throw error; \n         }\n       \n"
                },
                {
                    "date": 1690129096427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n             console.log(newWord)\n-            this.createWordView(newWord[0].word, newWord[0].phonetic); \n+            this.createWordView(newWord, newWord[0].phonetic); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690129120515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n     removeNotFound() {\n         document.querySelector('.not-found').classList.remove('flex-display')\n     }\n \n-    createWordView(word,phonetics) {\n+    createWordView(word) {\n         let section = document.createElement('section');\n         section.classList.add('word-view') \n         section.innerHTML = `\n             <div class=\"word-group\">\n"
                },
                {
                    "date": 1690129127843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n             console.log(newWord)\n-            this.createWordView(newWord, newWord[0].phonetic); \n+            this.createWordView(newWord,); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690129148955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n         section.classList.add('word-view') \n         section.innerHTML = `\n             <div class=\"word-group\">\n             <h1>${word}</h1>\n-            <p>${phonetics}</p>\n+            <p>HE</p>\n         </div>\n         <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n         `\n         document.querySelector('main').appendChild(section); \n@@ -75,9 +75,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             this.removeNotFound(); \n             console.log(newWord)\n-            this.createWordView(newWord,); \n+            this.createWordView(newWord); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690129191256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,10 +130,14 @@\n         } catch (error) {\n             throw error; \n         }\n       \n-    } \n+    }\n \n+    async getPhonetic(word) {\n+        \n+    }\n+\n //    async getDefinition(word) {\n //     const res = await fetch(`${this._endpoint}${word}`)\n //     const data = await res.json(); \n //     console.log(data)\n"
                },
                {
                    "date": 1690129218496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,9 @@\n \n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n+            let phonetic = await this.handler.getPhonetic(word)\n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord); \n         } \n@@ -133,9 +134,18 @@\n       \n     }\n \n     async getPhonetic(word) {\n-        \n+        try {\n+            const res = await fetch(`${this._endpoint}${word}`)\n+            const data = await res.json();\n+            if(!res.ok) {\n+                throw new Error('Request Failed'); \n+            }\n+            return data[0].word;\n+        } catch (error) {\n+            throw error; \n+        }\n     }\n \n //    async getDefinition(word) {\n //     const res = await fetch(`${this._endpoint}${word}`)\n"
                },
                {
                    "date": 1690129465639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,8 +117,9 @@\n \n class DataHandler {\n     constructor() {\n         this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n+        this._data = \n     }\n \n     async getWord(word) {\n         try {\n"
                },
                {
                    "date": 1690129475029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n \n class DataHandler {\n     constructor() {\n         this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n-        this._data = \n+        this._word = ''\n     }\n \n     async getWord(word) {\n         try {\n"
                },
                {
                    "date": 1690129490208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,8 +127,9 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed'); \n             }\n+            this._word = word; \n             return data[0].word;\n         } catch (error) {\n             throw error; \n         }\n"
                },
                {
                    "date": 1690129499032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed'); \n             }\n-            this._word = word; \n+            this._word = data[0]; \n             return data[0].word;\n         } catch (error) {\n             throw error; \n         }\n"
                },
                {
                    "date": 1690129525161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n \n class DataHandler {\n     constructor() {\n         this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n-        this._word = ''\n+        this._data = ''\n     }\n \n     async getWord(word) {\n         try {\n@@ -127,9 +127,9 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed'); \n             }\n-            this._word = data[0]; \n+            this._word = data[0].word; \n             return data[0].word;\n         } catch (error) {\n             throw error; \n         }\n"
                },
                {
                    "date": 1690129533543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n \n class DataHandler {\n     constructor() {\n         this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n-        this._data = ''\n+        this._data = data'\n     }\n \n     async getWord(word) {\n         try {\n"
                },
                {
                    "date": 1690129539992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n \n class DataHandler {\n     constructor() {\n         this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n-        this._data = data'\n+        this._data = data\n     }\n \n     async getWord(word) {\n         try {\n@@ -127,9 +127,9 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed'); \n             }\n-            this._word = data[0].word; \n+            this._data = data[0].word; \n             return data[0].word;\n         } catch (error) {\n             throw error; \n         }\n"
                },
                {
                    "date": 1690129566360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,17 +127,17 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed'); \n             }\n-            this._data = data[0].word; \n+            this._data = data;  \n             return data[0].word;\n         } catch (error) {\n             throw error; \n         }\n       \n     }\n \n-    async getPhonetic(word) {\n+    getPhonetic(word) {\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n             const data = await res.json();\n             if(!res.ok) {\n"
                },
                {
                    "date": 1690129571944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,9 +134,9 @@\n             throw error; \n         }\n       \n     }\n-\n+    \n     getPhonetic(word) {\n         try {\n             const res = await fetch(`${this._endpoint}${word}`)\n             const data = await res.json();\n"
                },
                {
                    "date": 1690129665621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,174 @@\n+class App {\n+    constructor() {\n+        this._body = document.querySelector(\"body\"); \n+        this._arrowDown = document.querySelector(\".arrow-down\"); \n+        this._modal = document.querySelector(\".modal\"); \n+        this._font = document.querySelector(\".right .fonts p\");\n+        this._slider = document.querySelector(\".slider\"); \n+        this._moon = document.querySelector(\".moon\"); \n+        this._text = document.querySelector(\"input[type='text']\"); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n+    }\n+\n+    run() {\n+        this._arrowDown.addEventListener(\"click\", () => {\n+            this._ui.arrowDownModal(); \n+        })\n+\n+        // Switch Fonts -> Select List Items in Modal View\n+        document.querySelectorAll('.modal ul li').forEach((element) => {\n+            element.addEventListener(\"click\", () => {\n+                this._ui.switchFonts(element); \n+            })\n+        })\n+\n+        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n+\n+        this._text.addEventListener('keypress', (e) => {\n+            if(e.key === \"Enter\") {\n+                if(this._text.value === \"\") {\n+                    this._ui.showTextErrorMessage(); \n+                } else {\n+                    this._ui.hideTextErrorMessage();\n+                    this._ui.createUi(this._text.value); \n+                }\n+            }\n+        })\n+    }\n+}\n+\n+class UI {\n+    constructor(body, arrowDown, modal, font, moon, text) {\n+        this.body = body\n+        this.arrowDown = arrowDown; \n+        this.modal = modal; \n+        this.font = font;\n+        this.moon = moon; \n+        this.text = text;  \n+        this.handler= new DataHandler(); \n+    }\n+\n+\n+    loadNotFound() {\n+        document.querySelector('.not-found').classList.add('flex-display')\n+    }\n+\n+    removeNotFound() {\n+        document.querySelector('.not-found').classList.remove('flex-display')\n+    }\n+\n+    createWordView(word) {\n+        let section = document.createElement('section');\n+        section.classList.add('word-view') \n+        section.innerHTML = `\n+            <div class=\"word-group\">\n+            <h1>${word}</h1>\n+            <p>HE</p>\n+        </div>\n+        <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n+        `\n+        document.querySelector('main').appendChild(section); \n+    }\n+\n+\n+   async createUi(word) {\n+        try {\n+            let newWord = await this.handler.getWord(word); \n+            let phonetic = await this.handler.getPhonetic(word)\n+            this.removeNotFound(); \n+            console.log(newWord)\n+            this.createWordView(newWord); \n+        } \n+        catch {\n+            this.loadNotFound();\n+        }\n+    }\n+    \n+    arrowDownModal() {\n+        this.modal.classList.toggle(\"display\"); \n+   }\n+\n+   showTextErrorMessage() {\n+    this.text.classList.add('error'); \n+    document.querySelector('.empty').classList.add('display'); \n+   }\n+\n+   hideTextErrorMessage() {\n+    this.text.classList.remove('error'); \n+    document.querySelector('.empty').classList.remove('display'); \n+   }\n+\n+   toggleDark() {\n+    this.body.classList.toggle('dark'); \n+    this.moon.classList.toggle('dark');\n+    this.text.classList.toggle('dark'); \n+    this.modal.classList.toggle('dark'); \n+   }\n+\n+   switchFonts(element) {\n+    this.font.textContent = element.textContent; \n+    this.body.style.fontFamily = element.textContent; \n+    if(element.textContent === \"Mono\") {\n+        this.body.style.fontFamily = \"MonoSpace\"; \n+    }\n+   }\n+\n+}\n+\n+class DataHandler {\n+    constructor() {\n+        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n+        this._data = data\n+    }\n+\n+    async getWord(word) {\n+        try {\n+            const res = await fetch(`${this._endpoint}${word}`)\n+            const data = await res.json();\n+            if(!res.ok) {\n+                throw new Error('Request Failed'); \n+            }\n+            this._data = data;  \n+            return data[0].word;\n+        } catch (error) {\n+            throw error; \n+        }\n+      \n+    }\n+    \n+    getPhonetic() {\n+        try {\n+            const res = await fetch(`${this._endpoint}${word}`)\n+            const data = await res.json();\n+            if(!res.ok) {\n+                throw new Error('Request Failed'); \n+            }\n+            return data[0].word;\n+        } catch (error) {\n+            throw error; \n+        }\n+    }\n+\n+//    async getDefinition(word) {\n+//     const res = await fetch(`${this._endpoint}${word}`)\n+//     const data = await res.json(); \n+//     console.log(data)\n+//  }\n+    // async getPartOfSpeech(word) {\n+\n+    // }\n+\n+    // async getExample(word) {\n+        \n+    // }\n+\n+    // async getSynonymn(word) {\n+\n+    // }\n+\n+\n+}\n+\n+const app = new App(); \n+const data = new DataHandler(); \n+app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690129675311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,13 +137,8 @@\n     }\n     \n     getPhonetic() {\n         try {\n-            const res = await fetch(`${this._endpoint}${word}`)\n-            const data = await res.json();\n-            if(!res.ok) {\n-                throw new Error('Request Failed'); \n-            }\n             return data[0].word;\n         } catch (error) {\n             throw error; \n         }\n@@ -170,179 +165,5 @@\n }\n \n const app = new App(); \n const data = new DataHandler(); \n-app.run(); \n-class App {\n-    constructor() {\n-        this._body = document.querySelector(\"body\"); \n-        this._arrowDown = document.querySelector(\".arrow-down\"); \n-        this._modal = document.querySelector(\".modal\"); \n-        this._font = document.querySelector(\".right .fonts p\");\n-        this._slider = document.querySelector(\".slider\"); \n-        this._moon = document.querySelector(\".moon\"); \n-        this._text = document.querySelector(\"input[type='text']\"); \n-        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n-    }\n-\n-    run() {\n-        this._arrowDown.addEventListener(\"click\", () => {\n-            this._ui.arrowDownModal(); \n-        })\n-\n-        // Switch Fonts -> Select List Items in Modal View\n-        document.querySelectorAll('.modal ul li').forEach((element) => {\n-            element.addEventListener(\"click\", () => {\n-                this._ui.switchFonts(element); \n-            })\n-        })\n-\n-        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n-\n-        this._text.addEventListener('keypress', (e) => {\n-            if(e.key === \"Enter\") {\n-                if(this._text.value === \"\") {\n-                    this._ui.showTextErrorMessage(); \n-                } else {\n-                    this._ui.hideTextErrorMessage();\n-                    this._ui.createUi(this._text.value); \n-                }\n-            }\n-        })\n-    }\n-}\n-\n-class UI {\n-    constructor(body, arrowDown, modal, font, moon, text) {\n-        this.body = body\n-        this.arrowDown = arrowDown; \n-        this.modal = modal; \n-        this.font = font;\n-        this.moon = moon; \n-        this.text = text;  \n-        this.handler= new DataHandler(); \n-    }\n-\n-\n-    loadNotFound() {\n-        document.querySelector('.not-found').classList.add('flex-display')\n-    }\n-\n-    removeNotFound() {\n-        document.querySelector('.not-found').classList.remove('flex-display')\n-    }\n-\n-    createWordView(word) {\n-        let section = document.createElement('section');\n-        section.classList.add('word-view') \n-        section.innerHTML = `\n-            <div class=\"word-group\">\n-            <h1>${word}</h1>\n-            <p>HE</p>\n-        </div>\n-        <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n-        `\n-        document.querySelector('main').appendChild(section); \n-    }\n-\n-\n-   async createUi(word) {\n-        try {\n-            let newWord = await this.handler.getWord(word); \n-            let phonetic = await this.handler.getPhonetic(word)\n-            this.removeNotFound(); \n-            console.log(newWord)\n-            this.createWordView(newWord); \n-        } \n-        catch {\n-            this.loadNotFound();\n-        }\n-    }\n-    \n-    arrowDownModal() {\n-        this.modal.classList.toggle(\"display\"); \n-   }\n-\n-   showTextErrorMessage() {\n-    this.text.classList.add('error'); \n-    document.querySelector('.empty').classList.add('display'); \n-   }\n-\n-   hideTextErrorMessage() {\n-    this.text.classList.remove('error'); \n-    document.querySelector('.empty').classList.remove('display'); \n-   }\n-\n-   toggleDark() {\n-    this.body.classList.toggle('dark'); \n-    this.moon.classList.toggle('dark');\n-    this.text.classList.toggle('dark'); \n-    this.modal.classList.toggle('dark'); \n-   }\n-\n-   switchFonts(element) {\n-    this.font.textContent = element.textContent; \n-    this.body.style.fontFamily = element.textContent; \n-    if(element.textContent === \"Mono\") {\n-        this.body.style.fontFamily = \"MonoSpace\"; \n-    }\n-   }\n-\n-}\n-\n-class DataHandler {\n-    constructor() {\n-        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n-        this._data = data\n-    }\n-\n-    async getWord(word) {\n-        try {\n-            const res = await fetch(`${this._endpoint}${word}`)\n-            const data = await res.json();\n-            if(!res.ok) {\n-                throw new Error('Request Failed'); \n-            }\n-            this._data = data;  \n-            return data[0].word;\n-        } catch (error) {\n-            throw error; \n-        }\n-      \n-    }\n-    \n-    getPhonetic(word) {\n-        try {\n-            const res = await fetch(`${this._endpoint}${word}`)\n-            const data = await res.json();\n-            if(!res.ok) {\n-                throw new Error('Request Failed'); \n-            }\n-            return data[0].word;\n-        } catch (error) {\n-            throw error; \n-        }\n-    }\n-\n-//    async getDefinition(word) {\n-//     const res = await fetch(`${this._endpoint}${word}`)\n-//     const data = await res.json(); \n-//     console.log(data)\n-//  }\n-    // async getPartOfSpeech(word) {\n-\n-    // }\n-\n-    // async getExample(word) {\n-        \n-    // }\n-\n-    // async getSynonymn(word) {\n-\n-    // }\n-\n-\n-}\n-\n-const app = new App(); \n-const data = new DataHandler(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690129697604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,9 +137,9 @@\n     }\n     \n     getPhonetic() {\n         try {\n-            return data[0].word;\n+            if(data[0])\n         } catch (error) {\n             throw error; \n         }\n     }\n"
                },
                {
                    "date": 1690129704090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,9 +137,9 @@\n     }\n     \n     getPhonetic() {\n         try {\n-            if(data[0])\n+            if(data[0].phonetic === undefined)\n         } catch (error) {\n             throw error; \n         }\n     }\n"
                },
                {
                    "date": 1690129787090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,13 +136,9 @@\n       \n     }\n     \n     getPhonetic() {\n-        try {\n-            if(data[0].phonetic === undefined)\n-        } catch (error) {\n-            throw error; \n-        }\n+        if(this._data[0])\n     }\n \n //    async getDefinition(word) {\n //     const res = await fetch(`${this._endpoint}${word}`)\n"
                },
                {
                    "date": 1690129830451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,8 @@\n \n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n-            let phonetic = await this.handler.getPhonetic(word)\n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord); \n         } \n@@ -136,9 +135,11 @@\n       \n     }\n     \n     getPhonetic() {\n-        if(this._data[0])\n+        if(this._data[0].phonetic === undefined) {\n+\n+        }\n     }\n \n //    async getDefinition(word) {\n //     const res = await fetch(`${this._endpoint}${word}`)\n"
                },
                {
                    "date": 1690129848943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n \n class DataHandler {\n     constructor() {\n         this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n-        this._data = data\n+        this._data = undefined\n     }\n \n     async getWord(word) {\n         try {\n"
                },
                {
                    "date": 1690129870675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n \n class DataHandler {\n     constructor() {\n         this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n-        this._data = undefined\n+        this._data = undefined;\n     }\n \n     async getWord(word) {\n         try {\n@@ -126,9 +126,10 @@\n             const data = await res.json();\n             if(!res.ok) {\n                 throw new Error('Request Failed'); \n             }\n-            this._data = data;  \n+            this._data = data; \n+            console.log(data) \n             return data[0].word;\n         } catch (error) {\n             throw error; \n         }\n"
                },
                {
                    "date": 1690129914428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n         section.classList.add('word-view') \n         section.innerHTML = `\n             <div class=\"word-group\">\n             <h1>${word}</h1>\n-            <p>HE</p>\n+            // <p>HE</p>\n         </div>\n         <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n         `\n         document.querySelector('main').appendChild(section); \n"
                },
                {
                    "date": 1690130203531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,8 @@\n         section.classList.add('word-view') \n         section.innerHTML = `\n             <div class=\"word-group\">\n             <h1>${word}</h1>\n-            // <p>HE</p>\n         </div>\n         <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n         `\n         document.querySelector('main').appendChild(section); \n@@ -137,9 +136,9 @@\n     }\n     \n     getPhonetic() {\n         if(this._data[0].phonetic === undefined) {\n-\n+            \n         }\n     }\n \n //    async getDefinition(word) {\n"
                },
                {
                    "date": 1690130210099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n     }\n     \n     getPhonetic() {\n         if(this._data[0].phonetic === undefined) {\n-            \n+            this._data[0]\n         }\n     }\n \n //    async getDefinition(word) {\n"
                },
                {
                    "date": 1690130222449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,11 @@\n     }\n     \n     getPhonetic() {\n         if(this._data[0].phonetic === undefined) {\n-            this._data[0]\n+            this._data[0].phonetics.forEach(() => {\n+                \n+            })\n         }\n     }\n \n //    async getDefinition(word) {\n"
                },
                {
                    "date": 1690130261966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n     }\n     \n     getPhonetic() {\n         if(this._data[0].phonetic === undefined) {\n-            this._data[0].phonetics.forEach(() => {\n+            this._data[0].phonetics.forEach((phonetic) => {\n                 \n             })\n         }\n     }\n"
                },
                {
                    "date": 1690130391377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,9 +137,10 @@\n     \n     getPhonetic() {\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n-                \n+                if(phonetic.audio)\n+                'https://api.dictionaryapi.dev/media/pronunciations/en/hello-uk.mp3'\n             })\n         }\n     }\n \n"
                },
                {
                    "date": 1690130409616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,9 +137,9 @@\n     \n     getPhonetic() {\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.audio)\n+                if(phonetic.text=== \"\")\n                 'https://api.dictionaryapi.dev/media/pronunciations/en/hello-uk.mp3'\n             })\n         }\n     }\n"
                },
                {
                    "date": 1690130421997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,9 +137,9 @@\n     \n     getPhonetic() {\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.text=== \"\")\n+                if(phonetic.text !== \"\" && phonetic.text)\n                 'https://api.dictionaryapi.dev/media/pronunciations/en/hello-uk.mp3'\n             })\n         }\n     }\n"
                },
                {
                    "date": 1690130436944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,10 +137,10 @@\n     \n     getPhonetic() {\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.text !== \"\" && phonetic.text)\n-                'https://api.dictionaryapi.dev/media/pronunciations/en/hello-uk.mp3'\n+                if(phonetic.text !== \"\" && phonetic.audio ===)\n+                `https://api.dictionaryapi.dev/media/pronunciations/en/hello-uk.mp3`\n             })\n         }\n     }\n \n"
                },
                {
                    "date": 1690130455538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,12 +135,13 @@\n       \n     }\n     \n     getPhonetic() {\n+        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/{}-uk.mp3`\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio ===)\n-                `https://api.dictionaryapi.dev/media/pronunciations/en/hello-uk.mp3`\n+               \n             })\n         }\n     }\n \n"
                },
                {
                    "date": 1690130490629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,13 +135,12 @@\n       \n     }\n     \n     getPhonetic() {\n-        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/{}-uk.mp3`\n+        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0]}-uk.mp3`\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio ===)\n-               \n             })\n         }\n     }\n \n"
                },
                {
                    "date": 1690130500745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n       \n     }\n     \n     getPhonetic() {\n-        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0]}-uk.mp3`\n+        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio ===)\n             })\n"
                },
                {
                    "date": 1690130506261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,11 @@\n     getPhonetic() {\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.text !== \"\" && phonetic.audio ===)\n+                if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n+                    \n+                }\n             })\n         }\n     }\n \n"
                },
                {
                    "date": 1690130626668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,11 +139,13 @@\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n-                    \n+                    return phonetic.text; \n                 }\n             })\n+        } else {\n+            return this._data.phonetic\n         }\n     }\n \n //    async getDefinition(word) {\n"
                },
                {
                    "date": 1690130660519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,10 +143,11 @@\n                     return phonetic.text; \n                 }\n             })\n         } else {\n-            return this._data.phonetic\n+            return this._data[0].phonetic; \n         }\n+        \n     }\n \n //    async getDefinition(word) {\n //     const res = await fetch(`${this._endpoint}${word}`)\n"
                },
                {
                    "date": 1690130741692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,9 +145,8 @@\n             })\n         } else {\n             return this._data[0].phonetic; \n         }\n-        \n     }\n \n //    async getDefinition(word) {\n //     const res = await fetch(`${this._endpoint}${word}`)\n"
                },
                {
                    "date": 1690130760835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,8 +142,9 @@\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n                     return phonetic.text; \n                 }\n             })\n+            return this._data[0]\n         } else {\n             return this._data[0].phonetic; \n         }\n     }\n"
                },
                {
                    "date": 1690130774735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,9 +142,10 @@\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n                     return phonetic.text; \n                 }\n             })\n-            return this._data[0]\n+            // If no Phonetic exist in array return word\n+            return this._data[0].word; \n         } else {\n             return this._data[0].phonetic; \n         }\n     }\n"
                },
                {
                    "date": 1690130829754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,8 +62,9 @@\n         section.classList.add('word-view') \n         section.innerHTML = `\n             <div class=\"word-group\">\n             <h1>${word}</h1>\n+            <p>${phonetic}</p>\n         </div>\n         <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n         `\n         document.querySelector('main').appendChild(section); \n"
                },
                {
                    "date": 1690130888253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n     removeNotFound() {\n         document.querySelector('.not-found').classList.remove('flex-display')\n     }\n \n-    createWordView(word) {\n+    createWordView(word,phonetic) {\n         let section = document.createElement('section');\n         section.classList.add('word-view') \n         section.innerHTML = `\n             <div class=\"word-group\">\n"
                },
                {
                    "date": 1690130900753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,9 @@\n \n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n+            let phonetic = this.handler.getPhonetic(); \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord); \n         } \n"
                },
                {
                    "date": 1690130966929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic(); \n             this.removeNotFound(); \n             console.log(newWord)\n-            this.createWordView(newWord); \n+            this.createWordView(newWord, phonetic); \n         } \n         catch {\n             this.loadNotFound();\n         }\n@@ -141,8 +141,9 @@\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n+                    console.log('here')\n                     return phonetic.text; \n                 }\n             })\n             // If no Phonetic exist in array return word\n"
                },
                {
                    "date": 1690130988153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,9 @@\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n-                    console.log('here')\n+                    console.log(phonetic.text)\n                     return phonetic.text; \n                 }\n             })\n             // If no Phonetic exist in array return word\n"
                },
                {
                    "date": 1690131003449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,8 @@\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n-                    console.log(phonetic.text)\n                     return phonetic.text; \n                 }\n             })\n             // If no Phonetic exist in array return word\n"
                },
                {
                    "date": 1690131032690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,9 @@\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n-                    return phonetic.text; \n+                    return phonetic.text;\n                 }\n             })\n             // If no Phonetic exist in array return word\n             return this._data[0].word; \n"
                },
                {
                    "date": 1690131093948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,8 +138,9 @@\n     }\n     \n     getPhonetic() {\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n+        let phonetic = ''\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n                     return phonetic.text;\n"
                },
                {
                    "date": 1690131111841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,9 +142,9 @@\n         let phonetic = ''\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n-                    return phonetic.text;\n+                    phonetic = phonetic.text\n                 }\n             })\n             // If no Phonetic exist in array return word\n             return this._data[0].word; \n"
                },
                {
                    "date": 1690131133994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,16 +139,17 @@\n     \n     getPhonetic() {\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n         let phonetic = ''\n+        \n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n-                    phonetic = phonetic.text\n+                    phonetic = phonetic.text; \n                 }\n             })\n             // If no Phonetic exist in array return word\n-            return this._data[0].word; \n+            return phonetic\n         } else {\n             return this._data[0].phonetic; \n         }\n     }\n"
                },
                {
                    "date": 1690131142766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,9 @@\n     }\n     \n     getPhonetic() {\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n-        let phonetic = ''\n+        let phonetic = this._data[0].word\n         \n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n"
                },
                {
                    "date": 1690131156763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,9 @@\n     }\n     \n     getPhonetic() {\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n-        let phonetic = this._data[0].word\n+        let phonetic = this._data[0].word; \n         \n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n"
                },
                {
                    "date": 1690131165149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,16 +139,15 @@\n     \n     getPhonetic() {\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n         let phonetic = this._data[0].word; \n-        \n+\n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n                     phonetic = phonetic.text; \n                 }\n             })\n-            // If no Phonetic exist in array return word\n             return phonetic\n         } else {\n             return this._data[0].phonetic; \n         }\n"
                },
                {
                    "date": 1690131322256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,9 @@\n     }\n     \n     getPhonetic() {\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n-        let phonetic = this._data[0].word; \n+        let phoneticWord = this._data[0].word; \n \n         if(this._data[0].phonetic === undefined) {\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n"
                },
                {
                    "date": 1690132087571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,19 +141,24 @@\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n         let phoneticWord = this._data[0].word; \n \n         if(this._data[0].phonetic === undefined) {\n+            // Loop Through Phonetic Data Array of Object\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n-                    phonetic = phonetic.text; \n+                    phoneticWord = phonetic.text; \n                 }\n             })\n-            return phonetic\n+            return phoneticWord\n         } else {\n             return this._data[0].phonetic; \n         }\n     }\n \n+    get definition() {\n+        \n+    }\n+\n //    async getDefinition(word) {\n //     const res = await fetch(`${this._endpoint}${word}`)\n //     const data = await res.json(); \n //     console.log(data)\n"
                },
                {
                    "date": 1690132173181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,10 +153,10 @@\n             return this._data[0].phonetic; \n         }\n     }\n \n-    get definition() {\n-        \n+    getDefinition() {\n+\n     }\n \n //    async getDefinition(word) {\n //     const res = await fetch(`${this._endpoint}${word}`)\n"
                },
                {
                    "date": 1690132375507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,12 +153,10 @@\n             return this._data[0].phonetic; \n         }\n     }\n \n-    getDefinition() {\n+    getSpee\n \n-    }\n-\n //    async getDefinition(word) {\n //     const res = await fetch(`${this._endpoint}${word}`)\n //     const data = await res.json(); \n //     console.log(data)\n"
                },
                {
                    "date": 1690135508229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,9 +153,11 @@\n             return this._data[0].phonetic; \n         }\n     }\n \n-    getSpee\n+    getSpeechPart() {\n+        \n+    }\n \n //    async getDefinition(word) {\n //     const res = await fetch(`${this._endpoint}${word}`)\n //     const data = await res.json(); \n"
                },
                {
                    "date": 1690135611083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,9 +153,9 @@\n             return this._data[0].phonetic; \n         }\n     }\n \n-    getSpeechPart() {\n+    getAudioPart() {\n         \n     }\n \n //    async getDefinition(word) {\n"
                },
                {
                    "date": 1690135628274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,9 +154,9 @@\n         }\n     }\n \n     getAudioPart() {\n-        \n+        et audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n     }\n \n //    async getDefinition(word) {\n //     const res = await fetch(`${this._endpoint}${word}`)\n"
                },
                {
                    "date": 1690135719152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,9 +154,10 @@\n         }\n     }\n \n     getAudioPart() {\n-        et audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n+        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n+        return audioEndPoint; \n     }\n \n //    async getDefinition(word) {\n //     const res = await fetch(`${this._endpoint}${word}`)\n"
                },
                {
                    "date": 1690135761446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,12 @@\n                 }\n             }\n         })\n     }\n+\n+    playAudio() {\n+        \n+    }\n }\n \n class UI {\n     constructor(body, arrowDown, modal, font, moon, text) {\n"
                },
                {
                    "date": 1690135783014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,11 +35,9 @@\n             }\n         })\n     }\n \n-    playAudio() {\n-        \n-    }\n+   \n }\n \n class UI {\n     constructor(body, arrowDown, modal, font, moon, text) {\n"
                },
                {
                    "date": 1690135843590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,8 @@\n                 }\n             }\n         })\n     }\n-\n-   \n }\n \n class UI {\n     constructor(body, arrowDown, modal, font, moon, text) {\n@@ -72,8 +70,13 @@\n         document.querySelector('main').appendChild(section); \n     }\n \n \n+    playAudio() {\n+        \n+    }\n+\n+\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic(); \n"
                },
                {
                    "date": 1690135851836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n     }\n \n \n     playAudio() {\n-        \n+            document.querySelector('')\n     }\n \n \n    async createUi(word) {\n"
                },
                {
                    "date": 1690135860273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n     }\n \n \n     playAudio() {\n-            document.querySelector('')\n+        document.querySelector('icon-play')\n     }\n \n \n    async createUi(word) {\n"
                },
                {
                    "date": 1690135925022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,11 @@\n     }\n \n \n     playAudio() {\n-        document.querySelector('icon-play')\n+        document.querySelector('icon-play').addEventListener('click', () => {\n+            \n+        })\n     }\n \n \n    async createUi(word) {\n"
                },
                {
                    "date": 1690136065067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n \n \n     playAudio() {\n         document.querySelector('icon-play').addEventListener('click', () => {\n-            \n+            new\n         })\n     }\n \n \n"
                },
                {
                    "date": 1690136072462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,8 @@\n \n \n     playAudio() {\n         document.querySelector('icon-play').addEventListener('click', () => {\n-            new\n         })\n     }\n \n \n"
                },
                {
                    "date": 1690136078424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,8 +72,9 @@\n \n \n     playAudio() {\n         document.querySelector('icon-play').addEventListener('click', () => {\n+            \n         })\n     }\n \n \n"
                },
                {
                    "date": 1690136168873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n \n \n     playAudio() {\n         document.querySelector('icon-play').addEventListener('click', () => {\n-            \n+            let audio = new Audio()\n         })\n     }\n \n \n"
                },
                {
                    "date": 1690136178367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n \n \n     playAudio() {\n         document.querySelector('icon-play').addEventListener('click', () => {\n-            let audio = new Audio()\n+            let audio = new Audio(this._data.getAudioPart())\n         })\n     }\n \n \n"
                },
                {
                    "date": 1690136199065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n \n \n     playAudio() {\n         document.querySelector('icon-play').addEventListener('click', () => {\n-            let audio = new Audio(this._data.getAudioPart())\n+            let audio = new Audio(this._handler.getAudioPart())\n         })\n     }\n \n \n"
                },
                {
                    "date": 1690136291789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,10 +72,14 @@\n \n \n     playAudio() {\n         document.querySelector('icon-play').addEventListener('click', () => {\n-            let audio = new Audio(this._handler.getAudioPart())\n+            let audio = new Audio(this._handler.getAudioPart()); \n         })\n+\n+        document.querySelector('icon-play').addEventListener('click', () => {\n+            let audio = new Audio(this._handler.getAudioPart()); \n+        })\n     }\n \n \n    async createUi(word) {\n"
                },
                {
                    "date": 1690136309980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,13 +73,10 @@\n \n     playAudio() {\n         document.querySelector('icon-play').addEventListener('click', () => {\n             let audio = new Audio(this._handler.getAudioPart()); \n+            audio.play(); \n         })\n-\n-        document.querySelector('icon-play').addEventListener('click', () => {\n-            let audio = new Audio(this._handler.getAudioPart()); \n-        })\n     }\n \n \n    async createUi(word) {\n"
                },
                {
                    "date": 1690136340267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,8 +83,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic(); \n             this.removeNotFound(); \n+            this.playAudio(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n         } \n         catch {\n"
                },
                {
                    "date": 1690136361466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,8 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic(); \n             this.removeNotFound(); \n-            this.playAudio(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n         } \n         catch {\n"
                },
                {
                    "date": 1690136372619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,12 @@\n \n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n-            let phonetic = this.handler.getPhonetic(); \n+            let phonetic = this.handler.getPhonetic();\n+            document.querySelector('icon-play').addEventListener('click', () => {\n+                let audio = new Audio(this._handler.getAudioPart()); \n+            })\n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n         } \n"
                },
                {
                    "date": 1690136390207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,12 +71,9 @@\n     }\n \n \n     playAudio() {\n-        document.querySelector('icon-play').addEventListener('click', () => {\n-            let audio = new Audio(this._handler.getAudioPart()); \n-            audio.play(); \n-        })\n+      \n     }\n \n \n    async createUi(word) {\n@@ -84,8 +81,9 @@\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n             document.querySelector('icon-play').addEventListener('click', () => {\n                 let audio = new Audio(this._handler.getAudioPart()); \n+                audio.play(); \n             })\n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n"
                },
                {
                    "date": 1690136409518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,12 +79,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n-            document.querySelector('icon-play').addEventListener('click', () => {\n-                let audio = new Audio(this._handler.getAudioPart()); \n-                audio.play(); \n-            })\n+            this.playAudio(); \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n         } \n"
                },
                {
                    "date": 1690136441449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n-            this.playAudio(); \n+            let audioData = this.handler.getAudioPart(); \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n         } \n"
                },
                {
                    "date": 1690136461712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,8 +80,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n             let audioData = this.handler.getAudioPart(); \n+            console.log(audioData)\n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n         } \n"
                },
                {
                    "date": 1690136516004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,18 +71,20 @@\n     }\n \n \n     playAudio() {\n-      \n+        document.querySelector('icon-play').addEventListener('click', () => {\n+            let audio = new Audio(this._handler.getAudioPart()); \n+            audio.play(); \n+        })\n     }\n \n \n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n-            let audioData = this.handler.getAudioPart(); \n-            console.log(audioData)\n+            this.playAudio();\n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n         } \n"
                },
                {
                    "date": 1690136553752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,12 +82,13 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n-            this.playAudio();\n+          \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n+            this.playAudio()\n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690136631571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n         document.querySelector('main').appendChild(section); \n     }\n \n \n-    playAudio() {\n+    setAudio(){\n         document.querySelector('icon-play').addEventListener('click', () => {\n             let audio = new Audio(this._handler.getAudioPart()); \n             audio.play(); \n         })\n@@ -82,13 +82,11 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n-          \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n-            this.playAudio()\n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690136643408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n         document.querySelector('main').appendChild(section); \n     }\n \n \n-    setAudio(){\n+    playAudio() {\n         document.querySelector('icon-play').addEventListener('click', () => {\n             let audio = new Audio(this._handler.getAudioPart()); \n             audio.play(); \n         })\n"
                },
                {
                    "date": 1690136673622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,16 +66,17 @@\n             <p>${phonetic}</p>\n         </div>\n         <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n         `\n-        document.querySelector('main').appendChild(section); \n+        document.querySelector('main').appendChild(section);\n+        document.querySelector('icon-play').addEventListener('click', () => {\n+            let audio = new Audio(this._handler.getAudioPart()); \n+            audio.play(); \n     }\n \n \n     playAudio() {\n-        document.querySelector('icon-play').addEventListener('click', () => {\n-            let audio = new Audio(this._handler.getAudioPart()); \n-            audio.play(); \n+       \n         })\n     }\n \n \n"
                },
                {
                    "date": 1690136682109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,14 +73,9 @@\n             audio.play(); \n     }\n \n \n-    playAudio() {\n-       \n-        })\n-    }\n \n-\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n"
                },
                {
                    "date": 1690136725597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,8 +70,9 @@\n         document.querySelector('main').appendChild(section);\n         document.querySelector('icon-play').addEventListener('click', () => {\n             let audio = new Audio(this._handler.getAudioPart()); \n             audio.play(); \n+        }); \n     }\n \n \n \n"
                },
                {
                    "date": 1690136741387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,17 +66,20 @@\n             <p>${phonetic}</p>\n         </div>\n         <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n         `\n-        document.querySelector('main').appendChild(section);\n+        document.querySelector('main').appendChild(section); \n+    }\n+\n+\n+    playAudio() {\n         document.querySelector('icon-play').addEventListener('click', () => {\n             let audio = new Audio(this._handler.getAudioPart()); \n             audio.play(); \n-        }); \n+        })\n     }\n \n \n-\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n"
                },
                {
                    "date": 1690136756043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n     }\n \n \n     playAudio() {\n-        document.querySelector('icon-play').addEventListener('click', () => {\n+        document.querySelector('.icon-play').addEventListener('click', () => {\n             let audio = new Audio(this._handler.getAudioPart()); \n             audio.play(); \n         })\n     }\n@@ -85,8 +85,9 @@\n             let phonetic = this.handler.getPhonetic();\n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n+            this.playAudio(); \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690137084406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n \n \n     playAudio() {\n         document.querySelector('.icon-play').addEventListener('click', () => {\n-            let audio = new Audio(this._handler.getAudioPart()); \n+            let audio = new Audio(this.handler.getAudioPart()); \n             audio.play(); \n         })\n     }\n \n"
                },
                {
                    "date": 1690137207031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,8 +164,17 @@\n     }\n \n     getAudioPart() {\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n+        let phoneticWord = this._data[0].word; \n+\n+        if(this._data[0].phonetic === undefined) {\n+            // Loop Through Phonetic Data Array of Object\n+            this._data[0].phonetics.forEach((phonetic) => {\n+                if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n+                    phoneticWord = phonetic.text; \n+                }\n+            })\n         return audioEndPoint; \n     }\n \n //    async getDefinition(word) {\n"
                },
                {
                    "date": 1690137228299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n \n         if(this._data[0].phonetic === undefined) {\n             // Loop Through Phonetic Data Array of Object\n             this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n+                if(phonetic.audio !=) {\n                     phoneticWord = phonetic.text; \n                 }\n             })\n         return audioEndPoint; \n"
                },
                {
                    "date": 1690137235051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n \n         if(this._data[0].phonetic === undefined) {\n             // Loop Through Phonetic Data Array of Object\n             this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.audio !=) {\n+                if(phonetic.audio != undefined) {\n                     phoneticWord = phonetic.text; \n                 }\n             })\n         return audioEndPoint; \n"
                },
                {
                    "date": 1690137246675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,14 +164,13 @@\n     }\n \n     getAudioPart() {\n         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n-        let phoneticWord = this._data[0].word; \n \n         if(this._data[0].phonetic === undefined) {\n             // Loop Through Phonetic Data Array of Object\n             this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.audio != undefined) {\n+                if(phonetic.audio != \"\") {\n                     phoneticWord = phonetic.text; \n                 }\n             })\n         return audioEndPoint; \n"
                },
                {
                    "date": 1690137252620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n         if(this._data[0].phonetic === undefined) {\n             // Loop Through Phonetic Data Array of Object\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.audio != \"\") {\n-                    phoneticWord = phonetic.text; \n+                    audioEndPoint = ; \n                 }\n             })\n         return audioEndPoint; \n     }\n"
                },
                {
                    "date": 1690137259845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n         if(this._data[0].phonetic === undefined) {\n             // Loop Through Phonetic Data Array of Object\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.audio != \"\") {\n-                    audioEndPoint = ; \n+                    audioEndPoint = phonetic.audio; \n                 }\n             })\n         return audioEndPoint; \n     }\n"
                },
                {
                    "date": 1690137299813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,15 +163,16 @@\n         }\n     }\n \n     getAudioPart() {\n-        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n+         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n+        let phoneticWord = this._data[0].word; \n \n         if(this._data[0].phonetic === undefined) {\n             // Loop Through Phonetic Data Array of Object\n             this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.audio != \"\") {\n-                    audioEndPoint = phonetic.audio; \n+                if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n+                    phoneticWord = phonetic.text; \n                 }\n             })\n         return audioEndPoint; \n     }\n"
                },
                {
                    "date": 1690137314229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,8 +195,9 @@\n     // }\n \n \n }\n+}\n \n const app = new App(); \n const data = new DataHandler(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690137340713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,8 +175,9 @@\n                 }\n             })\n         return audioEndPoint; \n     }\n+}\n \n //    async getDefinition(word) {\n //     const res = await fetch(`${this._endpoint}${word}`)\n //     const data = await res.json(); \n@@ -194,10 +195,10 @@\n \n     // }\n \n \n+\n }\n-}\n \n const app = new App(); \n const data = new DataHandler(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690137366749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n \n         if(this._data[0].phonetic === undefined) {\n             // Loop Through Phonetic Data Array of Object\n             this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n+                if(phonetic.audio === audioEndPoint) {\n                     phoneticWord = phonetic.text; \n                 }\n             })\n         return audioEndPoint; \n"
                },
                {
                    "date": 1690137384647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,10 +169,10 @@\n \n         if(this._data[0].phonetic === undefined) {\n             // Loop Through Phonetic Data Array of Object\n             this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.audio === audioEndPoint) {\n-                    phoneticWord = phonetic.text; \n+                if(phonetic.audio !== \"\") {\n+                    audioEndPoint = phonetic.audio\n                 }\n             })\n         return audioEndPoint; \n     }\n"
                },
                {
                    "date": 1690137392398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,15 +164,13 @@\n     }\n \n     getAudioPart() {\n          let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n-        let phoneticWord = this._data[0].word; \n-\n         if(this._data[0].phonetic === undefined) {\n             // Loop Through Phonetic Data Array of Object\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.audio !== \"\") {\n-                    audioEndPoint = phonetic.audio\n+                    audioEndPoint = phonetic.audio; \n                 }\n             })\n         return audioEndPoint; \n     }\n"
                },
                {
                    "date": 1690137418726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,10 +163,9 @@\n         }\n     }\n \n     getAudioPart() {\n-         let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n-        if(this._data[0].phonetic === undefined) {\n+        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n             // Loop Through Phonetic Data Array of Object\n             this._data[0].phonetics.forEach((phonetic) => {\n                 if(phonetic.audio !== \"\") {\n                     audioEndPoint = phonetic.audio; \n"
                },
                {
                    "date": 1690137456228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,10 +192,7 @@\n \n     // }\n \n \n-\n-}\n-\n const app = new App(); \n const data = new DataHandler(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690137562407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,8 +72,11 @@\n \n \n     playAudio() {\n         document.querySelector('.icon-play').addEventListener('click', () => {\n+            if(this.handler.getAudioPart()) {\n+                \n+            }\n             let audio = new Audio(this.handler.getAudioPart()); \n             audio.play(); \n         })\n     }\n"
                },
                {
                    "date": 1690137569630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n \n     playAudio() {\n         document.querySelector('.icon-play').addEventListener('click', () => {\n             if(this.handler.getAudioPart()) {\n-                \n+                console.log('Could not find source')\n             }\n             let audio = new Audio(this.handler.getAudioPart()); \n             audio.play(); \n         })\n"
                },
                {
                    "date": 1690137583467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,10 +72,11 @@\n \n \n     playAudio() {\n         document.querySelector('.icon-play').addEventListener('click', () => {\n-            if(this.handler.getAudioPart()) {\n+            if(this.handler.getAudioPart() === undefined) {\n                 console.log('Could not find source')\n+                return; \n             }\n             let audio = new Audio(this.handler.getAudioPart()); \n             audio.play(); \n         })\n"
                },
                {
                    "date": 1690137611196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,13 +72,12 @@\n \n \n     playAudio() {\n         document.querySelector('.icon-play').addEventListener('click', () => {\n-            if(this.handler.getAudioPart() === undefined) {\n-                console.log('Could not find source')\n-                return; \n+            try {\n+                let audio = new Audio(this.handler.getAudioPart()); \n             }\n-            let audio = new Audio(this.handler.getAudioPart()); \n+           \n             audio.play(); \n         })\n     }\n \n"
                },
                {
                    "date": 1690137619453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,8 +74,10 @@\n     playAudio() {\n         document.querySelector('.icon-play').addEventListener('click', () => {\n             try {\n                 let audio = new Audio(this.handler.getAudioPart()); \n+            }catch(error) {\n+                console.log(error)\n             }\n            \n             audio.play(); \n         })\n"
                },
                {
                    "date": 1690137626270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,13 +74,12 @@\n     playAudio() {\n         document.querySelector('.icon-play').addEventListener('click', () => {\n             try {\n                 let audio = new Audio(this.handler.getAudioPart()); \n+                audio.play(); \n             }catch(error) {\n                 console.log(error)\n             }\n-           \n-            audio.play(); \n         })\n     }\n \n \n"
                },
                {
                    "date": 1690137651687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n             try {\n                 let audio = new Audio(this.handler.getAudioPart()); \n                 audio.play(); \n             }catch(error) {\n-                console.log(error)\n+                console.log(KILL EM)\n             }\n         })\n     }\n \n"
                },
                {
                    "date": 1690137659978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n             try {\n                 let audio = new Audio(this.handler.getAudioPart()); \n                 audio.play(); \n             }catch(error) {\n-                console.log(KILL EM)\n+                console.log(KILL EM);\n             }\n         })\n     }\n \n"
                },
                {
                    "date": 1690137748952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,14 +72,10 @@\n \n \n     playAudio() {\n         document.querySelector('.icon-play').addEventListener('click', () => {\n-            try {\n-                let audio = new Audio(this.handler.getAudioPart()); \n-                audio.play(); \n-            }catch(error) {\n-                console.log(KILL EM);\n-            }\n+            let audio = new Audio(this.handler.getAudioPart()); \n+            audio.play(); \n         })\n     }\n \n \n"
                },
                {
                    "date": 1690137883556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,11 +172,10 @@\n                 }\n             })\n         return audioEndPoint; \n     }\n-}\n \n-//    async getDefinition(word) {\n+    //    async getDefinition(word) {\n //     const res = await fetch(`${this._endpoint}${word}`)\n //     const data = await res.json(); \n //     console.log(data)\n //  }\n@@ -192,7 +191,12 @@\n \n     // }\n \n \n+}\n+\n+\n+\n+\n const app = new App(); \n const data = new DataHandler(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690137948617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,12 +173,9 @@\n             })\n         return audioEndPoint; \n     }\n \n-    //    async getDefinition(word) {\n-//     const res = await fetch(`${this._endpoint}${word}`)\n-//     const data = await res.json(); \n-//     console.log(data)\n+\n //  }\n     // async getPartOfSpeech(word) {\n \n     // }\n"
                },
                {
                    "date": 1690137996090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,9 +173,13 @@\n             })\n         return audioEndPoint; \n     }\n \n+    getDescription() {\n+        \n+    }\n \n+\n //  }\n     // async getPartOfSpeech(word) {\n \n     // }\n"
                },
                {
                    "date": 1690138020737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,10 +173,10 @@\n             })\n         return audioEndPoint; \n     }\n \n-    getDescription() {\n-        \n+    getMeaning() {\n+\n     }\n \n \n //  }\n"
                },
                {
                    "date": 1690138041362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,8 +173,11 @@\n             })\n         return audioEndPoint; \n     }\n \n+\n+    getPartOfSpeech()\n+\n     getMeaning() {\n \n     }\n \n"
                },
                {
                    "date": 1690138059262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,9 +174,11 @@\n         return audioEndPoint; \n     }\n \n \n-    getPartOfSpeech()\n+    getPartOfSpeech() {\n+        this._data[o]\n+    }\n \n     getMeaning() {\n \n     }\n"
                },
                {
                    "date": 1690138075848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n     }\n \n \n     getPartOfSpeech() {\n-        this._data[o]\n+        this._data[0].partOfSpeech\n     }\n \n     getMeaning() {\n \n"
                },
                {
                    "date": 1690138122184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n     }\n \n \n     getPartOfSpeech() {\n-        this._data[0].partOfSpeech\n+        this._data[0].meanings\n     }\n \n     getMeaning() {\n \n"
                },
                {
                    "date": 1690138135433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n     }\n \n \n     getPartOfSpeech() {\n-        this._data[0].meanings\n+        this._data[0].meanings[0].partOfSpeech; \n     }\n \n     getMeaning() {\n \n"
                },
                {
                    "date": 1690138398498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,9 +174,9 @@\n         return audioEndPoint; \n     }\n \n \n-    getPartOfSpeech() {\n+    getPartsOfSpeech() {\n         this._data[0].meanings[0].partOfSpeech; \n     }\n \n     getMeaning() {\n"
                },
                {
                    "date": 1690138409629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n     }\n \n \n     getPartsOfSpeech() {\n-        this._data[0].meanings[0].partOfSpeech; \n+        this._data[0]\n     }\n \n     getMeaning() {\n \n"
                },
                {
                    "date": 1690138417472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n     }\n \n \n     getPartsOfSpeech() {\n-        this._data[0]\n+        this._data[0].meanings\n     }\n \n     getMeaning() {\n \n"
                },
                {
                    "date": 1690138565452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,11 @@\n     }\n \n \n     getPartsOfSpeech() {\n-        this._data[0].meanings\n+        this._data[0].meanings.forEach((element) => {\n+            \n+        })\n     }\n \n     getMeaning() {\n \n"
                },
                {
                    "date": 1690138582495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,10 +175,11 @@\n     }\n \n \n     getPartsOfSpeech() {\n-        this._data[0].meanings.forEach((element) => {\n-            \n+        partsOfSpeech()\n+        this._data[0].meanings.forEach((part) => {\n+\n         })\n     }\n \n     getMeaning() {\n"
                },
                {
                    "date": 1690138593296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n     }\n \n \n     getPartsOfSpeech() {\n-        partsOfSpeech()\n+        let parts = []\n         this._data[0].meanings.forEach((part) => {\n \n         })\n     }\n"
                },
                {
                    "date": 1690138696427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n \n     getPartsOfSpeech() {\n         let parts = []\n         this._data[0].meanings.forEach((part) => {\n-\n+            parts.push(part.partOfSpeech)\n         })\n     }\n \n     getMeaning() {\n"
                },
                {
                    "date": 1690138705160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,8 +179,9 @@\n         let parts = []\n         this._data[0].meanings.forEach((part) => {\n             parts.push(part.partOfSpeech)\n         })\n+        return parts\n     }\n \n     getMeaning() {\n \n"
                },
                {
                    "date": 1690138770952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,8 +70,11 @@\n         document.querySelector('main').appendChild(section); \n     }\n \n \n+    createPartOfSpeech()\n+\n+\n     playAudio() {\n         document.querySelector('.icon-play').addEventListener('click', () => {\n             let audio = new Audio(this.handler.getAudioPart()); \n             audio.play(); \n@@ -138,8 +141,9 @@\n                 throw new Error('Request Failed'); \n             }\n             this._data = data; \n             console.log(data) \n+        \n             return data[0].word;\n         } catch (error) {\n             throw error; \n         }\n"
                },
                {
                    "date": 1690138781920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,218 @@\n+class App {\n+    constructor() {\n+        this._body = document.querySelector(\"body\"); \n+        this._arrowDown = document.querySelector(\".arrow-down\"); \n+        this._modal = document.querySelector(\".modal\"); \n+        this._font = document.querySelector(\".right .fonts p\");\n+        this._slider = document.querySelector(\".slider\"); \n+        this._moon = document.querySelector(\".moon\"); \n+        this._text = document.querySelector(\"input[type='text']\"); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n+    }\n+\n+    run() {\n+        this._arrowDown.addEventListener(\"click\", () => {\n+            this._ui.arrowDownModal(); \n+        })\n+\n+        // Switch Fonts -> Select List Items in Modal View\n+        document.querySelectorAll('.modal ul li').forEach((element) => {\n+            element.addEventListener(\"click\", () => {\n+                this._ui.switchFonts(element); \n+            })\n+        })\n+\n+        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n+\n+        this._text.addEventListener('keypress', (e) => {\n+            if(e.key === \"Enter\") {\n+                if(this._text.value === \"\") {\n+                    this._ui.showTextErrorMessage(); \n+                } else {\n+                    this._ui.hideTextErrorMessage();\n+                    this._ui.createUi(this._text.value); \n+                }\n+            }\n+        })\n+    }\n+}\n+\n+class UI {\n+    constructor(body, arrowDown, modal, font, moon, text) {\n+        this.body = body\n+        this.arrowDown = arrowDown; \n+        this.modal = modal; \n+        this.font = font;\n+        this.moon = moon; \n+        this.text = text;  \n+        this.handler= new DataHandler(); \n+    }\n+\n+\n+    loadNotFound() {\n+        document.querySelector('.not-found').classList.add('flex-display')\n+    }\n+\n+    removeNotFound() {\n+        document.querySelector('.not-found').classList.remove('flex-display')\n+    }\n+\n+    createWordView(word,phonetic) {\n+        let section = document.createElement('section');\n+        section.classList.add('word-view') \n+        section.innerHTML = `\n+            <div class=\"word-group\">\n+            <h1>${word}</h1>\n+            <p>${phonetic}</p>\n+        </div>\n+        <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n+        `\n+        document.querySelector('main').appendChild(section); \n+    }\n+\n+\n+    createPartOfSpeech() {\n+        let section =   let section = document.createElement('section');\n+    }\n+\n+\n+    playAudio() {\n+        document.querySelector('.icon-play').addEventListener('click', () => {\n+            let audio = new Audio(this.handler.getAudioPart()); \n+            audio.play(); \n+        })\n+    }\n+\n+\n+   async createUi(word) {\n+        try {\n+            let newWord = await this.handler.getWord(word); \n+            let phonetic = this.handler.getPhonetic();\n+            this.removeNotFound(); \n+            console.log(newWord)\n+            this.createWordView(newWord, phonetic); \n+            this.playAudio(); \n+        } \n+        catch {\n+            this.loadNotFound();\n+        }\n+    }\n+    \n+    arrowDownModal() {\n+        this.modal.classList.toggle(\"display\"); \n+   }\n+\n+   showTextErrorMessage() {\n+    this.text.classList.add('error'); \n+    document.querySelector('.empty').classList.add('display'); \n+   }\n+\n+   hideTextErrorMessage() {\n+    this.text.classList.remove('error'); \n+    document.querySelector('.empty').classList.remove('display'); \n+   }\n+\n+   toggleDark() {\n+    this.body.classList.toggle('dark'); \n+    this.moon.classList.toggle('dark');\n+    this.text.classList.toggle('dark'); \n+    this.modal.classList.toggle('dark'); \n+   }\n+\n+   switchFonts(element) {\n+    this.font.textContent = element.textContent; \n+    this.body.style.fontFamily = element.textContent; \n+    if(element.textContent === \"Mono\") {\n+        this.body.style.fontFamily = \"MonoSpace\"; \n+    }\n+   }\n+\n+}\n+\n+class DataHandler {\n+    constructor() {\n+        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n+        this._data = undefined;\n+    }\n+\n+    async getWord(word) {\n+        try {\n+            const res = await fetch(`${this._endpoint}${word}`)\n+            const data = await res.json();\n+            if(!res.ok) {\n+                throw new Error('Request Failed'); \n+            }\n+            this._data = data; \n+            console.log(data) \n+        \n+            return data[0].word;\n+        } catch (error) {\n+            throw error; \n+        }\n+      \n+    }\n+    \n+    getPhonetic() {\n+        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n+        let phoneticWord = this._data[0].word; \n+\n+        if(this._data[0].phonetic === undefined) {\n+            // Loop Through Phonetic Data Array of Object\n+            this._data[0].phonetics.forEach((phonetic) => {\n+                if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n+                    phoneticWord = phonetic.text; \n+                }\n+            })\n+            return phoneticWord\n+        } else {\n+            return this._data[0].phonetic; \n+        }\n+    }\n+\n+    getAudioPart() {\n+        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n+            // Loop Through Phonetic Data Array of Object\n+            this._data[0].phonetics.forEach((phonetic) => {\n+                if(phonetic.audio !== \"\") {\n+                    audioEndPoint = phonetic.audio; \n+                }\n+            })\n+        return audioEndPoint; \n+    }\n+\n+\n+    getPartsOfSpeech() {\n+        let parts = []\n+        this._data[0].meanings.forEach((part) => {\n+            parts.push(part.partOfSpeech)\n+        })\n+        return parts\n+    }\n+\n+    getMeaning() {\n+\n+    }\n+\n+\n+//  }\n+    // async getPartOfSpeech(word) {\n+\n+    // }\n+\n+    // async getExample(word) {\n+        \n+    // }\n+\n+    // async getSynonymn(word) {\n+\n+    // }\n+\n+\n+}\n+\n+\n+\n+\n+const app = new App(); \n+const data = new DataHandler(); \n+app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690138788743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,228 +71,13 @@\n     }\n \n \n     createPartOfSpeech() {\n-        let section =   let section = document.createElement('section');\n-    }\n-\n-\n-    playAudio() {\n-        document.querySelector('.icon-play').addEventListener('click', () => {\n-            let audio = new Audio(this.handler.getAudioPart()); \n-            audio.play(); \n-        })\n-    }\n-\n-\n-   async createUi(word) {\n-        try {\n-            let newWord = await this.handler.getWord(word); \n-            let phonetic = this.handler.getPhonetic();\n-            this.removeNotFound(); \n-            console.log(newWord)\n-            this.createWordView(newWord, phonetic); \n-            this.playAudio(); \n-        } \n-        catch {\n-            this.loadNotFound();\n-        }\n-    }\n-    \n-    arrowDownModal() {\n-        this.modal.classList.toggle(\"display\"); \n-   }\n-\n-   showTextErrorMessage() {\n-    this.text.classList.add('error'); \n-    document.querySelector('.empty').classList.add('display'); \n-   }\n-\n-   hideTextErrorMessage() {\n-    this.text.classList.remove('error'); \n-    document.querySelector('.empty').classList.remove('display'); \n-   }\n-\n-   toggleDark() {\n-    this.body.classList.toggle('dark'); \n-    this.moon.classList.toggle('dark');\n-    this.text.classList.toggle('dark'); \n-    this.modal.classList.toggle('dark'); \n-   }\n-\n-   switchFonts(element) {\n-    this.font.textContent = element.textContent; \n-    this.body.style.fontFamily = element.textContent; \n-    if(element.textContent === \"Mono\") {\n-        this.body.style.fontFamily = \"MonoSpace\"; \n-    }\n-   }\n-\n-}\n-\n-class DataHandler {\n-    constructor() {\n-        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n-        this._data = undefined;\n-    }\n-\n-    async getWord(word) {\n-        try {\n-            const res = await fetch(`${this._endpoint}${word}`)\n-            const data = await res.json();\n-            if(!res.ok) {\n-                throw new Error('Request Failed'); \n-            }\n-            this._data = data; \n-            console.log(data) \n-        \n-            return data[0].word;\n-        } catch (error) {\n-            throw error; \n-        }\n-      \n-    }\n-    \n-    getPhonetic() {\n-        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n-        let phoneticWord = this._data[0].word; \n-\n-        if(this._data[0].phonetic === undefined) {\n-            // Loop Through Phonetic Data Array of Object\n-            this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n-                    phoneticWord = phonetic.text; \n-                }\n-            })\n-            return phoneticWord\n-        } else {\n-            return this._data[0].phonetic; \n-        }\n-    }\n-\n-    getAudioPart() {\n-        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n-            // Loop Through Phonetic Data Array of Object\n-            this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.audio !== \"\") {\n-                    audioEndPoint = phonetic.audio; \n-                }\n-            })\n-        return audioEndPoint; \n-    }\n-\n-\n-    getPartsOfSpeech() {\n-        let parts = []\n-        this._data[0].meanings.forEach((part) => {\n-            parts.push(part.partOfSpeech)\n-        })\n-        return parts\n-    }\n-\n-    getMeaning() {\n-\n-    }\n-\n-\n-//  }\n-    // async getPartOfSpeech(word) {\n-\n-    // }\n-\n-    // async getExample(word) {\n-        \n-    // }\n-\n-    // async getSynonymn(word) {\n-\n-    // }\n-\n-\n-}\n-\n-\n-\n-\n-const app = new App(); \n-const data = new DataHandler(); \n-app.run(); \n-class App {\n-    constructor() {\n-        this._body = document.querySelector(\"body\"); \n-        this._arrowDown = document.querySelector(\".arrow-down\"); \n-        this._modal = document.querySelector(\".modal\"); \n-        this._font = document.querySelector(\".right .fonts p\");\n-        this._slider = document.querySelector(\".slider\"); \n-        this._moon = document.querySelector(\".moon\"); \n-        this._text = document.querySelector(\"input[type='text']\"); \n-        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n-    }\n-\n-    run() {\n-        this._arrowDown.addEventListener(\"click\", () => {\n-            this._ui.arrowDownModal(); \n-        })\n-\n-        // Switch Fonts -> Select List Items in Modal View\n-        document.querySelectorAll('.modal ul li').forEach((element) => {\n-            element.addEventListener(\"click\", () => {\n-                this._ui.switchFonts(element); \n-            })\n-        })\n-\n-        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n-\n-        this._text.addEventListener('keypress', (e) => {\n-            if(e.key === \"Enter\") {\n-                if(this._text.value === \"\") {\n-                    this._ui.showTextErrorMessage(); \n-                } else {\n-                    this._ui.hideTextErrorMessage();\n-                    this._ui.createUi(this._text.value); \n-                }\n-            }\n-        })\n-    }\n-}\n-\n-class UI {\n-    constructor(body, arrowDown, modal, font, moon, text) {\n-        this.body = body\n-        this.arrowDown = arrowDown; \n-        this.modal = modal; \n-        this.font = font;\n-        this.moon = moon; \n-        this.text = text;  \n-        this.handler= new DataHandler(); \n-    }\n-\n-\n-    loadNotFound() {\n-        document.querySelector('.not-found').classList.add('flex-display')\n-    }\n-\n-    removeNotFound() {\n-        document.querySelector('.not-found').classList.remove('flex-display')\n-    }\n-\n-    createWordView(word,phonetic) {\n         let section = document.createElement('section');\n         section.classList.add('word-view') \n-        section.innerHTML = `\n-            <div class=\"word-group\">\n-            <h1>${word}</h1>\n-            <p>${phonetic}</p>\n-        </div>\n-        <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n-        `\n-        document.querySelector('main').appendChild(section); \n     }\n \n \n-    createPartOfSpeech()\n-\n-\n     playAudio() {\n         document.querySelector('.icon-play').addEventListener('click', () => {\n             let audio = new Audio(this.handler.getAudioPart()); \n             audio.play(); \n"
                },
                {
                    "date": 1690138825842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n     }\n \n \n     createPartOfSpeech() {\n-        let section = document.createElement('section');\n+        let section = document.createElement('div');\n         section.classList.add('word-view') \n     }\n \n \n"
                },
                {
                    "date": 1690138835469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,10 +71,10 @@\n     }\n \n \n     createPartOfSpeech() {\n-        let section = document.createElement('div');\n-        section.classList.add('word-view') \n+        let div = document.createElement('div');\n+        div.classList.add('word-view') \n     }\n \n \n     playAudio() {\n"
                },
                {
                    "date": 1690138849548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,13 @@\n \n \n     createPartOfSpeech() {\n         let div = document.createElement('div');\n-        div.classList.add('word-view') \n+        div.classList.add('word-view'); \n+        div.innerHTML = `\n+        \n+        \n+        `\n     }\n \n \n     playAudio() {\n"
                },
                {
                    "date": 1690138888832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,10 +74,11 @@\n     createPartOfSpeech() {\n         let div = document.createElement('div');\n         div.classList.add('word-view'); \n         div.innerHTML = `\n+        <p class=\"speech-part\">noun</p>\n+        <div class=\"grey-rule\"></div>\n         \n-        \n         `\n     }\n \n \n"
                },
                {
                    "date": 1690138911125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n \n \n     createPartOfSpeech() {\n         let div = document.createElement('div');\n-        div.classList.add('word-view'); \n+        div.classList.add('speech-part-group'); \n         div.innerHTML = `\n         <p class=\"speech-part\">noun</p>\n         <div class=\"grey-rule\"></div>\n         \n"
                },
                {
                    "date": 1690138934963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,8 @@\n         div.classList.add('speech-part-group'); \n         div.innerHTML = `\n         <p class=\"speech-part\">noun</p>\n         <div class=\"grey-rule\"></div>\n-        \n         `\n     }\n \n \n@@ -93,8 +92,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n+            let speechPart = this.handler.getPartsOfSpeech(); \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n             this.playAudio(); \n"
                },
                {
                    "date": 1690138945165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n-            let speechPart = this.handler.getPartsOfSpeech(); \n+            let speechParts = this.handler.getPartsOfSpeech(); \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n             this.playAudio(); \n"
                },
                {
                    "date": 1690138994702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n-            let speechParts = this.handler.getPartsOfSpeech(); \n+            let speechParts = this.handler.getPartsOfSpeech()[0]; \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n             this.playAudio(); \n"
                },
                {
                    "date": 1690139006178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n         document.querySelector('main').appendChild(section); \n     }\n \n \n-    createPartOfSpeech() {\n+    createPartOfSpeech(speechPart) {\n         let div = document.createElement('div');\n         div.classList.add('speech-part-group'); \n         div.innerHTML = `\n         <p class=\"speech-part\">noun</p>\n@@ -92,9 +92,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n-            let speechParts = this.handler.getPartsOfSpeech()[0]; \n+            let speechPart = this.handler.getPartsOfSpeech()[0]; \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n             this.playAudio(); \n"
                },
                {
                    "date": 1690139012558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n     createPartOfSpeech(speechPart) {\n         let div = document.createElement('div');\n         div.classList.add('speech-part-group'); \n         div.innerHTML = `\n-        <p class=\"speech-part\">noun</p>\n+        <p class=\"speech-part\">${speechPart}</p>\n         <div class=\"grey-rule\"></div>\n         `\n     }\n \n"
                },
                {
                    "date": 1690139030419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,8 +96,9 @@\n             let speechPart = this.handler.getPartsOfSpeech()[0]; \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n+            this.createPartOfSpeech(speechPart)\n             this.playAudio(); \n         } \n         catch {\n             this.loadNotFound();\n"
                },
                {
                    "date": 1690139063598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,13 +92,14 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n-            let speechPart = this.handler.getPartsOfSpeech()[0]; \n+            let speechPart = this.handler.getPartsOfSpeech()[0];\n+            console.log(speechPart) \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n-            this.createPartOfSpeech(speechPart)\n+            this.createPartOfSpeech(speechPart); \n             this.playAudio(); \n         } \n         catch {\n             this.loadNotFound();\n"
                },
                {
                    "date": 1690139116770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,8 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n             let speechPart = this.handler.getPartsOfSpeech()[0];\n-            console.log(speechPart) \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n             this.createPartOfSpeech(speechPart); \n"
                },
                {
                    "date": 1690139142773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,8 +77,9 @@\n         div.innerHTML = `\n         <p class=\"speech-part\">${speechPart}</p>\n         <div class=\"grey-rule\"></div>\n         `\n+        document.querySelector('main').appendChild(section); \n     }\n \n \n     playAudio() {\n"
                },
                {
                    "date": 1690139151662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n         div.innerHTML = `\n         <p class=\"speech-part\">${speechPart}</p>\n         <div class=\"grey-rule\"></div>\n         `\n-        document.querySelector('main').appendChild(section); \n+        document.querySelector('main').appendChild(div); \n     }\n \n \n     playAudio() {\n"
                },
                {
                    "date": 1690139236654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,9 @@\n         <div class=\"grey-rule\"></div>\n         `\n         document.querySelector('main').appendChild(div); \n     }\n+    \n \n \n     playAudio() {\n         document.querySelector('.icon-play').addEventListener('click', () => {\n"
                },
                {
                    "date": 1690139248487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,9 +197,9 @@\n         })\n         return parts\n     }\n \n-    getMeaning() {\n+    getDefinitions() {\n \n     }\n \n \n"
                },
                {
                    "date": 1690139434648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,9 +198,10 @@\n         return parts\n     }\n \n     getDefinitions() {\n-\n+        let definitions = [] \n+        this._data[0]\n     }\n \n \n //  }\n"
                },
                {
                    "date": 1690139552733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n     }\n \n     getDefinitions() {\n         let definitions = [] \n-        this._data[0]\n+        this._data[0].definitions.forEach()\n     }\n \n \n //  }\n"
                },
                {
                    "date": 1690139640157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n     }\n \n     getDefinitions() {\n         let definitions = [] \n-        this._data[0].definitions.forEach()\n+        this._data[0].definitions.forEach(definition)\n     }\n \n \n //  }\n"
                },
                {
                    "date": 1690139647025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n     }\n \n     getDefinitions() {\n         let definitions = [] \n-        this._data[0].definitions.forEach(definition)\n+        this._data[0].definitions.forEach((definition))\n     }\n \n \n //  }\n"
                },
                {
                    "date": 1690139670524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,11 @@\n     }\n \n     getDefinitions() {\n         let definitions = [] \n-        this._data[0].definitions.forEach((definition))\n+        this._data[0].definitions.forEach((key) => {\n+            definitions.push()\n+        })\n     }\n \n \n //  }\n"
                },
                {
                    "date": 1690139677435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,9 +200,9 @@\n \n     getDefinitions() {\n         let definitions = [] \n         this._data[0].definitions.forEach((key) => {\n-            definitions.push()\n+            definitions.push(key.definition)\n         })\n     }\n \n \n"
                },
                {
                    "date": 1690139783799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,10 @@\n         <div class=\"grey-rule\"></div>\n         `\n         document.querySelector('main').appendChild(div); \n     }\n+\n+    createDefinitions(definitions)\n     \n \n \n     playAudio() {\n@@ -205,8 +207,10 @@\n         })\n     }\n \n \n+\n+\n //  }\n     // async getPartOfSpeech(word) {\n \n     // }\n"
                },
                {
                    "date": 1690139798347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,20 @@\n         `\n         document.querySelector('main').appendChild(div); \n     }\n \n-    createDefinitions(definitions)\n+    createDefinitions(definitions) {\n+    //     <section class=\"description\">\n+    //     <p>Meaning</p>\n+    //     <ul> \n+    //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n+    //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n+    //       <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n+    //     </ul>\n+    //     <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n+        \n+    //   </section>\n+    }\n     \n \n \n     playAudio() {\n"
                },
                {
                    "date": 1690139807249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,246 @@\n+class App {\n+    constructor() {\n+        this._body = document.querySelector(\"body\"); \n+        this._arrowDown = document.querySelector(\".arrow-down\"); \n+        this._modal = document.querySelector(\".modal\"); \n+        this._font = document.querySelector(\".right .fonts p\");\n+        this._slider = document.querySelector(\".slider\"); \n+        this._moon = document.querySelector(\".moon\"); \n+        this._text = document.querySelector(\"input[type='text']\"); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n+    }\n+\n+    run() {\n+        this._arrowDown.addEventListener(\"click\", () => {\n+            this._ui.arrowDownModal(); \n+        })\n+\n+        // Switch Fonts -> Select List Items in Modal View\n+        document.querySelectorAll('.modal ul li').forEach((element) => {\n+            element.addEventListener(\"click\", () => {\n+                this._ui.switchFonts(element); \n+            })\n+        })\n+\n+        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n+\n+        this._text.addEventListener('keypress', (e) => {\n+            if(e.key === \"Enter\") {\n+                if(this._text.value === \"\") {\n+                    this._ui.showTextErrorMessage(); \n+                } else {\n+                    this._ui.hideTextErrorMessage();\n+                    this._ui.createUi(this._text.value); \n+                }\n+            }\n+        })\n+    }\n+}\n+\n+class UI {\n+    constructor(body, arrowDown, modal, font, moon, text) {\n+        this.body = body\n+        this.arrowDown = arrowDown; \n+        this.modal = modal; \n+        this.font = font;\n+        this.moon = moon; \n+        this.text = text;  \n+        this.handler= new DataHandler(); \n+    }\n+\n+\n+    loadNotFound() {\n+        document.querySelector('.not-found').classList.add('flex-display')\n+    }\n+\n+    removeNotFound() {\n+        document.querySelector('.not-found').classList.remove('flex-display')\n+    }\n+\n+    createWordView(word,phonetic) {\n+        let section = document.createElement('section');\n+        section.classList.add('word-view') \n+        section.innerHTML = `\n+            <div class=\"word-group\">\n+            <h1>${word}</h1>\n+            <p>${phonetic}</p>\n+        </div>\n+        <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n+        `\n+        document.querySelector('main').appendChild(section); \n+    }\n+\n+\n+    createPartOfSpeech(speechPart) {\n+        let div = document.createElement('div');\n+        div.classList.add('speech-part-group'); \n+        div.innerHTML = `\n+        <p class=\"speech-part\">${speechPart}</p>\n+        <div class=\"grey-rule\"></div>\n+        `\n+        document.querySelector('main').appendChild(div); \n+    }\n+\n+    createDefinitions(definitions) {\n+        let section = document.createElement('section');\n+    //     <section class=\"description\">\n+    //     <p>Meaning</p>\n+    //     <ul> \n+    //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n+    //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n+    //       <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n+    //     </ul>\n+    //     <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n+        \n+    //   </section>\n+    }\n+    \n+\n+\n+    playAudio() {\n+        document.querySelector('.icon-play').addEventListener('click', () => {\n+            let audio = new Audio(this.handler.getAudioPart()); \n+            audio.play(); \n+        })\n+    }\n+\n+\n+   async createUi(word) {\n+        try {\n+            let newWord = await this.handler.getWord(word); \n+            let phonetic = this.handler.getPhonetic();\n+            let speechPart = this.handler.getPartsOfSpeech()[0];\n+            this.removeNotFound(); \n+            console.log(newWord)\n+            this.createWordView(newWord, phonetic); \n+            this.createPartOfSpeech(speechPart); \n+            this.playAudio(); \n+        } \n+        catch {\n+            this.loadNotFound();\n+        }\n+    }\n+    \n+    arrowDownModal() {\n+        this.modal.classList.toggle(\"display\"); \n+   }\n+\n+   showTextErrorMessage() {\n+    this.text.classList.add('error'); \n+    document.querySelector('.empty').classList.add('display'); \n+   }\n+\n+   hideTextErrorMessage() {\n+    this.text.classList.remove('error'); \n+    document.querySelector('.empty').classList.remove('display'); \n+   }\n+\n+   toggleDark() {\n+    this.body.classList.toggle('dark'); \n+    this.moon.classList.toggle('dark');\n+    this.text.classList.toggle('dark'); \n+    this.modal.classList.toggle('dark'); \n+   }\n+\n+   switchFonts(element) {\n+    this.font.textContent = element.textContent; \n+    this.body.style.fontFamily = element.textContent; \n+    if(element.textContent === \"Mono\") {\n+        this.body.style.fontFamily = \"MonoSpace\"; \n+    }\n+   }\n+\n+}\n+\n+class DataHandler {\n+    constructor() {\n+        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n+        this._data = undefined;\n+    }\n+\n+    async getWord(word) {\n+        try {\n+            const res = await fetch(`${this._endpoint}${word}`)\n+            const data = await res.json();\n+            if(!res.ok) {\n+                throw new Error('Request Failed'); \n+            }\n+            this._data = data; \n+            console.log(data) \n+        \n+            return data[0].word;\n+        } catch (error) {\n+            throw error; \n+        }\n+      \n+    }\n+    \n+    getPhonetic() {\n+        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n+        let phoneticWord = this._data[0].word; \n+\n+        if(this._data[0].phonetic === undefined) {\n+            // Loop Through Phonetic Data Array of Object\n+            this._data[0].phonetics.forEach((phonetic) => {\n+                if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n+                    phoneticWord = phonetic.text; \n+                }\n+            })\n+            return phoneticWord\n+        } else {\n+            return this._data[0].phonetic; \n+        }\n+    }\n+\n+    getAudioPart() {\n+        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n+            // Loop Through Phonetic Data Array of Object\n+            this._data[0].phonetics.forEach((phonetic) => {\n+                if(phonetic.audio !== \"\") {\n+                    audioEndPoint = phonetic.audio; \n+                }\n+            })\n+        return audioEndPoint; \n+    }\n+\n+\n+    getPartsOfSpeech() {\n+        let parts = []\n+        this._data[0].meanings.forEach((part) => {\n+            parts.push(part.partOfSpeech)\n+        })\n+        return parts\n+    }\n+\n+    getDefinitions() {\n+        let definitions = [] \n+        this._data[0].definitions.forEach((key) => {\n+            definitions.push(key.definition)\n+        })\n+    }\n+\n+\n+\n+\n+//  }\n+    // async getPartOfSpeech(word) {\n+\n+    // }\n+\n+    // async getExample(word) {\n+        \n+    // }\n+\n+    // async getSynonymn(word) {\n+\n+    // }\n+\n+\n+}\n+\n+\n+\n+\n+const app = new App(); \n+const data = new DataHandler(); \n+app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690139815904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,10 +81,9 @@\n         document.querySelector('main').appendChild(div); \n     }\n \n     createDefinitions(definitions) {\n-        let section = document.createElement('section');\n-    //     <section class=\"description\">\n+        let section = document.createElement('description');\n     //     <p>Meaning</p>\n     //     <ul> \n     //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n     //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n@@ -242,250 +241,5 @@\n \n \n const app = new App(); \n const data = new DataHandler(); \n-app.run(); \n-class App {\n-    constructor() {\n-        this._body = document.querySelector(\"body\"); \n-        this._arrowDown = document.querySelector(\".arrow-down\"); \n-        this._modal = document.querySelector(\".modal\"); \n-        this._font = document.querySelector(\".right .fonts p\");\n-        this._slider = document.querySelector(\".slider\"); \n-        this._moon = document.querySelector(\".moon\"); \n-        this._text = document.querySelector(\"input[type='text']\"); \n-        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n-    }\n-\n-    run() {\n-        this._arrowDown.addEventListener(\"click\", () => {\n-            this._ui.arrowDownModal(); \n-        })\n-\n-        // Switch Fonts -> Select List Items in Modal View\n-        document.querySelectorAll('.modal ul li').forEach((element) => {\n-            element.addEventListener(\"click\", () => {\n-                this._ui.switchFonts(element); \n-            })\n-        })\n-\n-        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n-\n-        this._text.addEventListener('keypress', (e) => {\n-            if(e.key === \"Enter\") {\n-                if(this._text.value === \"\") {\n-                    this._ui.showTextErrorMessage(); \n-                } else {\n-                    this._ui.hideTextErrorMessage();\n-                    this._ui.createUi(this._text.value); \n-                }\n-            }\n-        })\n-    }\n-}\n-\n-class UI {\n-    constructor(body, arrowDown, modal, font, moon, text) {\n-        this.body = body\n-        this.arrowDown = arrowDown; \n-        this.modal = modal; \n-        this.font = font;\n-        this.moon = moon; \n-        this.text = text;  \n-        this.handler= new DataHandler(); \n-    }\n-\n-\n-    loadNotFound() {\n-        document.querySelector('.not-found').classList.add('flex-display')\n-    }\n-\n-    removeNotFound() {\n-        document.querySelector('.not-found').classList.remove('flex-display')\n-    }\n-\n-    createWordView(word,phonetic) {\n-        let section = document.createElement('section');\n-        section.classList.add('word-view') \n-        section.innerHTML = `\n-            <div class=\"word-group\">\n-            <h1>${word}</h1>\n-            <p>${phonetic}</p>\n-        </div>\n-        <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n-        `\n-        document.querySelector('main').appendChild(section); \n-    }\n-\n-\n-    createPartOfSpeech(speechPart) {\n-        let div = document.createElement('div');\n-        div.classList.add('speech-part-group'); \n-        div.innerHTML = `\n-        <p class=\"speech-part\">${speechPart}</p>\n-        <div class=\"grey-rule\"></div>\n-        `\n-        document.querySelector('main').appendChild(div); \n-    }\n-\n-    createDefinitions(definitions) {\n-    //     <section class=\"description\">\n-    //     <p>Meaning</p>\n-    //     <ul> \n-    //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n-    //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n-    //       <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n-    //     </ul>\n-    //     <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n-        \n-    //   </section>\n-    }\n-    \n-\n-\n-    playAudio() {\n-        document.querySelector('.icon-play').addEventListener('click', () => {\n-            let audio = new Audio(this.handler.getAudioPart()); \n-            audio.play(); \n-        })\n-    }\n-\n-\n-   async createUi(word) {\n-        try {\n-            let newWord = await this.handler.getWord(word); \n-            let phonetic = this.handler.getPhonetic();\n-            let speechPart = this.handler.getPartsOfSpeech()[0];\n-            this.removeNotFound(); \n-            console.log(newWord)\n-            this.createWordView(newWord, phonetic); \n-            this.createPartOfSpeech(speechPart); \n-            this.playAudio(); \n-        } \n-        catch {\n-            this.loadNotFound();\n-        }\n-    }\n-    \n-    arrowDownModal() {\n-        this.modal.classList.toggle(\"display\"); \n-   }\n-\n-   showTextErrorMessage() {\n-    this.text.classList.add('error'); \n-    document.querySelector('.empty').classList.add('display'); \n-   }\n-\n-   hideTextErrorMessage() {\n-    this.text.classList.remove('error'); \n-    document.querySelector('.empty').classList.remove('display'); \n-   }\n-\n-   toggleDark() {\n-    this.body.classList.toggle('dark'); \n-    this.moon.classList.toggle('dark');\n-    this.text.classList.toggle('dark'); \n-    this.modal.classList.toggle('dark'); \n-   }\n-\n-   switchFonts(element) {\n-    this.font.textContent = element.textContent; \n-    this.body.style.fontFamily = element.textContent; \n-    if(element.textContent === \"Mono\") {\n-        this.body.style.fontFamily = \"MonoSpace\"; \n-    }\n-   }\n-\n-}\n-\n-class DataHandler {\n-    constructor() {\n-        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n-        this._data = undefined;\n-    }\n-\n-    async getWord(word) {\n-        try {\n-            const res = await fetch(`${this._endpoint}${word}`)\n-            const data = await res.json();\n-            if(!res.ok) {\n-                throw new Error('Request Failed'); \n-            }\n-            this._data = data; \n-            console.log(data) \n-        \n-            return data[0].word;\n-        } catch (error) {\n-            throw error; \n-        }\n-      \n-    }\n-    \n-    getPhonetic() {\n-        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n-        let phoneticWord = this._data[0].word; \n-\n-        if(this._data[0].phonetic === undefined) {\n-            // Loop Through Phonetic Data Array of Object\n-            this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n-                    phoneticWord = phonetic.text; \n-                }\n-            })\n-            return phoneticWord\n-        } else {\n-            return this._data[0].phonetic; \n-        }\n-    }\n-\n-    getAudioPart() {\n-        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n-            // Loop Through Phonetic Data Array of Object\n-            this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.audio !== \"\") {\n-                    audioEndPoint = phonetic.audio; \n-                }\n-            })\n-        return audioEndPoint; \n-    }\n-\n-\n-    getPartsOfSpeech() {\n-        let parts = []\n-        this._data[0].meanings.forEach((part) => {\n-            parts.push(part.partOfSpeech)\n-        })\n-        return parts\n-    }\n-\n-    getDefinitions() {\n-        let definitions = [] \n-        this._data[0].definitions.forEach((key) => {\n-            definitions.push(key.definition)\n-        })\n-    }\n-\n-\n-\n-\n-//  }\n-    // async getPartOfSpeech(word) {\n-\n-    // }\n-\n-    // async getExample(word) {\n-        \n-    // }\n-\n-    // async getSynonymn(word) {\n-\n-    // }\n-\n-\n-}\n-\n-\n-\n-\n-const app = new App(); \n-const data = new DataHandler(); \n app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690139821627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,10 +89,8 @@\n     //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n     //       <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n     //     </ul>\n     //     <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n-        \n-    //   </section>\n     }\n     \n \n \n"
                },
                {
                    "date": 1690139834884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,9 @@\n     }\n \n     createDefinitions(definitions) {\n         let section = document.createElement('description');\n+        \n     //     <p>Meaning</p>\n     //     <ul> \n     //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n     //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n"
                },
                {
                    "date": 1690139865475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,10 +81,10 @@\n         document.querySelector('main').appendChild(div); \n     }\n \n     createDefinitions(definitions) {\n-        let section = document.createElement('description');\n-        \n+        let section = document.createElement('section');\n+        section.a\n     //     <p>Meaning</p>\n     //     <ul> \n     //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n     //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n"
                },
                {
                    "date": 1690139876316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n     }\n \n     createDefinitions(definitions) {\n         let section = document.createElement('section');\n-        section.a\n+        section.classList.add('definition')\n     //     <p>Meaning</p>\n     //     <ul> \n     //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n     //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n"
                },
                {
                    "date": 1690139885525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n     }\n \n     createDefinitions(definitions) {\n         let section = document.createElement('section');\n-        section.classList.add('definition')\n+        section.classList.add('description'); \n     //     <p>Meaning</p>\n     //     <ul> \n     //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n     //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n"
                },
                {
                    "date": 1690139903118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,8 +83,9 @@\n \n     createDefinitions(definitions) {\n         let section = document.createElement('section');\n         section.classList.add('description'); \n+        \n     //     <p>Meaning</p>\n     //     <ul> \n     //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n     //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n"
                },
                {
                    "date": 1690139911256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,8 @@\n \n     createDefinitions(definitions) {\n         let section = document.createElement('section');\n         section.classList.add('description'); \n-        \n     //     <p>Meaning</p>\n     //     <ul> \n     //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n     //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n"
                },
                {
                    "date": 1690139929943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,8 +83,9 @@\n \n     createDefinitions(definitions) {\n         let section = document.createElement('section');\n         section.classList.add('description'); \n+        section.classList\n     //     <p>Meaning</p>\n     //     <ul> \n     //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n     //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n"
                },
                {
                    "date": 1690139935857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,10 +82,9 @@\n     }\n \n     createDefinitions(definitions) {\n         let section = document.createElement('section');\n-        section.classList.add('description'); \n-        section.classList\n+        section.classList.add('description');\n     //     <p>Meaning</p>\n     //     <ul> \n     //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n     //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n"
                },
                {
                    "date": 1690139964293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,15 +83,18 @@\n \n     createDefinitions(definitions) {\n         let section = document.createElement('section');\n         section.classList.add('description');\n-    //     <p>Meaning</p>\n-    //     <ul> \n-    //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n-    //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n-    //       <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n-    //     </ul>\n-    //     <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n+        section.innerHTML = `\n+        //     <p>Meaning</p>\n+        //     <ul> \n+        //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n+        //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n+        //       <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n+        //     </ul>\n+          <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n+        `\n+  \n     }\n     \n \n \n"
                },
                {
                    "date": 1690139973122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,14 +84,14 @@\n     createDefinitions(definitions) {\n         let section = document.createElement('section');\n         section.classList.add('description');\n         section.innerHTML = `\n-        //     <p>Meaning</p>\n-        //     <ul> \n-        //       <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n-        //       <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n-        //       <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n-        //     </ul>\n+        <p>Meaning</p>\n+          <ul> \n+            <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n+            <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n+            <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n+          </ul>\n           <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n         `\n   \n     }\n"
                },
                {
                    "date": 1690140011725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,10 @@\n         let section = document.createElement('section');\n         section.classList.add('description');\n         section.innerHTML = `\n         <p>Meaning</p>\n-          <ul> \n+          <ul>\n+          ${definitions.forEach(element)} \n             <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n             <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n             <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n           </ul>\n"
                },
                {
                    "date": 1690140020907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,11 @@\n         section.classList.add('description');\n         section.innerHTML = `\n         <p>Meaning</p>\n           <ul>\n-          ${definitions.forEach(element)} \n+          ${definitions.forEach(element) => {\n+            \n+          }} \n             <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n             <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n             <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n           </ul>\n"
                },
                {
                    "date": 1690140041574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,11 +87,11 @@\n         section.innerHTML = `\n         <p>Meaning</p>\n           <ul>\n           ${definitions.forEach(element) => {\n-            \n+            <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n           }} \n-            <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n+          \n             <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n             <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n           </ul>\n           <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n"
                },
                {
                    "date": 1690140053668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,11 +87,11 @@\n         section.innerHTML = `\n         <p>Meaning</p>\n           <ul>\n           ${definitions.forEach(element) => {\n+            \n+          }} \n             <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n-          }} \n-          \n             <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n             <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n           </ul>\n           <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n"
                },
                {
                    "date": 1690140061939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,11 +86,9 @@\n         section.classList.add('description');\n         section.innerHTML = `\n         <p>Meaning</p>\n           <ul>\n-          ${definitions.forEach(element) => {\n-            \n-          }} \n+          ${definitions.forEach(element) => {}} \n             <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n             <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n             <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n           </ul>\n"
                },
                {
                    "date": 1690140067786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,10 +86,10 @@\n         section.classList.add('description');\n         section.innerHTML = `\n         <p>Meaning</p>\n           <ul>\n-          ${definitions.forEach(element) => {}} \n-            <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n+          <li> ${definitions.forEach(element) => {}} \n+          (etc.) A set of keys used to operate a typewriter, computer etc.</li>\n             <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n             <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n           </ul>\n           <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n"
                },
                {
                    "date": 1690140097351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,10 +86,12 @@\n         section.classList.add('description');\n         section.innerHTML = `\n         <p>Meaning</p>\n           <ul>\n-          <li> ${definitions.forEach(element) => {}} \n-          (etc.) A set of keys used to operate a typewriter, computer etc.</li>\n+          <li> ${definitions.forEach(element) => {\n+            \n+          }} </li>\n+          (etc.) A set of keys used to operate a typewriter, computer etc.\n             <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n             <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n           </ul>\n           <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n"
                },
                {
                    "date": 1690140104626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,12 +86,10 @@\n         section.classList.add('description');\n         section.innerHTML = `\n         <p>Meaning</p>\n           <ul>\n-          <li> ${definitions.forEach(element) => {\n-            \n-          }} </li>\n-          (etc.) A set of keys used to operate a typewriter, computer etc.\n+            ${definitions.forEach(element) => {}} \n+            <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n             <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n             <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n           </ul>\n           <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n"
                },
                {
                    "date": 1690140132226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n         section.classList.add('description');\n         section.innerHTML = `\n         <p>Meaning</p>\n           <ul>\n-            ${definitions.forEach(element) => {}} \n+            ${definitions.forEach(element) => {}}; \n             <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n             <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n             <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n           </ul>\n"
                },
                {
                    "date": 1690140206650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,11 @@\n         section.classList.add('description');\n         section.innerHTML = `\n         <p>Meaning</p>\n           <ul>\n-            ${definitions.forEach(element) => {}}; \n+            ${definitions.forEach(element) => {\n+                console.log(\"HELLo\")\n+            }}\n             <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n             <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n             <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n           </ul>\n"
                },
                {
                    "date": 1690140245246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,11 +86,11 @@\n         section.classList.add('description');\n         section.innerHTML = `\n         <p>Meaning</p>\n           <ul>\n-            ${definitions.forEach(element) => {\n-                console.log(\"HELLo\")\n-            }}\n+          ${definitions.forEach((element) => {\n+            <li>element</li>\n+          })}\n             <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n             <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n             <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n           </ul>\n"
                },
                {
                    "date": 1690140280233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n         section.innerHTML = `\n         <p>Meaning</p>\n           <ul>\n           ${definitions.forEach((element) => {\n-            <li>element</li>\n+            `<li> ${element} </li>`\n           })}\n             <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n             <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n             <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n"
                },
                {
                    "date": 1690140297316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,11 +89,8 @@\n           <ul>\n           ${definitions.forEach((element) => {\n             `<li> ${element} </li>`\n           })}\n-            <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n-            <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n-            <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n           </ul>\n           <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n         `\n   \n"
                },
                {
                    "date": 1690140305938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,11 +86,11 @@\n         section.classList.add('description');\n         section.innerHTML = `\n         <p>Meaning</p>\n           <ul>\n-          ${definitions.forEach((element) => {\n-            `<li> ${element} </li>`\n-          })}\n+            ${definitions.forEach((element) => {\n+                `<li> ${element} </li>`\n+            })}\n           </ul>\n           <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n         `\n   \n"
                },
                {
                    "date": 1690140330066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,8 @@\n             })}\n           </ul>\n           <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n         `\n-  \n     }\n     \n \n \n@@ -110,12 +109,14 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n             let speechPart = this.handler.getPartsOfSpeech()[0];\n+            let definitions = this.handler.getDefinitions(); \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n             this.createPartOfSpeech(speechPart); \n+            this.createDefinitions()\n             this.playAudio(); \n         } \n         catch {\n             this.loadNotFound();\n"
                },
                {
                    "date": 1690140358307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,8 +92,9 @@\n             })}\n           </ul>\n           <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n         `\n+        document.querySelector('main').appendChild(section); \n     }\n     \n \n \n@@ -114,9 +115,9 @@\n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n             this.createPartOfSpeech(speechPart); \n-            this.createDefinitions()\n+            this.createDefinitions(definitions); \n             this.playAudio(); \n         } \n         catch {\n             this.loadNotFound();\n"
                },
                {
                    "date": 1690140457872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n             this.createPartOfSpeech(speechPart); \n-            this.createDefinitions(definitions); \n+            // this.createDefinitions(definitions); \n             this.playAudio(); \n         } \n         catch {\n             this.loadNotFound();\n"
                },
                {
                    "date": 1690140464367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n             let speechPart = this.handler.getPartsOfSpeech()[0];\n-            let definitions = this.handler.getDefinitions(); \n+            // let definitions = this.handler.getDefinitions(); \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n             this.createPartOfSpeech(speechPart); \n"
                },
                {
                    "date": 1690140473223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n             let speechPart = this.handler.getPartsOfSpeech()[0];\n-            // let definitions = this.handler.getDefinitions(); \n+            let definitions = this.handler.getDefinitions(); \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n             this.createPartOfSpeech(speechPart); \n"
                },
                {
                    "date": 1690140534040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,249 @@\n+class App {\n+    constructor() {\n+        this._body = document.querySelector(\"body\"); \n+        this._arrowDown = document.querySelector(\".arrow-down\"); \n+        this._modal = document.querySelector(\".modal\"); \n+        this._font = document.querySelector(\".right .fonts p\");\n+        this._slider = document.querySelector(\".slider\"); \n+        this._moon = document.querySelector(\".moon\"); \n+        this._text = document.querySelector(\"input[type='text']\"); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n+    }\n+\n+    run() {\n+        this._arrowDown.addEventListener(\"click\", () => {\n+            this._ui.arrowDownModal(); \n+        })\n+\n+        // Switch Fonts -> Select List Items in Modal View\n+        document.querySelectorAll('.modal ul li').forEach((element) => {\n+            element.addEventListener(\"click\", () => {\n+                this._ui.switchFonts(element); \n+            })\n+        })\n+\n+        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n+\n+        this._text.addEventListener('keypress', (e) => {\n+            if(e.key === \"Enter\") {\n+                if(this._text.value === \"\") {\n+                    this._ui.showTextErrorMessage(); \n+                } else {\n+                    this._ui.hideTextErrorMessage();\n+                    this._ui.createUi(this._text.value); \n+                }\n+            }\n+        })\n+    }\n+}\n+\n+class UI {\n+    constructor(body, arrowDown, modal, font, moon, text) {\n+        this.body = body\n+        this.arrowDown = arrowDown; \n+        this.modal = modal; \n+        this.font = font;\n+        this.moon = moon; \n+        this.text = text;  \n+        this.handler= new DataHandler(); \n+    }\n+\n+\n+    loadNotFound() {\n+        document.querySelector('.not-found').classList.add('flex-display')\n+    }\n+\n+    removeNotFound() {\n+        document.querySelector('.not-found').classList.remove('flex-display')\n+    }\n+\n+    createWordView(word,phonetic) {\n+        let section = document.createElement('section');\n+        section.classList.add('word-view') \n+        section.innerHTML = `\n+            <div class=\"word-group\">\n+            <h1>${word}</h1>\n+            <p>${phonetic}</p>\n+        </div>\n+        <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n+        `\n+        document.querySelector('main').appendChild(section); \n+    }\n+\n+\n+    createPartOfSpeech(speechPart) {\n+        let div = document.createElement('div');\n+        div.classList.add('speech-part-group'); \n+        div.innerHTML = `\n+        <p class=\"speech-part\">${speechPart}</p>\n+        <div class=\"grey-rule\"></div>\n+        `\n+        document.querySelector('main').appendChild(div); \n+    }\n+\n+    createDefinitions(definitions) {\n+        let section = document.createElement('section');\n+        section.classList.add('description');\n+        section.innerHTML = `\n+        <p>Meaning</p>\n+          <ul>\n+            ${definitions.forEach((element) => {\n+                `<li> ${element} </li>`\n+            })}\n+          </ul>\n+          <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n+        `\n+        document.querySelector('main').appendChild(section); \n+    }\n+    \n+\n+\n+    playAudio() {\n+        document.querySelector('.icon-play').addEventListener('click', () => {\n+            let audio = new Audio(this.handler.getAudioPart()); \n+            audio.play(); \n+        })\n+    }\n+\n+\n+   async createUi(word) {\n+        try {\n+            let newWord = await this.handler.getWord(word); \n+            let phonetic = this.handler.getPhonetic();\n+            let speechPart = this.handler.getPartsOfSpeech()[0];\n+            let definitions = this.handler.getDefinitions(); \n+            this.removeNotFound(); \n+            console.log(newWord)\n+            this.createWordView(newWord, phonetic); \n+            this.createPartOfSpeech(speechPart); \n+            this.createDefinitions(definitions); \n+            this.playAudio(); \n+        } \n+        catch {\n+            this.loadNotFound();\n+        }\n+    }\n+    \n+    arrowDownModal() {\n+        this.modal.classList.toggle(\"display\"); \n+   }\n+\n+   showTextErrorMessage() {\n+    this.text.classList.add('error'); \n+    document.querySelector('.empty').classList.add('display'); \n+   }\n+\n+   hideTextErrorMessage() {\n+    this.text.classList.remove('error'); \n+    document.querySelector('.empty').classList.remove('display'); \n+   }\n+\n+   toggleDark() {\n+    this.body.classList.toggle('dark'); \n+    this.moon.classList.toggle('dark');\n+    this.text.classList.toggle('dark'); \n+    this.modal.classList.toggle('dark'); \n+   }\n+\n+   switchFonts(element) {\n+    this.font.textContent = element.textContent; \n+    this.body.style.fontFamily = element.textContent; \n+    if(element.textContent === \"Mono\") {\n+        this.body.style.fontFamily = \"MonoSpace\"; \n+    }\n+   }\n+\n+}\n+\n+class DataHandler {\n+    constructor() {\n+        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n+        this._data = undefined;\n+    }\n+\n+    async getWord(word) {\n+        try {\n+            const res = await fetch(`${this._endpoint}${word}`)\n+            const data = await res.json();\n+            if(!res.ok) {\n+                throw new Error('Request Failed'); \n+            }\n+            this._data = data; \n+            console.log(data) \n+        \n+            return data[0].word;\n+        } catch (error) {\n+            throw error; \n+        }\n+      \n+    }\n+    \n+    getPhonetic() {\n+        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n+        let phoneticWord = this._data[0].word; \n+\n+        if(this._data[0].phonetic === undefined) {\n+            // Loop Through Phonetic Data Array of Object\n+            this._data[0].phonetics.forEach((phonetic) => {\n+                if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n+                    phoneticWord = phonetic.text; \n+                }\n+            })\n+            return phoneticWord\n+        } else {\n+            return this._data[0].phonetic; \n+        }\n+    }\n+\n+    getAudioPart() {\n+        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n+            // Loop Through Phonetic Data Array of Object\n+            this._data[0].phonetics.forEach((phonetic) => {\n+                if(phonetic.audio !== \"\") {\n+                    audioEndPoint = phonetic.audio; \n+                }\n+            })\n+        return audioEndPoint; \n+    }\n+\n+\n+    getPartsOfSpeech() {\n+        let parts = []\n+        this._data[0].meanings.forEach((part) => {\n+            parts.push(part.partOfSpeech)\n+        })\n+        return parts\n+    }\n+\n+    getDefinitions() {\n+        let definitions = [] \n+        this._data[0].definitions.forEach((key) => {\n+            definitions.push(key.definition)\n+        })\n+    }\n+\n+\n+\n+\n+//  }\n+    // async getPartOfSpeech(word) {\n+\n+    // }\n+\n+    // async getExample(word) {\n+        \n+    // }\n+\n+    // async getSynonymn(word) {\n+\n+    // }\n+\n+\n+}\n+\n+\n+\n+\n+const app = new App(); \n+const data = new DataHandler(); \n+app.run(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690140661166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,262 +219,15 @@\n         let definitions = [] \n         this._data[0].definitions.forEach((key) => {\n             definitions.push(key.definition)\n         })\n-    }\n \n-\n-\n-\n-//  }\n-    // async getPartOfSpeech(word) {\n-\n-    // }\n-\n-    // async getExample(word) {\n-        \n-    // }\n-\n-    // async getSynonymn(word) {\n-\n-    // }\n-\n-\n-}\n-\n-\n-\n-\n-const app = new App(); \n-const data = new DataHandler(); \n-app.run(); \n-class App {\n-    constructor() {\n-        this._body = document.querySelector(\"body\"); \n-        this._arrowDown = document.querySelector(\".arrow-down\"); \n-        this._modal = document.querySelector(\".modal\"); \n-        this._font = document.querySelector(\".right .fonts p\");\n-        this._slider = document.querySelector(\".slider\"); \n-        this._moon = document.querySelector(\".moon\"); \n-        this._text = document.querySelector(\"input[type='text']\"); \n-        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n+        return definitions\n     }\n \n-    run() {\n-        this._arrowDown.addEventListener(\"click\", () => {\n-            this._ui.arrowDownModal(); \n-        })\n \n-        // Switch Fonts -> Select List Items in Modal View\n-        document.querySelectorAll('.modal ul li').forEach((element) => {\n-            element.addEventListener(\"click\", () => {\n-                this._ui.switchFonts(element); \n-            })\n-        })\n \n-        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n \n-        this._text.addEventListener('keypress', (e) => {\n-            if(e.key === \"Enter\") {\n-                if(this._text.value === \"\") {\n-                    this._ui.showTextErrorMessage(); \n-                } else {\n-                    this._ui.hideTextErrorMessage();\n-                    this._ui.createUi(this._text.value); \n-                }\n-            }\n-        })\n-    }\n-}\n-\n-class UI {\n-    constructor(body, arrowDown, modal, font, moon, text) {\n-        this.body = body\n-        this.arrowDown = arrowDown; \n-        this.modal = modal; \n-        this.font = font;\n-        this.moon = moon; \n-        this.text = text;  \n-        this.handler= new DataHandler(); \n-    }\n-\n-\n-    loadNotFound() {\n-        document.querySelector('.not-found').classList.add('flex-display')\n-    }\n-\n-    removeNotFound() {\n-        document.querySelector('.not-found').classList.remove('flex-display')\n-    }\n-\n-    createWordView(word,phonetic) {\n-        let section = document.createElement('section');\n-        section.classList.add('word-view') \n-        section.innerHTML = `\n-            <div class=\"word-group\">\n-            <h1>${word}</h1>\n-            <p>${phonetic}</p>\n-        </div>\n-        <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n-        `\n-        document.querySelector('main').appendChild(section); \n-    }\n-\n-\n-    createPartOfSpeech(speechPart) {\n-        let div = document.createElement('div');\n-        div.classList.add('speech-part-group'); \n-        div.innerHTML = `\n-        <p class=\"speech-part\">${speechPart}</p>\n-        <div class=\"grey-rule\"></div>\n-        `\n-        document.querySelector('main').appendChild(div); \n-    }\n-\n-    createDefinitions(definitions) {\n-        let section = document.createElement('section');\n-        section.classList.add('description');\n-        section.innerHTML = `\n-        <p>Meaning</p>\n-          <ul>\n-            ${definitions.forEach((element) => {\n-                `<li> ${element} </li>`\n-            })}\n-          </ul>\n-          <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n-        `\n-        document.querySelector('main').appendChild(section); \n-    }\n-    \n-\n-\n-    playAudio() {\n-        document.querySelector('.icon-play').addEventListener('click', () => {\n-            let audio = new Audio(this.handler.getAudioPart()); \n-            audio.play(); \n-        })\n-    }\n-\n-\n-   async createUi(word) {\n-        try {\n-            let newWord = await this.handler.getWord(word); \n-            let phonetic = this.handler.getPhonetic();\n-            let speechPart = this.handler.getPartsOfSpeech()[0];\n-            let definitions = this.handler.getDefinitions(); \n-            this.removeNotFound(); \n-            console.log(newWord)\n-            this.createWordView(newWord, phonetic); \n-            this.createPartOfSpeech(speechPart); \n-            // this.createDefinitions(definitions); \n-            this.playAudio(); \n-        } \n-        catch {\n-            this.loadNotFound();\n-        }\n-    }\n-    \n-    arrowDownModal() {\n-        this.modal.classList.toggle(\"display\"); \n-   }\n-\n-   showTextErrorMessage() {\n-    this.text.classList.add('error'); \n-    document.querySelector('.empty').classList.add('display'); \n-   }\n-\n-   hideTextErrorMessage() {\n-    this.text.classList.remove('error'); \n-    document.querySelector('.empty').classList.remove('display'); \n-   }\n-\n-   toggleDark() {\n-    this.body.classList.toggle('dark'); \n-    this.moon.classList.toggle('dark');\n-    this.text.classList.toggle('dark'); \n-    this.modal.classList.toggle('dark'); \n-   }\n-\n-   switchFonts(element) {\n-    this.font.textContent = element.textContent; \n-    this.body.style.fontFamily = element.textContent; \n-    if(element.textContent === \"Mono\") {\n-        this.body.style.fontFamily = \"MonoSpace\"; \n-    }\n-   }\n-\n-}\n-\n-class DataHandler {\n-    constructor() {\n-        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n-        this._data = undefined;\n-    }\n-\n-    async getWord(word) {\n-        try {\n-            const res = await fetch(`${this._endpoint}${word}`)\n-            const data = await res.json();\n-            if(!res.ok) {\n-                throw new Error('Request Failed'); \n-            }\n-            this._data = data; \n-            console.log(data) \n-        \n-            return data[0].word;\n-        } catch (error) {\n-            throw error; \n-        }\n-      \n-    }\n-    \n-    getPhonetic() {\n-        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n-        let phoneticWord = this._data[0].word; \n-\n-        if(this._data[0].phonetic === undefined) {\n-            // Loop Through Phonetic Data Array of Object\n-            this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n-                    phoneticWord = phonetic.text; \n-                }\n-            })\n-            return phoneticWord\n-        } else {\n-            return this._data[0].phonetic; \n-        }\n-    }\n-\n-    getAudioPart() {\n-        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n-            // Loop Through Phonetic Data Array of Object\n-            this._data[0].phonetics.forEach((phonetic) => {\n-                if(phonetic.audio !== \"\") {\n-                    audioEndPoint = phonetic.audio; \n-                }\n-            })\n-        return audioEndPoint; \n-    }\n-\n-\n-    getPartsOfSpeech() {\n-        let parts = []\n-        this._data[0].meanings.forEach((part) => {\n-            parts.push(part.partOfSpeech)\n-        })\n-        return parts\n-    }\n-\n-    getDefinitions() {\n-        let definitions = [] \n-        this._data[0].definitions.forEach((key) => {\n-            definitions.push(key.definition)\n-        })\n-    }\n-\n-\n-\n-\n //  }\n     // async getPartOfSpeech(word) {\n \n     // }\n"
                },
                {
                    "date": 1690140742629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n     }\n \n     getDefinitions() {\n         let definitions = [] \n-        this._data[0].definitions.forEach((key) => {\n+        this._data[0].meanings.forEach((key) => {\n             definitions.push(key.definition)\n         })\n \n         return definitions\n"
                },
                {
                    "date": 1690140929837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n     }\n \n     getDefinitions() {\n         let definitions = [] \n-        this._data[0].meanings.forEach((key) => {\n+        this._data[0].meanings.definitions.forEach((key) => {\n             definitions.push(key.definition)\n         })\n \n         return definitions\n"
                },
                {
                    "date": 1690142051997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,20 +214,14 @@\n         })\n         return parts\n     }\n \n-    getDefinitions() {\n-        let definitions = [] \n-        this._data[0].meanings.definitions.forEach((key) => {\n-            definitions.push(key.definition)\n-        })\n-\n-        return definitions\n+    getMeaning() {\n+        \n     }\n \n \n \n-\n //  }\n     // async getPartOfSpeech(word) {\n \n     // }\n"
                },
                {
                    "date": 1690142058095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,9 +215,10 @@\n         return parts\n     }\n \n     getMeaning() {\n-        \n+        meanings = [] \n+        this._data[0]\n     }\n \n \n \n"
                },
                {
                    "date": 1690142088068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n     }\n \n     getMeaning() {\n         meanings = [] \n-        this._data[0]\n+        this._data[0].meanings.forEach((part))\n     }\n \n \n \n"
                },
                {
                    "date": 1690142093559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,11 @@\n     }\n \n     getMeaning() {\n         meanings = [] \n-        this._data[0].meanings.forEach((part))\n+        this._data[0].meanings.forEach((part) => {\n+            \n+        })\n     }\n \n \n \n"
                },
                {
                    "date": 1690142104359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,10 +216,10 @@\n     }\n \n     getMeaning() {\n         meanings = [] \n-        this._data[0].meanings.forEach((part) => {\n-            \n+        this._data[0].meanings.forEach((meaning) => {\n+            meanings.push(meaning)\n         })\n     }\n \n \n"
                },
                {
                    "date": 1690142115828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n             let speechPart = this.handler.getPartsOfSpeech()[0];\n-            let definitions = this.handler.getDefinitions(); \n+            let definitions = this.handler.getMeaning();  \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n             this.createPartOfSpeech(speechPart); \n"
                },
                {
                    "date": 1690142266766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,10 +109,12 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n+            let definitions = this.handler.getMeaning(); \n             let speechPart = this.handler.getPartsOfSpeech()[0];\n-            let definitions = this.handler.getMeaning();  \n+           \n+\n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n             this.createPartOfSpeech(speechPart); \n"
                },
                {
                    "date": 1690142274382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n-            let definitions = this.handler.getMeaning(); \n+            let meanings = this.handler.getMeaning(); \n             let speechPart = this.handler.getPartsOfSpeech()[0];\n            \n \n             this.removeNotFound(); \n"
                },
                {
                    "date": 1690142294847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,8 +110,11 @@\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n             let meanings = this.handler.getMeaning(); \n+            meanings.forEach((meaning) => {\n+                \n+            })\n             let speechPart = this.handler.getPartsOfSpeech()[0];\n            \n \n             this.removeNotFound(); \n"
                },
                {
                    "date": 1690142365751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n             let meanings = this.handler.getMeaning(); \n             meanings.forEach((meaning) => {\n-                \n+\n             })\n             let speechPart = this.handler.getPartsOfSpeech()[0];\n            \n \n@@ -211,16 +211,8 @@\n         return audioEndPoint; \n     }\n \n \n-    getPartsOfSpeech() {\n-        let parts = []\n-        this._data[0].meanings.forEach((part) => {\n-            parts.push(part.partOfSpeech)\n-        })\n-        return parts\n-    }\n-\n     getMeaning() {\n         meanings = [] \n         this._data[0].meanings.forEach((meaning) => {\n             meanings.push(meaning)\n"
                },
                {
                    "date": 1690142378826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,12 +111,12 @@\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n             let meanings = this.handler.getMeaning(); \n             meanings.forEach((meaning) => {\n-\n+                let speechPart = this.handler.getPartsOfSpeech()[0];\n             })\n-            let speechPart = this.handler.getPartsOfSpeech()[0];\n            \n+           \n \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n@@ -209,10 +209,8 @@\n                 }\n             })\n         return audioEndPoint; \n     }\n-\n-\n     getMeaning() {\n         meanings = [] \n         this._data[0].meanings.forEach((meaning) => {\n             meanings.push(meaning)\n"
                },
                {
                    "date": 1690142432145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n             let meanings = this.handler.getMeaning(); \n             meanings.forEach((meaning) => {\n-                let speechPart = this.handler.getPartsOfSpeech()[0];\n+                let speechPart = meaning.partOfSpeech;\n             })\n            \n            \n \n"
                },
                {
                    "date": 1690142473830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,10 +114,8 @@\n             meanings.forEach((meaning) => {\n                 let speechPart = meaning.partOfSpeech;\n             })\n            \n-           \n-\n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n             this.createPartOfSpeech(speechPart); \n"
                },
                {
                    "date": 1690142593335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,14 +112,15 @@\n             let phonetic = this.handler.getPhonetic();\n             let meanings = this.handler.getMeaning(); \n             meanings.forEach((meaning) => {\n                 let speechPart = meaning.partOfSpeech;\n+                this.createPartOfSpeech(speechPart); \n             })\n            \n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n-            this.createPartOfSpeech(speechPart); \n+           \n             this.createDefinitions(definitions); \n             this.playAudio(); \n         } \n         catch {\n"
                },
                {
                    "date": 1690142751684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -213,8 +213,10 @@\n         meanings = [] \n         this._data[0].meanings.forEach((meaning) => {\n             meanings.push(meaning)\n         })\n+\n+        return meanings; \n     }\n \n \n \n"
                },
                {
                    "date": 1690142766486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -213,9 +213,8 @@\n         meanings = [] \n         this._data[0].meanings.forEach((meaning) => {\n             meanings.push(meaning)\n         })\n-\n         return meanings; \n     }\n \n \n"
                },
                {
                    "date": 1690142782596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,11 +209,11 @@\n             })\n         return audioEndPoint; \n     }\n     getMeaning() {\n-        meanings = [] \n+        meaningList = [] \n         this._data[0].meanings.forEach((meaning) => {\n-            meanings.push(meaning)\n+            meain.push(meaning)\n         })\n         return meanings; \n     }\n \n"
                },
                {
                    "date": 1690142795619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -211,9 +211,9 @@\n     }\n     getMeaning() {\n         meaningList = [] \n         this._data[0].meanings.forEach((meaning) => {\n-            meain.push(meaning)\n+            meaningList.push(meaning)\n         })\n         return meanings; \n     }\n \n"
                },
                {
                    "date": 1690143078274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,13 +209,13 @@\n             })\n         return audioEndPoint; \n     }\n     getMeaning() {\n-        meaningList = [] \n+        let meaningList = [] \n         this._data[0].meanings.forEach((meaning) => {\n             meaningList.push(meaning)\n         })\n-        return meanings; \n+        return meaningList; \n     }\n \n \n \n"
                },
                {
                    "date": 1690143220676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,20 +109,21 @@\n    async createUi(word) {\n         try {\n             let newWord = await this.handler.getWord(word); \n             let phonetic = this.handler.getPhonetic();\n-            let meanings = this.handler.getMeaning(); \n-            meanings.forEach((meaning) => {\n-                let speechPart = meaning.partOfSpeech;\n-                this.createPartOfSpeech(speechPart); \n-            })\n-           \n+            let meanings = this.handler.getMeaning();\n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n            \n             this.createDefinitions(definitions); \n             this.playAudio(); \n+            meanings.forEach((meaning) => {\n+                let speechPart = meaning.partOfSpeech;\n+                this.createPartOfSpeech(speechPart); \n+            })\n+           \n+          \n         } \n         catch {\n             this.loadNotFound();\n         }\n"
                },
                {
                    "date": 1690143256544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n             let meanings = this.handler.getMeaning();\n             this.removeNotFound(); \n             console.log(newWord)\n             this.createWordView(newWord, phonetic); \n-            this.createDefinitions(definitions); \n+            // this.createDefinitions(definitions); \n             this.playAudio(); \n             meanings.forEach((meaning) => {\n                 let speechPart = meaning.partOfSpeech;\n                 this.createPartOfSpeech(speechPart); \n"
                },
                {
                    "date": 1690143428731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,241 @@\n+class App {\n+    constructor() {\n+        this._body = document.querySelector(\"body\"); \n+        this._arrowDown = document.querySelector(\".arrow-down\"); \n+        this._modal = document.querySelector(\".modal\"); \n+        this._font = document.querySelector(\".right .fonts p\");\n+        this._slider = document.querySelector(\".slider\"); \n+        this._moon = document.querySelector(\".moon\"); \n+        this._text = document.querySelector(\"input[type='text']\"); \n+        this._ui = new UI(this._body, this._arrowDown, this._modal, this._font, this._moon, this._text); \n+    }\n+\n+    run() {\n+        this._arrowDown.addEventListener(\"click\", () => {\n+            this._ui.arrowDownModal(); \n+        })\n+\n+        // Switch Fonts -> Select List Items in Modal View\n+        document.querySelectorAll('.modal ul li').forEach((element) => {\n+            element.addEventListener(\"click\", () => {\n+                this._ui.switchFonts(element); \n+            })\n+        })\n+\n+        this._slider.addEventListener('click', this._ui.toggleDark.bind(this._ui))\n+\n+        this._text.addEventListener('keypress', (e) => {\n+            if(e.key === \"Enter\") {\n+                if(this._text.value === \"\") {\n+                    this._ui.showTextErrorMessage(); \n+                } else {\n+                    this._ui.hideTextErrorMessage();\n+                    this._ui.createUi(this._text.value); \n+                }\n+            }\n+        })\n+    }\n+}\n+\n+class UI {\n+    constructor(body, arrowDown, modal, font, moon, text) {\n+        this.body = body\n+        this.arrowDown = arrowDown; \n+        this.modal = modal; \n+        this.font = font;\n+        this.moon = moon; \n+        this.text = text;  \n+        this.handler= new DataHandler(); \n+    }\n+\n+\n+    loadNotFound() {\n+        document.querySelector('.not-found').classList.add('flex-display')\n+    }\n+\n+    removeNotFound() {\n+        document.querySelector('.not-found').classList.remove('flex-display')\n+    }\n+\n+    createWordView(word,phonetic) {\n+        let section = document.createElement('section');\n+        section.classList.add('word-view') \n+        section.innerHTML = `\n+            <div class=\"word-group\">\n+            <h1>${word}</h1>\n+            <p>${phonetic}</p>\n+        </div>\n+        <img class=\"icon-play\" src=\"assets/images/icon-play.svg\" alt=\"icon-play\">\n+        `\n+        document.querySelector('main').appendChild(section); \n+    }\n+\n+\n+    createPartOfSpeech(speechPart) {\n+        let div = document.createElement('div');\n+        div.classList.add('speech-part-group'); \n+        div.innerHTML = `\n+        <p class=\"speech-part\">${speechPart}</p>\n+        <div class=\"grey-rule\"></div>\n+        `\n+        document.querySelector('main').appendChild(div); \n+    }\n+\n+    createDefinitions(definitions) {\n+        let section = document.createElement('section');\n+        section.classList.add('description');\n+        section.innerHTML = `\n+        <p>Meaning</p>\n+          <ul>\n+            ${definitions.forEach((element) => {\n+                `<li> ${element} </li>`\n+            })}\n+          </ul>\n+          <p class=\"synonymn\">Synonyms <span>electrionic keyboard</span></p>\n+        `\n+        document.querySelector('main').appendChild(section); \n+    }\n+    \n+\n+\n+    playAudio() {\n+        document.querySelector('.icon-play').addEventListener('click', () => {\n+            let audio = new Audio(this.handler.getAudioPart()); \n+            audio.play(); \n+        })\n+    }\n+\n+\n+   async createUi(word) {\n+        try {\n+            let newWord = await this.handler.getWord(word); \n+            let phonetic = this.handler.getPhonetic();\n+            let meanings = this.handler.getMeaning();\n+            this.removeNotFound(); \n+            console.log(newWord)\n+            this.createWordView(newWord, phonetic); \n+            this.playAudio(); \n+            meanings.forEach((meaning) => {\n+                let speechPart = meaning.partOfSpeech;\n+                this.createPartOfSpeech(speechPart); \n+                this.createDefinitions(meaning.definitions)\n+            })\n+        } \n+        catch {\n+            this.loadNotFound();\n+        }\n+    }\n+    \n+    arrowDownModal() {\n+        this.modal.classList.toggle(\"display\"); \n+   }\n+\n+   showTextErrorMessage() {\n+    this.text.classList.add('error'); \n+    document.querySelector('.empty').classList.add('display'); \n+   }\n+\n+   hideTextErrorMessage() {\n+    this.text.classList.remove('error'); \n+    document.querySelector('.empty').classList.remove('display'); \n+   }\n+\n+   toggleDark() {\n+    this.body.classList.toggle('dark'); \n+    this.moon.classList.toggle('dark');\n+    this.text.classList.toggle('dark'); \n+    this.modal.classList.toggle('dark'); \n+   }\n+\n+   switchFonts(element) {\n+    this.font.textContent = element.textContent; \n+    this.body.style.fontFamily = element.textContent; \n+    if(element.textContent === \"Mono\") {\n+        this.body.style.fontFamily = \"MonoSpace\"; \n+    }\n+   }\n+\n+}\n+\n+class DataHandler {\n+    constructor() {\n+        this._endpoint = `https://api.dictionaryapi.dev/api/v2/entries/en/`; \n+        this._data = undefined;\n+    }\n+\n+    async getWord(word) {\n+        try {\n+            const res = await fetch(`${this._endpoint}${word}`)\n+            const data = await res.json();\n+            if(!res.ok) {\n+                throw new Error('Request Failed'); \n+            }\n+            this._data = data; \n+            console.log(data) \n+        \n+            return data[0].word;\n+        } catch (error) {\n+            throw error; \n+        }\n+      \n+    }\n+    \n+    getPhonetic() {\n+        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n+        let phoneticWord = this._data[0].word; \n+\n+        if(this._data[0].phonetic === undefined) {\n+            // Loop Through Phonetic Data Array of Object\n+            this._data[0].phonetics.forEach((phonetic) => {\n+                if(phonetic.text !== \"\" && phonetic.audio === audioEndPoint) {\n+                    phoneticWord = phonetic.text; \n+                }\n+            })\n+            return phoneticWord\n+        } else {\n+            return this._data[0].phonetic; \n+        }\n+    }\n+\n+    getAudioPart() {\n+        let audioEndPoint =  `https://api.dictionaryapi.dev/media/pronunciations/en/${this._data[0].word}-uk.mp3`\n+            // Loop Through Phonetic Data Array of Object\n+            this._data[0].phonetics.forEach((phonetic) => {\n+                if(phonetic.audio !== \"\") {\n+                    audioEndPoint = phonetic.audio; \n+                }\n+            })\n+        return audioEndPoint; \n+    }\n+    getMeaning() {\n+        let meaningList = [] \n+        this._data[0].meanings.forEach((meaning) => {\n+            meaningList.push(meaning)\n+        })\n+        return meaningList; \n+    }\n+\n+\n+\n+//  }\n+    // async getPartOfSpeech(word) {\n+\n+    // }\n+\n+    // async getExample(word) {\n+        \n+    // }\n+\n+    // async getSynonymn(word) {\n+\n+    // }\n+\n+\n+}\n+\n+\n+\n+\n+const app = new App(); \n+const data = new DataHandler(); \n+app.run(); \n\\ No newline at end of file\n"
                }
            ],
            "date": 1689876012195,
            "name": "Commit-0",
            "content": ""
        }
    ]
}